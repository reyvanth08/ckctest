{"version":3,"sources":["webpack:///./src/app/lists/lists.component.html","webpack:///./src/app/lists/lists.component.scss","webpack:///./src/app/lists/lists.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,umBAAumB,omCAAomC,UAAU,qoCAAqoC,UAAU,ihBAAihB,8yBAA8yB,UAAU,o4BAAo4B,mCAAmC,qDAAqD,WAAW,uDAAuD,YAAY,uDAAuD,YAAY,uDAAuD,cAAc,07BAA07B,gBAAgB,6NAA6N,umFAAumF,mDAAmD,4lBAA4lB,oDAAoD,0uBAA0uB,uDAAuD,8tBAA8tB,sDAAsD,i+CAAi+C,qLAAqL,aAAa,gGAAgG,iBAAiB,aAAa,kBAAkB,gFAAgF,cAAc,4RAA4R,qBAAqB,iOAAiO,aAAa,+FAA+F,iBAAiB,aAAa,kBAAkB,qUAAqU,qBAAqB,mOAAmO,aAAa,gGAAgG,kBAAkB,YAAY,iBAAiB,gGAAgG,cAAc,2qBAA2qB,cAAc,qLAAqL,qBAAqB,kOAAkO,aAAa,gGAAgG,kBAAkB,YAAY,iBAAiB,+FAA+F,cAAc,qUAAqU,cAAc,gFAAgF,IAAI,kVAAkV,IAAI,oTAAoT,cAAc,oLAAoL,qBAAqB,qOAAqO,aAAa,8EAA8E,iBAAiB,2TAA2T,qBAAqB,66EAA66E,eAAe,uZAAuZ,cAAc,+ZAA+Z,WAAW,iaAAia,aAAa,mZAAmZ,cAAc,uaAAua,UAAU,+ZAA+Z,YAAY,4sDAA4sD,mDAAmD,4eAA4e,oDAAoD,2lBAA2lB,uDAAuD,8mBAA8mB,sDAAsD,iqCAAiqC,qJAAqJ,aAAa,gFAAgF,iBAAiB,qFAAqF,cAAc,4QAA4Q,qBAAqB,iLAAiL,aAAa,+EAA+E,iBAAiB,0TAA0T,qBAAqB,mLAAmL,aAAa,+EAA+E,iBAAiB,qGAAqG,cAAc,2oBAA2oB,cAAc,sKAAsK,qBAAqB,kLAAkL,aAAa,+EAA+E,iBAAiB,oGAAoG,cAAc,qTAAqT,cAAc,gFAAgF,IAAI,kUAAkU,IAAI,oSAAoS,cAAc,qKAAqK,qBAAqB,qLAAqL,aAAa,8DAA8D,iBAAiB,qRAAqR,qBAAqB,4lC;;;;;;;;;;;ACA9xgC,oCAAoC,eAAe,uBAAuB,iBAAiB,qBAAqB,qBAAqB,iFAAiF,EAAE,QAAQ,qBAAqB,EAAE,kBAAkB,iBAAiB,6BAA6B,EAAE,oEAAoE,gBAAgB,EAAE,cAAc,8BAA8B,EAAE,+CAA+C,mqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/a;AACe;AACP;AACC;AACb;AACwB;AAClD;AAG6B;AACF;AACU;AAOpE;IAyFI,wBAAoB,cAA8B,EAAS,gBAAkC,EAAS,YAA0B,EAAQ,WAAwB,EAAS,MAAc,EAAU,KAAqB;QAAlM,mBAAc,GAAd,cAAc,CAAgB;QAAS,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAS,iBAAY,GAAZ,YAAY,CAAc;QAAQ,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;QAvF/M,cAAS,GAAG,IAAI,CAAC;QACjB,aAAQ,GAAY,KAAK,CAAC;QAC1B,cAAS,GAAY,KAAK,CAAC;QAGlC,UAAK,GAAG;YACJ,IAAI,EAAE,EAAE;YACR,MAAM,EAAE,EAAE;YACV,OAAO,EAAE,EAAE;YACX,UAAU,EAAE,EAAE;YACd,SAAS,EAAE,EAAE;YACb,YAAY,EAAE,EAAE;YAChB,QAAQ,EAAE,EAAE;SAMf,CAAC;QACF,gBAAW,GAAG,EAAE,CAAC;QACjB,YAAO,GAAG;YACN,KAAK,EAAE,CAAC,SAAS,CAAC;YAClB,qBAAqB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;SAC3C;QACD,MAAC,GAAW,CAAC,CAAC;QAGd,aAAQ,GAAW,EAAE,CAAC;QAKtB,UAAK,GAAE,EAAE,CAAC;QAEV,UAAK,GAAG,UAAU,CAAC;QACnB,UAAK,GAAG,gBAAgB,CAAC;QACzB,SAAI,GAAG,6BAA6B,CAAC;QACrC,YAAO,GAAG,IAAI,CAAC;QACf,aAAQ,GAAoB,0DAAe,CAAC,SAAS,CAAC;QACtD,gBAAW,GAAG,IAAI,CAAC;QACnB,eAAU,GAAG,IAAI,CAAC;QAClB,WAAM,GAAG,IAAI,CAAC;QACd,aAAQ,GAAG,CAAC,CAAC,CAAC;QACd,YAAO,GAAG,CAAC,CAAC;QACZ,aAAQ,GAAG,CAAC,CAAC;QACb,eAAU,GAAG,IAAI,CAAC;QAClB,mBAAc,GAAG,EAAE,CAAC;QACpB,kBAAa,GAAG,EAAE,CAAC;QACnB,kBAAkB;QAGlB,gBAAW,GAAG,KAAK,CAAC;QACpB,gBAAW,GAAG,EAAE,CAAC;QACjB,cAAS,GAAG,EAAE,CAAC;QAMf,YAAO,GAAG;YACR,EAAE,IAAI,EAAE,WAAW,EAAE;YACrB,EAAE,IAAI,EAAE,UAAU,EAAE;YACpB,EAAE,IAAI,EAAE,OAAO,EAAE;YACjB,EAAE,IAAI,EAAE,SAAS,EAAC;YAClB,EAAE,IAAI,EAAE,UAAU,EAAE;YACpB,EAAE,IAAI,EAAE,cAAc,EAAC;YACvB,EAAE,IAAI,EAAE,kBAAkB,EAAE;YAC5B,EAAE,IAAI,EAAE,YAAY,EAAE;SACvB,CAAC;QACD,aAAQ,GAAG;YACZ,EAAE,IAAI,EAAE,MAAM,EAAE;YAChB,EAAE,IAAI,EAAE,OAAO,EAAE;YACjB,EAAE,IAAI,EAAE,OAAO,EAAC;YAChB,EAAE,IAAI,EAAE,SAAS,EAAC;SAEjB,CAAC;QAEJ,gBAAW,GAAG;YACZ,EAAE,IAAI,EAAE,MAAM,EAAE;YAChB,EAAE,IAAI,EAAE,OAAO,EAAE;YACjB,EAAE,IAAI,EAAE,OAAO,EAAE;YACjB,EAAE,IAAI,EAAE,SAAS,EAAC;SAEnB,CAAC;QAED,gBAAW,GAAG,KAAK,CAAC;QAGf,2BAA2B;IAC/B,CAAC;IAED,iCAAQ,GAAR;QAAA,iBAuCC;QAtCG,kCAAkC;QAClC,6DAA6D;QAC7D,+DAA+D;QAC/D,+EAA+E;QAC/E,6DAA6D;QAC7D,+CAA+C;QAC/C,MAAM;QACN,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;YACrD,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC3B,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC9B,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;gBAC3C,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;aACzC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,cAAI;YACtD,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC7B,WAAW;gBACX,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;oBACzC,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACnD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC;wBAClB,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC;wBAC3B,UAAU,EAAC,MAAM,CAAC,UAAU,CAAC;wBAC7B,QAAQ,EAAC,MAAM,CAAC,QAAQ,CAAC;wBACzB,WAAW,EAAC,MAAM,CAAC,WAAW,CAAC;wBAC/B,YAAY,EAAC,MAAM,CAAC,YAAY,CAAC;wBACjC,eAAe,EAAC,MAAM,CAAC,eAAe,CAAC;wBACvC,WAAW,EAAC,MAAM,CAAC,WAAW,CAAC;wBAC5B,WAAW,EAAC,MAAM,CAAC,WAAW,CAAC;wBAC/B,IAAI,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;qBAC7B,CAAC,CAAC;iBACN;gBACD,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;aACzB;iBACG;gBACF,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;gBACpB,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,4CAAmB,GAA1B,UAA2B,OAAO;QAC9B,gBAAgB;QAChB,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,iBAAiB,CAAC;IAChD,CAAC;IAED,iCAAQ,GAAR,UAAS,IAAY;QACjB,IAAI,IAAI,KAAK,IAAI,CAAC,YAAY,EAAE;YAC9B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,kBAAkB;SACnB;IACL,CAAC;IAED,gCAAO,GAAP;QACI,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAEA,+BAAM,GAAN,UAAO,GAAG;QACX,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,SAAS,CAAC,CAAC;QAC9C,IAAG,SAAS,EAAE;YACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAC;gBACpC,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;gBAChC,OAAO,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC;YAC7B,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,QAAQ,GAAO,IAAI,CAAC,QAAQ,SAAE,GAAG,EAAC,CAAC;YACxC,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC5C;IACH,CAAC;IAED,kCAAS,GAAT,UAAU,GAAG;QACX,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAC;YACzB,OAAO,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAEC,iCAAQ,GAAR,UAAS,EAAE;QAAX,iBAkDC;QAjDC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;YACzC,KAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YAClB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,KAAI,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACpC,KAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACxC,KAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAC1C,KAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAC7C,KAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,6CAA6C;YAC5F,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YAC3C,KAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;YACpD,KAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC;YACtD,IAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAgB,IAAI,EAAE,EAAC;gBACzC,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC;gBACjE,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;oBAC5C,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;wBAC9C,IAAG,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,EAAC;4BAChD,IAAI,SAAS,GAAI,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,GAAC,QAAQ,CAAC;4BACxD,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;4BACzD,4CAA4C;4BAC1C,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;4BAC1D,GAAG;4BACH,6CAA6C;4BAC7C,yFAAyF;4BACzF,IAAI;4BACJ,+CAA+C;4BAC/C,yFAAyF;4BACzF,IAAI;4BACJ,8CAA8C;4BAC9C,yFAAyF;4BACzF,IAAI;4BACJ,+CAA+C;4BAC/C,uFAAuF;4BACvF,IAAI;yBACL;qBACF;iBACF;aACF;QACH,CAAC,EACD,eAAK;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;YAC9C,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC7B,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;aAC3B;iBACG;gBACF,KAAI,CAAC,IAAI,GAAG,EAAE,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAY,GAAZ,UAAa,KAAK,EAAE,MAAM;QAA1B,iBAeC;QAdC,IAAI,kBAAkB,GAAG;YACvB,EAAE,EAAE,MAAM;YACV,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;SACtB;QACD,IAAG,KAAK,EAAC;YACP,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,cAAI;gBAC9D,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,yBAAyB,EAAE,EAAE,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC;YACjF,CAAC,CAAC,CAAC;SACJ;aACG;YACF,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,cAAI;gBAC7D,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,2BAA2B,EAAE,EAAE,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC;YACnF,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,+BAAM,GAAN;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACtB,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC;IAC7B,CAAC;IAED,yCAAgB,GAAhB,UAAiB,EAAE,EAAE,KAAK,EAAE,SAAS;QACnC,IAAG,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAC;YAC7B,IAAI,UAAU,GAAG,KAAK,CAAC;YACvB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAC9C,IAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAC;oBAC9B,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;oBAClC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC;oBAC1C,UAAU,GAAG,IAAI,CAAC;iBACnB;aACF;YACD,IAAG,CAAC,UAAU,EAAC;gBACb,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAC,CAAC,CAAC;aAC3E;SACF;aACG;YACF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAC,CAAC,CAAC;SAC3E;QACD,OAAO,CAAC,GAAG,CAAC,OAAO,GAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACzD,CAAC;IAED,mCAAU,GAAV,UAAW,EAAE;QACX,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,kDAAI,CAAC;YACC,KAAK,EAAE,EAAE;YACT,IAAI,EACJ,EAAE;gBACF,wEAAwE;YACxE,eAAe,EAAE,IAAI;YACrB,iBAAiB,EAAE,IAAI;YACvB,iBAAiB,EAAE,KAAK;YACxB,cAAc,EAAE,KAAK;YACrB,gBAAgB,EAAE,IAAI;SACzB,CAAC,CAAC,IAAI,CAAC,UAAU,OAAO;YACrB,uCAAuC;YACvC,IAAI,OAAO,CAAC,KAAK,IAAI,OAAO,KAAK,QAAQ,EAAE;gBACzC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;oBAC1C,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,sBAAsB,EAAE,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;oBACxE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;oBACnB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;oBACzB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;oBACpB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;wBACrD,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;4BAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;4BAC9B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;4BAC3C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;yBACzC;oBACL,CAAC,CAAC,CAAC;gBACP,CAAC,EACD,eAAK;gBACL,CAAC,CAAC,CAAC;aACJ;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6BAAI,GAAJ;QAAA,iBAoEC;QAnEC,IAAG,IAAI,CAAC,UAAU,IAAI,EAAE,EAAC;YACvB,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC;SACtC;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAG,IAAI,CAAC,WAAW,EAAC;YAClB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACtD;aACG;YACF,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;SACxB;QACD,wBAAwB;QACxB,IAAG,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,EAAC;YACrB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,cAAI;gBACvD,IAAG,IAAI,CAAC,QAAQ,CAAC,EAAC;oBAChB,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;oBACtB,sBAAsB;oBACtB,wBAAwB;oBACxB,yBAAyB;oBACzB,4BAA4B;oBAC5B,2BAA2B;oBAC3B,8BAA8B;oBAC9B,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,sBAAsB,EAAE,EAAE,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC;oBAC1E,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;oBACnB,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;oBACzB,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;oBACpB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAQ;wBAC3D,IAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAE;4BACjC,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;4BAClC,KAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;4BAC/C,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;4BAC1C,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;4BACvB,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;4BACtB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;yBACzB;oBACH,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;SACJ;aACG;YACF,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,cAAI;gBACpD,IAAG,IAAI,CAAC,QAAQ,CAAC,EAAC;oBAChB,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;oBACtB,sBAAsB;oBACtB,wBAAwB;oBACxB,yBAAyB;oBACzB,4BAA4B;oBAC5B,2BAA2B;oBAC3B,8BAA8B;oBAC9B,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,oBAAoB,EAAE,EAAE,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC;oBACxE,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;oBACnB,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;oBACzB,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;oBACpB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAQ;wBAC3D,IAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAE;4BACnC,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;4BAClC,KAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;4BAC/C,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;4BAC1C,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;4BACvB,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;4BACtB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;yBACvB;oBACH,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,oCAAW,GAAX,UAAY,GAAG;QACb,IAAI,QAAQ,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC;QACrD,IAAI,QAAQ,IAAI,EAAE,IAAI,QAAQ,GAAG,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,IAAI,QAAQ,GAAG,EAAE,CAAC,EAAC;YACpE,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,kCAAS,GAAT;QACI,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC;YAC5B,MAAM,EAAE;gBACJ,QAAQ,EAAE,IAAI,CAAC,MAAM;gBACrB,aAAa,EAAE,IAAI,CAAC,QAAQ;gBAC5B,WAAW,EAAE,IAAI,CAAC,OAAO;aAC5B;SACJ,CAAC,CAAC;QACH,OAAO;YACH,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,eAAe,EAAE,IAAI,CAAC,WAAW;YACjC,YAAY,EAAE,IAAI,CAAC,UAAU;YAC7B,YAAY,EAAE,IAAI,CAAC,UAAU;SAChC,CAAC;IACN,CAAC;IA3V8B;QAA9B,+DAAS,CAAC,kFAAkB,CAAC;kCAAc,kFAAkB;uDAAC;IACxC;QAAtB,+DAAS,CAAC,UAAU,CAAC;kCAAW,qDAAM;oDAAC;IAChB;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAa,mFAAoB;qDAAC;IA3DhD,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCA0FsC,yDAAc,EAA2B,+EAAgB,EAAuB,uEAAY,EAAqB,qEAAW,EAAiB,sDAAM,EAAiB,8DAAc;OAzF7M,cAAc,CAqZ1B;IAAD,qBAAC;CAAA;AArZ0B","file":"default~lists-lists-module~users-users-module.js","sourcesContent":["module.exports = \"<section>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"content-header\\\">Lists</div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"showTable && !showForm\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-6\\\">\\r\\n                            <p>Lists</p>\\r\\n                        </div>\\r\\n                        <!-- <div class=\\\"col-sm-6\\\" style=\\\"text-align: right;\\\">\\r\\n                            <p>\\r\\n                                <a class=\\\"btn btn-social btn-round btn-min-width mr-2 mb-2 btn-outline-bitbucket float-right\\\" (click)=\\\"addlist()\\\"><span class=\\\"ft-plus\\\"></span> Add List</a>\\r\\n                            </p>\\r\\n                        </div> -->\\r\\n                    </div>\\r\\n                    <!-- <div class=\\\"col-sm-12 btnalgn\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-outline-primary mt-2\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"\\r\\n                      [attr.aria-expanded]=\\\"!isCollapsed\\\" aria-controls=\\\"collapseExample\\\">\\r\\n                      Select Columns\\r\\n                      </button>\\r\\n\\r\\n                      <div id=\\\"collapseExample\\\" class=\\\"selected-column\\\" [ngbCollapse]=\\\"!isCollapsed\\\">\\r\\n                        <ul class=\\\"tablealgn\\\">\\r\\n                          <li *ngFor='let col of allColumns1'>\\r\\n                            <input type='checkbox' [id]=\\\"col.name\\\" (click)='toggle(col)' [checked]='isChecked(col)' />\\r\\n                            <label [attr.for]=\\\"col.name\\\">{{col.name}}</label>\\r\\n                          </li>\\r\\n                        </ul>\\r\\n                      </div>\\r\\n                    </div> -->\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-md-10 text-right\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"\\r\\n                                [attr.aria-expanded]=\\\"!isCollapsed\\\" aria-controls=\\\"collapseExample\\\">\\r\\n                          Select Columns\\r\\n                        </button>\\r\\n                        <div id=\\\"collapseExample\\\" class=\\\"selected-column\\\" [ngbCollapse]=\\\"!isCollapsed\\\">\\r\\n                          <ul>\\r\\n                              <li *ngFor='let col of allColumns1'>\\r\\n                                <input\\r\\n                                  type='checkbox'\\r\\n                                  [id]=\\\"col.name\\\"\\r\\n                                  (click)='toggle(col)'\\r\\n                                  [checked]='isChecked(col)'\\r\\n                                />\\r\\n                                <label [attr.for]=\\\"col.name\\\">{{col.name}}</label>\\r\\n                              </li>\\r\\n                          </ul>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-2\\\">\\r\\n                        <a class=\\\"btn btn-social btn-round btn-min-width mr-2 mb-2 btn-outline-bitbucket float-right\\\" (click)=\\\"addlist()\\\"><span class=\\\"ft-plus\\\"></span> Add List</a>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <!-- <div class=\\\"col-sm-6\\\" style=\\\"text-align: right;\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-outline-primary mt-2\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"\\r\\n                              [attr.aria-expanded]=\\\"!isCollapsed\\\" aria-controls=\\\"collapseExample\\\">\\r\\n                        Select Columns\\r\\n                      </button>\\r\\n\\r\\n              <div id=\\\"collapseExample\\\" class=\\\"selected-column\\\" [ngbCollapse]=\\\"!isCollapsed\\\">\\r\\n                <ul>\\r\\n                    <li *ngFor='let col of allColumns1'>\\r\\n                      <input\\r\\n                        type='checkbox'\\r\\n                        [id]=\\\"col.name\\\"\\r\\n                        (click)='toggle(col)'\\r\\n                        [checked]='isChecked(col)'\\r\\n                      />\\r\\n                      <label [attr.for]=\\\"col.name\\\">{{col.name}}</label>\\r\\n                    </li>\\r\\n                </ul>\\r\\n              </div></div> -->\\r\\n                    <!--<div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"card-block\\\">\\r\\n                            <table class=\\\"table table-responsive-md text-center\\\">\\r\\n                                <thead>\\r\\n                                    <tr>\\r\\n                                        <th>List Name</th>\\r\\n                                        <th>Email</th>\\r\\n                                        <th>Phone Number</th>\\r\\n                                        <th>Address</th>\\r\\n                                        <th>Action</th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let data of listData | paginate: { itemsPerPage: 10, currentPage: p }\\\">\\r\\n                                        <td>{{data.name}}</td>\\r\\n                                        <td>{{data.email}}</td>\\r\\n                                        <td>{{data.phone}}</td>\\r\\n                                        <td>{{data.address}}</td>\\r\\n                                        <td>\\r\\n                                            <a class=\\\"success p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"editlist(data.id)\\\">\\r\\n                                                <i class=\\\"fas fa-pencil-alt font-medium-3 mr-2\\\"></i>\\r\\n                                            </a>\\r\\n                                            <a class=\\\"danger p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"deletelist(data.id)\\\">\\r\\n                                                <i class=\\\"fas fa-trash font-medium-3 mr-2\\\"></i>\\r\\n                                            </a>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                            <div class=\\\"col-12 paginationonAction\\\">\\r\\n                                <span class=\\\"total\\\">{{collectionSize}} Total</span>\\r\\n                                <ngb-pagination [pageSize]=\\\"pageSize\\\" [(page)]=\\\"p\\\" [maxSize]=\\\"10\\\" [rotate]=\\\"true\\\" [collectionSize]=\\\"collectionSize\\\" [boundaryLinks]=\\\"true\\\" style=\\\"float: right;\\\"></ngb-pagination>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>-->\\r\\n                    <div>\\r\\n                <ngx-datatable\\r\\n                class ='material'\\r\\n                  class='bootstrap'\\r\\n                  [rows]='listData'\\r\\n                  [columnMode]=\\\"'force'\\\"\\r\\n                  [headerHeight]=\\\"50\\\"\\r\\n                  [footerHeight]=\\\"50\\\"\\r\\n                  [rowHeight]=\\\"'auto'\\\" [limit]=\\\"10\\\">\\r\\n                  <ngx-datatable-column\\r\\n                    *ngFor=\\\"let col of columns1\\\"\\r\\n                    [name]=\\\"col.name\\\">\\r\\n                  </ngx-datatable-column>\\r\\n                 <ngx-datatable-column name=\\\"Action\\\">\\r\\n                                  <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                  <a class=\\\"success p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"editlist(row.id)\\\">\\r\\n                                  <i class=\\\"fas fa-pencil-alt font-medium-3 mr-2\\\"></i>\\r\\n                                  </a>\\r\\n                                  <a class=\\\"danger p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"deletelist(row.id)\\\">\\r\\n                                  <i class=\\\"fas fa-trash font-medium-3 mr-2\\\"></i>\\r\\n                                  </a>\\r\\n                                  </ng-template>\\r\\n                              </ngx-datatable-column>\\r\\n                </ngx-datatable>\\r\\n            </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!showTable && !showForm\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"card-block\\\">\\r\\n                      <ngb-tabset>\\r\\n                        <ngb-tab title=\\\"Information\\\">\\r\\n                          <ng-template ngbTabContent>\\r\\n                            <form class=\\\"form\\\" #listForm=\\\"ngForm\\\">\\r\\n                              <div class=\\\"form-body\\\">\\r\\n                                <!-- <h4 class=\\\"form-section\\\">\\r\\n                                <i class=\\\"icon-user\\\"></i> Personal Details</h4> -->\\r\\n                                <div class=\\\"row\\\">\\r\\n                                  <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                      <label>Name</label>\\r\\n                                      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"lists.name\\\" [ngClass]=\\\"{ 'is-invalid': listForm.submitted && name.invalid }\\\" required>\\r\\n                                      <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"listForm.submitted && name.invalid\\\">This field is required!</small>\\r\\n                                    </div>\\r\\n                                  </div>\\r\\n                                  <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                      <label>Email</label>\\r\\n                                      <input type=\\\"email\\\" email class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"lists.email\\\" [ngClass]=\\\"{ 'is-invalid': listForm.submitted && email.invalid }\\\" required>\\r\\n                                      <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"listForm.submitted && email.invalid\\\">This field is required!</small>\\r\\n                                    </div>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                  <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                      <label>Phone Number</label>\\r\\n                                      <input (keypress)=\\\"isNumberKey($event)\\\" maxlength=\\\"10\\\" class=\\\"form-control\\\" name=\\\"phonenum\\\" [(ngModel)]=\\\"lists.phonenum\\\" [ngClass]=\\\"{ 'is-invalid': listForm.submitted && phonenum.invalid }\\\" required>\\r\\n                                      <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"listForm.submitted && phonenum.invalid\\\">This field is required!</small>\\r\\n                                    </div>\\r\\n                                  </div>\\r\\n                                  <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                      <label>Address</label>\\r\\n                                      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"address\\\" [(ngModel)]=\\\"lists.address\\\" ngx-google-places-autocomplete [options]='options' #placesRef=\\\"ngx-places\\\" (onAddressChange)=\\\"handleAddressChange($event)\\\" [ngClass]=\\\"{ 'is-invalid': listForm.submitted && address.invalid }\\\" required>\\r\\n                                      <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"listForm.submitted && address.invalid\\\">This field is required!</small>\\r\\n                                    </div>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                  <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                      <label>Newsletter</label>\\r\\n                                      <div class=\\\"custom-control custom-checkbox m-0\\\">\\r\\n                                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"newsletter\\\" name=\\\"newsletter\\\" [(ngModel)]=\\\"lists.newsletter\\\">\\r\\n                                        <label class=\\\"custom-control-label\\\" for=\\\"newsletter\\\">Opt In</label>\\r\\n                                      </div>\\r\\n                                    </div>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" *ngIf=\\\"extraFields\\\">\\r\\n                                  <div class=\\\"col-md-12\\\">\\r\\n                                      <h4 class=\\\"form-section\\\">Extra Fields</h4>\\r\\n                                      <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-6\\\" *ngFor=\\\"let field of addFields;let i = index\\\">\\r\\n                                          <div class=\\\"form-group\\\" *ngIf=\\\"field.fieldType == 'text'\\\">\\r\\n                                            <label>{{field.label}}</label>\\r\\n                                            <input class=\\\"form-control\\\"  name=\\\"{{field.fieldName}}\\\" value=\\\"{{field.valuesBind}}\\\" [(ngModel)]=\\\"field.valuesBind\\\" type=\\\"text\\\" minlength=\\\"1\\\" maxlength=\\\"{{field.length}}\\\" [required]=\\\"field.mandatory\\\" (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\">\\r\\n                                            <small *ngIf=\\\"field.validation || listForm.submitted && (field.fieldName.invalid)\\\" class=\\\"form-text text-muted danger\\\">{{field.validationMsg}}</small>\\r\\n                                          </div>\\r\\n                                          <div class=\\\"form-group\\\" *ngIf=\\\"field.fieldType == 'date'\\\">\\r\\n                                            <label>{{field.label}}</label>\\r\\n                                            <input class=\\\"form-control\\\" name=\\\"{{field.fieldName}}\\\" value=\\\"{{field.valuesBind}}\\\" [(ngModel)]=\\\"field.valuesBind\\\" type=\\\"date\\\" [required]=\\\"field.mandatory\\\" (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\">\\r\\n                                            <small *ngIf=\\\"field.validation || listForm.submitted && (dateValue.invalid)\\\" class=\\\"form-text text-muted danger\\\">{{field.validationMsg}}</small>\\r\\n                                          </div>\\r\\n                                          <div class=\\\"form-group\\\" *ngIf=\\\"field.fieldType == 'number'\\\">\\r\\n                                            <label>{{field.label}}</label>\\r\\n                                            <input class=\\\"form-control\\\" value=\\\"{{field.valuesBind}}\\\" name=\\\"{{field.fieldName}}\\\" #numbererrorValue=\\\"ngModel\\\" [(ngModel)]=\\\"field.valuesBind\\\" minlength=\\\"0\\\" maxlength=\\\"{{field.length}}\\\" #numbererrorValue=\\\"ngModel\\\" [required]=\\\"field.mandatory\\\" (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\" (keypress)=\\\"isNumberKey($event)\\\">\\r\\n                                            <!-- <input class=\\\"form-control\\\" name=\\\"numberValue\\\" [(ngModel)]=\\\"lists.numberValue\\\" *ngIf=\\\"field.length == '' && field.length <= 0\\\" type=\\\"text\\\" pattern=\\\"[0-9]\\\" [required]=\\\"field.mandatory\\\" (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\"> -->\\r\\n                                            <small *ngIf=\\\"field.length != '' && field.length > 0\\\" class=\\\"form-text text-muted danger\\\">Field Length Should not exceed {{field.length}}</small>\\r\\n                                            <small *ngIf=\\\"field.validation || listForm.submitted && (numbererrorValue.errors)\\\" class=\\\"form-text text-muted danger\\\">{{field.validationMsg}}</small>\\r\\n                                          </div>\\r\\n                                          <div class=\\\"form-group\\\" *ngIf=\\\"field.fieldType == 'float'\\\">\\r\\n                                            <label>{{field.label}}</label>\\r\\n                                            <input class=\\\"form-control\\\" value=\\\"{{field.valuesBind}}\\\" name=\\\"{{field.fieldName}}\\\" #floaterrorValue=\\\"ngModel\\\" [(ngModel)]=\\\"field.valuesBind\\\" minlength=\\\"0\\\" maxlength=\\\"{{field.length}}\\\" #floaterrorValue=\\\"ngModel\\\" [required]=\\\"field.mandatory\\\" (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\" (keypress)=\\\"isNumberKey($event)\\\">\\r\\n                                            <!-- <input class=\\\"form-control\\\" name=\\\"floatValue\\\" [(ngModel)]=\\\"lists.floatValue\\\" maxlength=\\\"{{field.length}}\\\" *ngIf=\\\"field.length != '' && field.length > 0\\\" pattern=\\\"/^[0-9]+(\\\\.[0-9]{1,2})?$/\\\" (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\" type=\\\"text\\\" [required]=\\\"field.mandatory\\\">\\r\\n                                            <input class=\\\"form-control\\\" name=\\\"floatValue\\\" [(ngModel)]=\\\"lists.floatValue\\\" *ngIf=\\\"field.length == '' && field.length <= 0\\\" pattern=\\\"/^[0-9]+(\\\\.[0-9]{1,2})?$/\\\" (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\" type=\\\"text\\\" [required]=\\\"field.mandatory\\\"> -->\\r\\n                                            <small *ngIf=\\\"field.length != '' && field.length > 0\\\" class=\\\"form-text text-muted danger\\\">Field Length Should not exceed {{field.length}}</small>\\r\\n                                            <small *ngIf=\\\"field.validation || listForm.submitted && (floaterrorValue.errors)\\\" class=\\\"form-text text-muted danger\\\">{{field.validationMsg}}</small>\\r\\n                                          </div>\\r\\n                                          <div class=\\\"form-group\\\" *ngIf=\\\"field.fieldType == 'toggle'\\\">\\r\\n                                              <label>{{field.label}}</label>\\r\\n                                              <ui-switch name=\\\"{{field.fieldName}}\\\" [(ngModel)]=\\\"field.valuesBind\\\"  (change)=\\\"fieldValueChange(field.id,$event, field.fieldName)\\\" [required]=\\\"field.mandatory\\\"></ui-switch>\\r\\n                                              <small *ngIf=\\\"field.validation || listForm.submitted && (toggleValue.invalid)\\\" class=\\\"form-text text-muted danger\\\">{{field.validationMsg}}</small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                      </div>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"form-actions\\\">\\r\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-raised btn-danger mr-1\\\" (click)=\\\"cancel()\\\">\\r\\n                                Cancel\\r\\n                                </button>\\r\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-raised btn-success mr-1\\\" (click)=\\\"list()\\\" *ngIf=\\\"!save\\\" [disabled]=\\\"!listForm.valid || submitted\\\">\\r\\n                                Update List <i *ngIf=\\\"submitted\\\" class=\\\"fas fa-spinner fa fa-spin\\\"></i>\\r\\n                                </button>\\r\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-raised btn-success\\\" (click)=\\\"list()\\\" *ngIf=\\\"save\\\" [disabled]=\\\"!listForm.valid || submitted\\\">\\r\\n                                Add List <i *ngIf=\\\"submitted\\\" class=\\\"fas fa-spinner fa fa-spin\\\"></i>\\r\\n                                </button>\\r\\n                              </div>\\r\\n                            </form>\\r\\n                          </ng-template>\\r\\n                        </ngb-tab>\\r\\n                        <ngb-tab title=\\\"Subscriber\\\">\\r\\n                          <ng-template ngbTabContent>\\r\\n                                <!-- <ngx-datatable #table class='bootstrap' [rows]=\\\"rows\\\" [columns]=\\\"columns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\"\\r\\n                                  [rowHeight]=\\\"'auto'\\\" [limit]=\\\"5\\\"></ngx-datatable> -->\\r\\n                                  <div class=\\\"card-body\\\">\\r\\n                                      <div class=\\\"card-block\\\">\\r\\n                                          <ngx-datatable #mydatatable class=\\\"bootstrap fullscreen\\\" [headerHeight]=\\\"50\\\" [limit]=\\\"5\\\" [columnMode]=\\\"'force'\\\" [footerHeight]=\\\"50\\\"\\r\\n                                              [rowHeight]=\\\"'auto'\\\" [rows]=\\\"rows\\\" [scrollbarH]=\\\"true\\\">\\r\\n                                              <ngx-datatable-column name=\\\"First Name\\\">\\r\\n                                                  <ng-template ngx-datatable-cell-template  let-row=\\\"row\\\">\\r\\n                                                          {{row.FirstName}}\\r\\n                                                  </ng-template>\\r\\n                                              </ngx-datatable-column>\\r\\n                                              <ngx-datatable-column name=\\\"Last Name\\\">\\r\\n                                                  <ng-template ngx-datatable-cell-template let-row=\\\"row\\\">\\r\\n                                                          {{row.LastName}}\\r\\n                                                  </ng-template>\\r\\n                                              </ngx-datatable-column>\\r\\n                                              <ngx-datatable-column name=\\\"Email\\\" [width]=\\\"250\\\">\\r\\n                                                  <ng-template ngx-datatable-cell-template let-row=\\\"row\\\">\\r\\n                                                      {{row.email}}\\r\\n                                                  </ng-template>\\r\\n                                              </ngx-datatable-column>\\r\\n                                              <ngx-datatable-column name=\\\"Address\\\" [width]=\\\"250\\\">\\r\\n                                                  <ng-template ngx-datatable-cell-template let-row=\\\"row\\\">\\r\\n                                                      {{row.address}}\\r\\n                                                  </ng-template>\\r\\n                                              </ngx-datatable-column>\\r\\n                                              <ngx-datatable-column name=\\\"List Name\\\">\\r\\n                                                  <ng-template ngx-datatable-cell-template let-row=\\\"row\\\">\\r\\n                                                      {{row.listname}}\\r\\n                                                  </ng-template>\\r\\n                                              </ngx-datatable-column>\\r\\n                                              <ngx-datatable-column name=\\\"Subscribed On\\\" [width]=\\\"200\\\">\\r\\n                                                  <ng-template ngx-datatable-cell-template let-row=\\\"row\\\">\\r\\n                                                      {{row.date}}\\r\\n                                                  </ng-template>\\r\\n                                              </ngx-datatable-column>\\r\\n                                              <!--<ngx-datatable-column name=\\\"Subscribed Status\\\">\\r\\n                                                  <ng-template ngx-datatable-cell-template let-row=\\\"row\\\">\\r\\n                                                      {{row.status}}\\r\\n                                                  </ng-template>\\r\\n                                              </ngx-datatable-column>-->\\r\\n                                              <ngx-datatable-column name=\\\"Subscribed\\\">\\r\\n                                                <ng-template ngx-datatable-cell-template let-row=\\\"row\\\">\\r\\n                                                  <ui-switch [(ngModel)]=\\\"row.status\\\" (ngModelChange)=\\\"updateStatus($event, row.id)\\\"></ui-switch>\\r\\n                                                </ng-template>\\r\\n                                              </ngx-datatable-column>\\r\\n                                          </ngx-datatable>\\r\\n                                      </div>\\r\\n                                  </div>\\r\\n                          </ng-template>\\r\\n                        </ngb-tab>\\r\\n                      </ngb-tabset>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"showForm\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"card-block\\\">\\r\\n            <form class=\\\"form\\\" #listForm=\\\"ngForm\\\">\\r\\n              <div class=\\\"form-body\\\">\\r\\n                <!-- <h4 class=\\\"form-section\\\">\\r\\n                <i class=\\\"icon-user\\\"></i> Personal Details</h4> -->\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Name</label>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"lists.name\\\" [ngClass]=\\\"{ 'is-invalid': listForm.submitted && name.invalid }\\\" required>\\r\\n                      <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"listForm.submitted && name.invalid\\\">This field is required!</small>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Email</label>\\r\\n                      <input type=\\\"email\\\" email class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"lists.email\\\" [ngClass]=\\\"{ 'is-invalid': listForm.submitted && email.invalid }\\\" required>\\r\\n                      <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"listForm.submitted && email.invalid\\\">This field is required!</small>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Phone Number</label>\\r\\n                      <input (keypress)=\\\"isNumberKey($event)\\\"  maxlength=\\\"10\\\" class=\\\"form-control\\\" name=\\\"phonenum\\\" [(ngModel)]=\\\"lists.phonenum\\\" [ngClass]=\\\"{ 'is-invalid': listForm.submitted && phonenum.invalid }\\\" required>\\r\\n                      <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"listForm.submitted && phonenum.invalid\\\">This field is required!</small>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Address</label>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"address\\\" [(ngModel)]=\\\"lists.address\\\" ngx-google-places-autocomplete [options]='options' #placesRef=\\\"ngx-places\\\" (onAddressChange)=\\\"handleAddressChange($event)\\\" [ngClass]=\\\"{ 'is-invalid': listForm.submitted && address.invalid }\\\" required>\\r\\n                      <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"listForm.submitted && address.invalid\\\">This field is required!</small>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Newsletter</label>\\r\\n                      <div class=\\\"custom-control custom-checkbox m-0\\\">\\r\\n                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"newsletter\\\" name=\\\"newsletter\\\" [(ngModel)]=\\\"lists.newsletter\\\">\\r\\n                        <label class=\\\"custom-control-label\\\" for=\\\"newsletter\\\">Opt In</label>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" *ngIf=\\\"extraFields\\\">\\r\\n                  <div class=\\\"col-md-12\\\">\\r\\n                      <h4 class=\\\"form-section\\\">Extra Fields</h4>\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\" *ngFor=\\\"let field of addFields;let i = index\\\">\\r\\n                          <div class=\\\"form-group\\\" *ngIf=\\\"field.fieldType == 'text'\\\">\\r\\n                            <label>{{field.label}}</label>\\r\\n                            <input class=\\\"form-control\\\"  name=\\\"{{field.fieldName}}\\\" [(ngModel)]=\\\"field.fieldName_extra\\\" type=\\\"text\\\" minlength=\\\"1\\\" maxlength=\\\"{{field.length}}\\\" [required]=\\\"field.mandatory\\\" (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\">\\r\\n                            <small *ngIf=\\\"field.validation && (listForm.submitted && field.fieldName.invalid)\\\" class=\\\"form-text text-muted danger\\\">{{field.validationMsg}}</small>\\r\\n                          </div>\\r\\n                          <div class=\\\"form-group\\\" *ngIf=\\\"field.fieldType == 'date'\\\">\\r\\n                            <label>{{field.label}}</label>\\r\\n                            <input class=\\\"form-control\\\" name=\\\"{{field.fieldName}}\\\" [(ngModel)]=\\\"field.fieldName_extra\\\" type=\\\"date\\\" [required]=\\\"field.mandatory\\\" (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\">\\r\\n                            <small *ngIf=\\\"field.validation && (listForm.submitted && dateValue.invalid)\\\" class=\\\"form-text text-muted danger\\\">{{field.validationMsg}}</small>\\r\\n                          </div>\\r\\n                          <div class=\\\"form-group\\\" *ngIf=\\\"field.fieldType == 'number'\\\">\\r\\n                            <label>{{field.label}}</label>\\r\\n                            <input class=\\\"form-control\\\" name=\\\"{{field.fieldName}}\\\" #numbererrorValue=\\\"ngModel\\\" [(ngModel)]=\\\"field.fieldName_extra\\\" minlength=\\\"0\\\" maxlength=\\\"{{field.length}}\\\" #numbererrorValue=\\\"ngModel\\\" [required]=\\\"field.mandatory\\\" (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\" (keypress)=\\\"isNumberKey($event)\\\">\\r\\n                            <!-- <input class=\\\"form-control\\\" name=\\\"numberValue\\\" [(ngModel)]=\\\"lists.numberValue\\\" *ngIf=\\\"field.length == '' && field.length <= 0\\\" type=\\\"text\\\" pattern=\\\"[0-9]\\\" [required]=\\\"field.mandatory\\\" (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\"> -->\\r\\n                            <small *ngIf=\\\"field.length != '' && field.length > 0\\\" class=\\\"form-text text-muted danger\\\">Field Length Should not exceed {{field.length}}</small>\\r\\n                            <small *ngIf=\\\"field.validation && (listForm.submitted && numbererrorValue.invalid)\\\" class=\\\"form-text text-muted danger\\\">{{field.validationMsg}}</small>\\r\\n                          </div>\\r\\n                          <div class=\\\"form-group\\\" *ngIf=\\\"field.fieldType == 'float'\\\">\\r\\n                            <label>{{field.label}}</label>\\r\\n                            <input class=\\\"form-control\\\" name=\\\"{{field.fieldName}}\\\" #floaterrorValue=\\\"ngModel\\\" [(ngModel)]=\\\"field.fieldName_extra\\\" minlength=\\\"0\\\" maxlength=\\\"{{field.length}}\\\" #floaterrorValue=\\\"ngModel\\\" [required]=\\\"field.mandatory\\\" (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\" (keypress)=\\\"isNumberKey($event)\\\">\\r\\n                            <!-- <input class=\\\"form-control\\\" name=\\\"floatValue\\\" [(ngModel)]=\\\"lists.floatValue\\\" maxlength=\\\"{{field.length}}\\\" *ngIf=\\\"field.length != '' && field.length > 0\\\" pattern=\\\"/^[0-9]+(\\\\.[0-9]{1,2})?$/\\\" (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\" type=\\\"text\\\" [required]=\\\"field.mandatory\\\">\\r\\n                            <input class=\\\"form-control\\\" name=\\\"floatValue\\\" [(ngModel)]=\\\"lists.floatValue\\\" *ngIf=\\\"field.length == '' && field.length <= 0\\\" pattern=\\\"/^[0-9]+(\\\\.[0-9]{1,2})?$/\\\" (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\" type=\\\"text\\\" [required]=\\\"field.mandatory\\\"> -->\\r\\n                            <small *ngIf=\\\"field.length != '' && field.length > 0\\\" class=\\\"form-text text-muted danger\\\">Field Length Should not exceed {{field.length}}</small>\\r\\n                            <small *ngIf=\\\"field.validation && (listForm.submitted && floaterrorValue.invalid)\\\" class=\\\"form-text text-muted danger\\\">{{field.validationMsg}}</small>\\r\\n                          </div>\\r\\n                          <div class=\\\"form-group\\\" *ngIf=\\\"field.fieldType == 'toggle'\\\">\\r\\n                              <label>{{field.label}}</label>\\r\\n                              <ui-switch name=\\\"{{field.fieldName}}\\\" [(ngModel)]=\\\"field.fieldName_extra\\\" (change)=\\\"fieldValueChange(field.id,$event, field.fieldName)\\\"></ui-switch>\\r\\n                              <!-- <small *ngIf=\\\"field.validation && (listForm.submitted && toggleValue.invalid)\\\" class=\\\"form-text text-muted danger\\\">{{field.validationMsg}}</small> -->\\r\\n                            </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-actions\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-raised btn-danger mr-1\\\" (click)=\\\"cancel()\\\">\\r\\n                Cancel\\r\\n                </button>\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-raised btn-success mr-1\\\" (click)=\\\"list()\\\" *ngIf=\\\"!save\\\" [disabled]=\\\"!listForm.valid || submitted\\\">\\r\\n                Update List <i *ngIf=\\\"submitted\\\" class=\\\"fas fa-spinner fa fa-spin\\\"></i>\\r\\n                </button>\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-raised btn-success\\\" (click)=\\\"list()\\\" *ngIf=\\\"save\\\" [disabled]=\\\"!listForm.valid || submitted\\\">\\r\\n                Add List <i *ngIf=\\\"submitted\\\" class=\\\"fas fa-spinner fa fa-spin\\\"></i>\\r\\n                </button>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\"","module.exports = \".selected-column {\\n  width: 38%;\\n  margin-right: 20px;\\n  float: right;\\n  text-align: left;\\n  background: #FFF;\\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.12), 0 1px 2px 0 rgba(0, 0, 0, 0.24); }\\n\\nli {\\n  list-style: none; }\\n\\nul.tablealgn {\\n  float: right;\\n  text-align: -webkit-auto; }\\n\\nngx-datatable.bootstrap.ngx-datatable.fixed-header.virtualized {\\n  float: left; }\\n\\n.btnalgn {\\n  text-align: -webkit-right; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGlzdHMvQzpcXFVzZXJzXFxNUlQyMFxcRGVza3RvcFxcVU1cXHVzZXJtYW5hZ2VtZW50L3NyY1xcYXBwXFxsaXN0c1xcbGlzdHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRyxXQUFVO0VBQ1YsbUJBQWtCO0VBQ2xCLGFBQVk7RUFDWixpQkFBZ0I7RUFDaEIsaUJBQWdCO0VBQ2hCLDZFQUE0RSxFQUM5RTs7QUFDRDtFQUNJLGlCQUFnQixFQUNuQjs7QUFDRDtFQUNJLGFBQVk7RUFDWix5QkFBd0IsRUFDM0I7O0FBQ0Q7RUFDSSxZQUFXLEVBQ2Q7O0FBQ0Q7RUFDSywwQkFDTCxFQUFDIiwiZmlsZSI6InNyYy9hcHAvbGlzdHMvbGlzdHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2VsZWN0ZWQtY29sdW1ue1xyXG4gICB3aWR0aDogMzglO1xyXG4gICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbiAgIGZsb2F0OiByaWdodDtcclxuICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgYmFja2dyb3VuZDogI0ZGRjtcclxuICAgYm94LXNoYWRvdzogMCAxcHggM3B4IDAgcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxcHggMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjI0KTtcclxufVxyXG5saXtcclxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbn1cclxudWwudGFibGVhbGduIHtcclxuICAgIGZsb2F0OiByaWdodDtcclxuICAgIHRleHQtYWxpZ246IC13ZWJraXQtYXV0bztcclxufVxyXG5uZ3gtZGF0YXRhYmxlLmJvb3RzdHJhcC5uZ3gtZGF0YXRhYmxlLmZpeGVkLWhlYWRlci52aXJ0dWFsaXplZCB7XHJcbiAgICBmbG9hdDogbGVmdDtcclxufVxyXG4uYnRuYWxnbiB7XHJcblx0ICAgIHRleHQtYWxpZ246IC13ZWJraXQtcmlnaHRcclxufVxyXG4iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators, NgForm } from '@angular/forms';\r\nimport { DatatableComponent } from \"@swimlane/ngx-datatable/release\";\r\nimport { GooglePlaceDirective } from \"ngx-google-places-autocomplete\";\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { SnotifyService, SnotifyPosition, SnotifyToastConfig } from 'ng-snotify';\r\nimport swal from 'sweetalert2';\r\n\r\n\r\nimport { ListsService } from '../shared/data/lists.service';\r\nimport { UserService } from '../shared/data/user.service';\r\nimport { AddFieldsService } from '../shared/data/addFields.service';\r\n\r\n@Component({\r\n  selector: 'app-lists',\r\n  templateUrl: './lists.component.html',\r\n  styleUrls: ['./lists.component.scss']\r\n})\r\nexport class ListsComponent implements OnInit { \r\n    listData: any;\r\n    public showTable = true;\r\n    public showForm: boolean = false;\r\n    public submitted: boolean = false;\r\n    public save: any;\r\n    public status;\r\n    lists = {\r\n        'id': '',\r\n        'name': '',\r\n        'email': '',\r\n        'phonenum': '',\r\n        'address': '',\r\n        'newsletter': '',\r\n        'fields': '',\r\n        // 'textValue': '',\r\n        // 'dateValue': '',\r\n        // 'numberValue': '',\r\n        // 'floatValue': '',\r\n        // 'toggleValue': ''\r\n    };\r\n    lists_extra = {};\r\n    options = {\r\n        types: ['geocode'],\r\n        componentRestrictions: { country: 'AU' }\r\n    }\r\n    p: number = 1;\r\n    totalList;\r\n    previousPage: any;\r\n    pageSize: number = 10;\r\n    collectionSize; newaddress;\r\n    //listForm: FormGroup;\r\n    users: any;\r\n    rows;\r\n    count =[];\r\n    \r\n    style = 'material';\r\n    title = 'Snotify title!';\r\n    body = 'Lorem ipsum dolor sit amet!';\r\n    timeout = 3000;\r\n    position: SnotifyPosition = SnotifyPosition.centerTop;\r\n    progressBar = true;\r\n    closeClick = true;\r\n    newTop = true;\r\n    backdrop = -1;\r\n    dockMax = 8;\r\n    blockMax = 6;\r\n    pauseHover = true;\r\n    titleMaxLength = 15;\r\n    bodyMaxLength = 80;\r\n    //submitted=false;\r\n\r\n\r\n    extraFields = false;\r\n    FieldsValue = [];\r\n    addFields = [];\r\n\r\n    @ViewChild(DatatableComponent) mydatatable: DatatableComponent;\r\n    @ViewChild(\"listForm\") listForm: NgForm;\r\n    @ViewChild(\"placesRef\") placesRef : GooglePlaceDirective;\r\n    \r\n    columns = [\r\n      { prop: 'firstName' },\r\n      { prop: 'lastName' },\r\n      { prop: 'email' },\r\n      { prop: 'address'},\r\n      { prop: 'listName' },\r\n      { prop: 'subscribedOn'},\r\n      { prop: 'subscribedStatus' },\r\n      { prop: 'Subscribed' }\r\n    ];\r\n     columns1 = [\r\n    { name: 'Name' },\r\n    { name: 'Email' },\r\n    { name: 'Phone'},\r\n    { name: 'Address'}\r\n    \r\n    ];\r\n  \r\n  allColumns1 = [\r\n    { name: 'Name' },\r\n    { name: 'Email' },\r\n    { name: 'Phone' },\r\n    { name: 'Address'}\r\n    \r\n  ]; \r\n  \r\n   isCollapsed = false;\r\n\r\n    constructor(private snotifyService: SnotifyService, public addFieldsService: AddFieldsService, public listsservice: ListsService,public userservice: UserService, public router: Router, private route: ActivatedRoute) {\r\n        //this.lists = new Array();\r\n    }\r\n\r\n    ngOnInit() {\r\n        // this.listForm = new FormGroup({\r\n        //     'fname': new FormControl(null, [Validators.required]),\r\n        //     'address': new FormControl(null, [Validators.required]),\r\n        //     'email': new FormControl(null, [Validators.required, Validators.email]),\r\n        //     'phone': new FormControl(null, [Validators.required]),\r\n        //     'newsletter': new FormControl(null,null)\r\n        // });\r\n        this.listsservice.getlist(new Date().getTime()).then(data => {\r\n            if(data['status'] == 'success'){\r\n                this.listData = data['lists'];\r\n                this.collectionSize = data['lists'].length;\r\n                this.totalList = data['lists'].length;\r\n            }\r\n        });\r\n        this.addFieldsService.getFieldsByTable('list').then(data=>{\r\n          if(data['status'] == 'success'){\r\n            //addFields\r\n            for(let i=0; i< data['fields'].length; i++){\r\n              let fields = JSON.parse(data['fields'][i]['fields']);\r\n                this.addFields.push({\r\n                  'label': fields['label'],\r\n            \t\t\t'datatype':fields['datatype'],\r\n            \t\t\t'length':fields['length'],\r\n            \t\t\t'mandatory':fields['mandatory'],\r\n            \t\t\t'validation':fields['validation'],\r\n            \t\t\t'validationMsg':fields['validationMsg'],\r\n            \t\t\t'fieldType':fields['fieldType'],\r\n                  'fieldName':fields['fieldName'],\r\n                  'id':data['fields'][i]['id']\r\n                });\r\n            }\r\n            this.extraFields = true;\r\n          }\r\n          else{\r\n            this.addFields = [];\r\n            this.extraFields = false;\r\n          }\r\n        });\r\n    }\r\n\r\n    public handleAddressChange(address) {\r\n        // Do some stuff\r\n        this.newaddress = address.formatted_address;\r\n    }\r\n\r\n    loadPage(page: number) {\r\n        if (page !== this.previousPage) {\r\n          this.previousPage = page;\r\n          //this.loadData();\r\n        }\r\n    }\r\n\r\n    addlist(){\r\n        this.showTable = false;\r\n        this.showForm = true;\r\n        this.save = true;\r\n    }\r\n    \r\n     toggle(col) {\r\n    const isChecked = this.isChecked(col);\r\n    console.log('isChecked value - ' + isChecked);\r\n    if(isChecked) {\r\n      this.columns1 = this.columns1.filter(c => {\r\n        console.log('Name - ' + c.name);\r\n        return c.name !== col.name; \r\n      });\r\n    } else {\r\n      this.columns1 = [...this.columns1, col];\r\n      console.log('columns1 - ' + this.columns1);\r\n    }\r\n  }\r\n\r\n  isChecked(col) {\r\n    return this.columns1.find(c => {\r\n      return c.name === col.name;\r\n    });\r\n  }\r\n\r\n    editlist(id){\r\n      this.listsservice.getlistById(id).then(data => {\r\n        this.save = false;\r\n        this.showTable = false;\r\n        this.showForm = false;\r\n        this.lists.id = data['lists'][0].id;\r\n        this.lists.name = data['lists'][0].name;\r\n        this.lists.email = data['lists'][0].email;\r\n        this.lists.phonenum = data['lists'][0].phone;\r\n        this.lists.address = data['lists'][0].address; // this.newaddress; data['lists'][0].address;\r\n        this.newaddress = data['lists'][0].address;\r\n        this.lists.newsletter = data['lists'][0].newsletter;\r\n        this.lists.fields = data['lists'][0].extraFieldsValue;\r\n        if(data['lists'][0].extraFieldsValue != ''){\r\n          this.FieldsValue = JSON.parse(data['lists'][0].extraFieldsValue);\r\n          for(let j = 0; j < this.addFields.length; j++){\r\n            for(let i = 0; i < this.FieldsValue.length; i++){\r\n              if(this.addFields[j].id == this.FieldsValue[i].id){\r\n                let modelName =  this.FieldsValue[i].fieldName+'_extra';\r\n                this.addFields[j].valuesBind = this.FieldsValue[i].value;\r\n                //if(this.addFields[j].fieldType == 'text'){\r\n                  this.lists_extra[modelName] = this.FieldsValue[i].value;\r\n                //}\r\n                // if(this.addFields[j].fieldType == 'date'){\r\n                //   this.lists_extra.this.FieldsValue[i].fieldName+'_extra' = this.FieldsValue[i].value;\r\n                // }\r\n                // if(this.addFields[j].fieldType == 'number'){\r\n                //   this.lists_extra.this.FieldsValue[i].fieldName+'_extra' = this.FieldsValue[i].value;\r\n                // }\r\n                // if(this.addFields[j].fieldType == 'float'){\r\n                //   this.lists_extra.this.FieldsValue[i].fieldName+'_extra' = this.FieldsValue[i].value;\r\n                // }\r\n                // if(this.addFields[j].fieldType == 'toggle'){\r\n                // this.lists_extra.this.FieldsValue[i].fieldName+'_extra' = this.FieldsValue[i].value;\r\n                // }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n      });\r\n      this.listsservice.getUsersByListId(id).then(data => {\r\n        if(data['status'] == 'success'){\r\n          this.rows = data['users'];\r\n        }\r\n        else{\r\n          this.rows = '';\r\n        }\r\n      });\r\n    }\r\n\r\n    updateStatus(event, userid){\r\n      let SubscriptionDetail = {\r\n        id: userid,\r\n        listId: this.lists.id\r\n      }\r\n      if(event){\r\n        this.userservice.addSubscriptionUser(SubscriptionDetail).then(data => {\r\n            this.snotifyService.success('Successfully Subscribed', '', this.getConfig());\r\n        });\r\n      }\r\n      else{\r\n        this.userservice.unSubscriptionUser(SubscriptionDetail).then(data => {\r\n            this.snotifyService.success('Successfully Unsubscribed', '', this.getConfig());\r\n        });\r\n      }\r\n    }\r\n\r\n    cancel(){\r\n      this.showTable = true;\r\n      this.showForm = false;\r\n      this.save = true;\r\n      this.listForm.reset();\r\n      this.lists.id = '';\r\n      this.lists.name = '';\r\n      this.lists.email = '';\r\n      this.lists.phonenum = '';\r\n      this.lists.address = '';\r\n      this.lists.newsletter = '';\r\n    }\r\n\r\n    fieldValueChange(id, value, fieldName){\r\n      if(this.FieldsValue.length > 0){\r\n        let checkValue = false;\r\n        for(let i = 0; i < this.FieldsValue.length; i++){\r\n          if(this.FieldsValue[i].id == id){\r\n            this.FieldsValue[i].value = value;\r\n            this.FieldsValue[i].fieldName = fieldName;\r\n            checkValue = true;\r\n          }\r\n        }\r\n        if(!checkValue){\r\n          this.FieldsValue.push({\"id\": id, \"value\": value, \"fieldName\": fieldName});\r\n        }\r\n      }\r\n      else{\r\n        this.FieldsValue.push({\"id\": id, \"value\": value, \"fieldName\": fieldName});\r\n      }\r\n      console.log('val -' +JSON.stringify(this.FieldsValue));\r\n    }\r\n\r\n    deletelist(id){\r\n      let self = this;\r\n      swal({\r\n            title: '',\r\n            html:\r\n            ''+\r\n            'Users Subscribed to the list will be deleted. Do you want to continue?',\r\n            showCloseButton: true,\r\n            confirmButtonText: 'Ok',\r\n            allowOutsideClick: false,\r\n            allowEscapeKey: false,\r\n            showCancelButton: true,\r\n        }).then(function (dismiss) {\r\n            //console.log(JSON.stringify(dismiss));\r\n            if (dismiss.value && dismiss !== 'cancel') {\r\n              self.listsservice.deletelistById(id).then(data => {\r\n                  self.snotifyService.error('Deleted Successfully', '', self.getConfig());\r\n                  self.listData = [];\r\n                  self.collectionSize = [];\r\n                  self.totalList = [];\r\n                  self.listsservice.getlist(new Date().getTime()).then(data => {\r\n                      if(data['status'] == 'success'){\r\n                          self.listData = data['lists'];\r\n                          self.collectionSize = data['lists'].length;\r\n                          self.totalList = data['lists'].length;\r\n                      }\r\n                  });\r\n              },\r\n              error => {\r\n              });\r\n            }\r\n        });\r\n    }\r\n\r\n    list(){\r\n      if(this.newaddress != ''){\r\n        this.lists.address = this.newaddress;\r\n      }\r\n      console.log(this.lists);\r\n      this.submitted = true;\r\n      if(this.extraFields){\r\n        this.lists.fields = JSON.stringify(this.FieldsValue);\r\n      }\r\n      else{\r\n        this.lists.fields = '';\r\n      }\r\n      //this.submitted = true;\r\n      if(this.lists.id != ''){\r\n        this.listsservice.addlist(this.lists, 'update').then(data => {\r\n          if(data['status']){\r\n            this.listForm.reset();\r\n            // this.lists.id = '';\r\n            // this.lists.name = '';\r\n            // this.lists.email = '';\r\n            // this.lists.phonenum = '';\r\n            // this.lists.address = '';\r\n            // this.lists.newsletter = '';\r\n            this.snotifyService.success('Updated Successfully', '', this.getConfig());\r\n            this.submitted = false;\r\n            this.listData = [];\r\n            this.collectionSize = [];\r\n            this.totalList = [];\r\n            this.listsservice.getlist(new Date().getTime()).then(listdata => {\r\n              if (listdata['status'] == 'success') {\r\n                  this.listData = listdata['lists'];\r\n                  this.collectionSize = listdata['lists'].length;\r\n                  this.totalList = listdata['lists'].length;\r\n                  this.submitted = false;\r\n                  this.showForm = false;\r\n                  this.showTable = true;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n      else{\r\n        this.listsservice.addlist(this.lists, 'add').then(data => {\r\n          if(data['status']){\r\n            this.listForm.reset();\r\n            // this.lists.id = '';\r\n            // this.lists.name = '';\r\n            // this.lists.email = '';\r\n            // this.lists.phonenum = '';\r\n            // this.lists.address = '';\r\n            // this.lists.newsletter = '';\r\n            this.snotifyService.success('Saved Successfully', '', this.getConfig());\r\n            this.listData = [];\r\n            this.collectionSize = [];\r\n            this.totalList = [];\r\n            this.listsservice.getlist(new Date().getTime()).then(listdata => {\r\n              if (listdata['status'] == 'success') {\r\n                this.listData = listdata['lists'];\r\n                this.collectionSize = listdata['lists'].length;\r\n                this.totalList = listdata['lists'].length;\r\n                this.submitted = false;\r\n                this.showForm = false;\r\n                this.showTable = true;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    isNumberKey(evt) {\r\n      let charCode = (evt.which) ? evt.which : evt.keyCode;\r\n      if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)){\r\n          return false;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    getConfig(): SnotifyToastConfig {\r\n        this.snotifyService.setDefaults({\r\n            global: {\r\n                newOnTop: this.newTop,\r\n                maxAtPosition: this.blockMax,\r\n                maxOnScreen: this.dockMax,\r\n            }\r\n        });\r\n        return {\r\n            bodyMaxLength: this.bodyMaxLength,\r\n            titleMaxLength: this.titleMaxLength,\r\n            backdrop: this.backdrop,\r\n            position: this.position,\r\n            timeout: this.timeout,\r\n            showProgressBar: this.progressBar,\r\n            closeOnClick: this.closeClick,\r\n            pauseOnHover: this.pauseHover\r\n        };\r\n    }\r\n}\r\n"],"sourceRoot":""}