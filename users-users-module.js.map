{"version":3,"sources":["webpack:///./src/app/users/add-users/add-users.component.html","webpack:///./src/app/users/add-users/add-users.component.scss","webpack:///./src/app/users/add-users/add-users.component.ts","webpack:///./src/app/users/checkin/checkin.component.html","webpack:///./src/app/users/checkin/checkin.component.scss","webpack:///./src/app/users/checkin/checkin.component.ts","webpack:///./src/app/users/edit-user/edit-user.component.html","webpack:///./src/app/users/edit-user/edit-user.component.scss","webpack:///./src/app/users/edit-user/edit-user.component.ts","webpack:///./src/app/users/move-users/move-users.component.html","webpack:///./src/app/users/move-users/move-users.component.scss","webpack:///./src/app/users/move-users/move-users.component.ts","webpack:///./src/app/users/profile/profile.component.html","webpack:///./src/app/users/profile/profile.component.scss","webpack:///./src/app/users/profile/profile.component.ts","webpack:///./src/app/users/segments/segments.component.html","webpack:///./src/app/users/segments/segments.component.scss","webpack:///./src/app/users/segments/segments.component.ts","webpack:///./src/app/users/subscribers/subscribers.component.html","webpack:///./src/app/users/subscribers/subscribers.component.scss","webpack:///./src/app/users/subscribers/subscribers.component.ts","webpack:///./src/app/users/users-list/users-list.component.html","webpack:///./src/app/users/users-list/users-list.component.scss","webpack:///./src/app/users/users-list/users-list.component.ts","webpack:///./src/app/users/users-routing.module.ts","webpack:///./src/app/users/users.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,ugMAAugM,SAAS,KAAK,WAAW,4zCAA4zC,SAAS,KAAK,WAAW,+vBAA+vB,iBAAiB,KAAK,mBAAmB,myMAAmyM,SAAS,KAAK,WAAW,0yCAA0yC,SAAS,KAAK,WAAW,2uBAA2uB,iBAAiB,KAAK,mBAAmB,o0B;;;;;;;;;;;ACAhjhB,+DAA+D,+J;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAF;AACe;AACnB;AACa;AAET;AACE;AACc;AAO7E;IAqBE,2BAAmB,WAAwB,EAAS,mBAAwC,EAAU,MAAc,EAAU,KAAqB,EAAU,YAA0B;QAApK,gBAAW,GAAX,WAAW,CAAa;QAAS,wBAAmB,GAAnB,mBAAmB,CAAqB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAbvL,kBAAa,GAAG,KAAK,CAAC;QACtB,eAAU,GAAG,KAAK,CAAC;QAEnB,YAAO,GAAG;YACR,KAAK,EAAE,CAAC,SAAS,CAAC;YAClB,qBAAqB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;SACzC;QAED,cAAS,GAAG,KAAK,CAAC;QAGX,iBAAY,GAAY,KAAK,CAAC;QAGnC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QAC5D,IAAG,KAAK,EAAC;YACP,IAAG,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,EAAC;gBACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;aAC1B;SACF;IACH,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAsDC;QArDC,IAAG,CAAC,IAAI,CAAC,YAAY,EAAC;YACpB,IAAI,CAAC,WAAW,GAAG,IAAI,wDAAS,CAAC;gBAC/B,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;gBACxD,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;gBACzD,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;gBACvE,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;gBACnD,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC3G,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;gBACxD,cAAc,EAAE,IAAI,0DAAW,CAAC,QAAQ,CAAC;gBACzC,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;gBACvD,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;gBACrD,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;aAKxD,EAAE,EAAC,QAAQ,EAAE,MAAM,EAAC,CAAC,CAAC;SACxB;aACG;YACF,IAAI,CAAC,WAAW,GAAG,IAAI,wDAAS,CAAC;gBAC/B,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;gBACxD,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;gBACzD,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;gBACvE,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;gBACnD,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC3G,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;gBACxD,cAAc,EAAE,IAAI,0DAAW,CAAC,QAAQ,CAAC;gBACzC,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;gBACvD,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;gBACrD,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;gBACvD,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;gBACpD,cAAc,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;gBAC1D,gFAAgF;gBAChF,+GAA+G;gBAC/G,4DAA4D;gBAC5D,uDAAuD;aAC1D,EAAE,EAAC,QAAQ,EAAE,MAAM,EAAC,CAAC,CAAC;SACxB;QACA,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;YACrD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAC3B,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC,EACD,eAAK;QACL,CAAC,CAAC,CAAC;QACA,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,cAAI;YACpC,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;YACtE,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QACN,IAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,GAAG,EAAC;YAC3C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC7B;IACD,CAAC;IAEM,+CAAmB,GAA1B,UAA2B,OAAO;QAChC,gBAAgB;QAChB,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,iBAAiB,CAAC;IAC9C,CAAC;IAED,gDAAoB,GAApB;QAAA,iBAoDA;QAnDA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACpB,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,YAAY,GAAG,EAAE,CAAC;QACxB,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;YACpB,OAAO;SACV;QACP,IAAG,CAAC,IAAI,CAAC,aAAa,EAAC;YACtB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,gBAAgB;SACpC;QACC,IAAG,IAAI,CAAC,YAAY,EAAC;YACnB,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;YAC/C,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC;SAChE;aAAM;YACL,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;YACtB,YAAY,GAAG,EAAE,CAAC;SACnB;QACD,IAAI,UAAU,GAAG;YACf,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK;YACrD,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK;YACrD,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK;YACvD,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK;YACrD,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK;YAC/C,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK;YAC3C,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK;YAC7D,OAAO,EAAE,IAAI,CAAC,UAAU;YACxB,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK;YAC/C,YAAY,EAAE,EAAE;YAChB,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,KAAK;YACnD,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,IAAI;YACV,YAAY,EAAE,YAAY;SAC3B;QACH,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,cAAI;YAC7C,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC9B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aACvC;iBACI,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,QAAQ,EAAC;aAElC;iBACI,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,YAAY,EAAC;gBACtC,IAAG,IAAI,CAAC,OAAO,CAAC,IAAI,yBAAyB,EAAC;oBAC7C,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;oBACX,0FAA0F;oBACzG,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;iBACxB;qBACG;oBACH,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBACvB,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC3B;aACD;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAEA,kCAAM,GAAN,UAAO,CAAC;QACP,IAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EAAC;YACnB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,qBAAqB;SACzC;aACG;YACH,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,gBAAgB;SACpC;IACF,CAAC;IAED,sCAAU,GAAV;QACA,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;IA3JgB;QAAf,+DAAS,CAAC,GAAG,CAAC;kCAAoB,qDAAM;gEAAC;IACtB;QAAnB,+DAAS,CAAC,OAAO,CAAC;kCAAiB,wDAAS;6DAAC;IACtB;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAa,mFAAoB;wDAAC;IAH9C,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAsBgC,qEAAW,EAA8B,qFAAmB,EAAkB,sDAAM,EAAiB,8DAAc,EAAwB,uEAAY;OArB5K,iBAAiB,CA8J7B;IAAD,wBAAC;CAAA;AA9J6B;;;;;;;;;;;;ACd9B,s5BAAs5B,wrBAAwrB,+VAA+V,sJAAsJ,o1BAAo1B,gBAAgB,yPAAyP,kBAAkB,6PAA6P,8BAA8B,4PAA4P,wCAAwC,yPAAyP,iBAAiB,sO;;;;;;;;;;;ACA3/H,+DAA+D,uJ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAU;AAMZ;AAEA;AAQ7D;IAkBE,0BAAmB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAhB3C,eAAU,GAAG,EAAE,CAAC;QAChB,uBAAkB,GAAG,EAAE,CAAC;QACxB,iBAAY,GAAG,EAAE,CAAC;QAClB,mBAAc,GAAG,CAAC,CAAC;QACnB,YAAO,GAAG;YACR,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE;YAClC,EAAE,IAAI,EAAE,eAAe,EAAE,KAAK,EAAE,EAAE,EAAE;YACpC,EAAE,IAAI,EAAE,kBAAkB,EAAE,KAAK,EAAE,EAAE,EAAC;YACtC,EAAE,IAAI,EAAE,eAAe,EAAE,KAAK,EAAE,EAAE,EAAC;SACpC,CAAC;QACF,eAAU,GAAG;YACX,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,EAAE;SACV,CAAC;QACF,WAAM,GAAG,EAAE,CAAC;IAEmC,CAAC;IAEhD,mCAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;YACzD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAC1B,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC7B,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC/B,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBACvC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBACjC,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;aAC3C;QACH,CAAC,EACD,eAAK;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAe,GAAf,UAAgB,QAAQ;QACtB,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,yCAAyC;QACzC,IAAG,QAAQ,IAAI,IAAI,EAAC;YAClB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAG,QAAQ,CAAC,MAAM,GAAC,CAAC,EAAE,CAAC,EAAE,EAAC;gBACxC,IAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,EAAC;oBACxB,OAAO,IAAI,QAAQ,GAAC,CAAC,GAAC,MAAM,GAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,GAAC,KAAK,GAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;oBACvE,IAAG,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAC;wBACzB,OAAO,IAAI,KAAK,CAAC;qBAClB;iBACF;qBACG;oBACF,OAAO,GAAG,GAAG,CAAC;iBACf;aACF;SACF;aACG;YACF,OAAO,GAAG,GAAG,CAAC;SACf;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,uCAAY,GAAZ,UAAa,KAAK;QAChB,IAAG,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,EAAC;YAC1B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;YAC/C,IAAI,KAAG,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;YAC3C,IAAI,MAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAI,SAAO,GAAG,MAAI,CAAC,MAAM,CAAC;YAC1B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,UAAS,IAAI;gBACtD,KAAK,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,IAAE,SAAO,GAAC,CAAC,EAAE,CAAC,EAAE,EAAC;oBAC9B,IAAI,MAAI,CAAC,CAAC,CAAC,KAAK,iBAAiB,IAAI,MAAI,CAAC,CAAC,CAAC,KAAK,aAAa,EAAC;wBAC7D,IAAG,IAAI,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,EAAC;4BAC9C,IAAG,IAAI,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAG,EAAC;gCACzD,OAAO,IAAI,CAAC;6BACb;yBACF;qBACF;iBACF;YACH,CAAC,CAAC,CAAC;SACJ;aACG;YACF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC;SAC3C;QACD,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IACxB,CAAC;IAED,sCAAW,GAAX;QAAA,iBAuCC;QAtCC,IAAI,SAAS,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,MAAM,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,OAAO,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;QAC7H,8BAA8B;QAC9B,IAAI,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;QAC9H,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,cAAI;YACpF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAC1B,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC7B,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC/B,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBACvC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBACjC,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;gBAC1C,yBAAyB;gBACzB,gDAAgD;gBAChD,+BAA+B;gBAC/B,+DAA+D;gBAC/D,wCAAwC;gBACxC,yEAAyE;gBACzE,4DAA4D;gBAC5D,yFAAyF;gBACzF,2BAA2B;gBAC3B,cAAc;gBACd,YAAY;gBACZ,UAAU;gBACV,QAAQ;gBACR,QAAQ;gBACR,IAAI;aACL;QACH,CAAC,EACD,eAAK;QACL,CAAC,CAAC,CAAC;QAEH,oDAAoD;QACpD,kDAAkD;QAClD,wOAAwO;QACxO,MAAM;QACN,2DAA2D;QAC3D,+EAA+E;QAC/E,MAAM;QACN,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IACxB,CAAC;IACD,uCAAY,GAAZ;QACE,IAAI,CAAC,UAAU,CAAC,EAAE,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,GAAG,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAC1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAC5C,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACnB,CAAC;IA7H4B;QAA9B,+DAAS,CAAC,0EAAkB,CAAC;kCAAQ,0EAAkB;mDAAC;IAD5C,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAmBgC,qEAAW;OAlBhC,gBAAgB,CAiI5B;IAAD,uBAAC;CAAA;AAjI4B;;;;;;;;;;;;AChB7B,idAAid,WAAW,mNAAmN,oEAAoE,gBAAgB,iDAAiD,iBAAiB,kEAAkE,iBAAiB,+DAA+D,mBAAmB,oJAAoJ,gFAAgF,cAAc,mGAAmG,aAAa,KAAK,cAAc,yyBAAyyB,uDAAuD,qmBAAqmB,uDAAuD,oyBAAoyB,wDAAwD,2oBAA2oB,uDAAuD,unGAAunG,oDAAoD,oGAAoG,KAAK,opBAAopB,sDAAsD,mtBAAmtB,yDAAyD,oVAAoV,WAAW,KAAK,cAAc,60CAA60C,4DAA4D,8dAA8d,4DAA4D,y3BAAy3B,4DAA4D,0dAA0d,6JAA6J,aAAa,mFAAmF,iBAAiB,aAAa,kBAAkB,gFAAgF,cAAc,qTAAqT,qBAAqB,6LAA6L,aAAa,mFAAmF,iBAAiB,aAAa,kBAAkB,8VAA8V,qBAAqB,+LAA+L,aAAa,oFAAoF,kBAAkB,YAAY,iBAAiB,gGAAgG,cAAc,wrBAAwrB,cAAc,yKAAyK,qBAAqB,8LAA8L,aAAa,oFAAoF,kBAAkB,YAAY,iBAAiB,+FAA+F,cAAc,8VAA8V,cAAc,gFAAgF,IAAI,kVAAkV,IAAI,wSAAwS,cAAc,wKAAwK,qBAAqB,+LAA+L,aAAa,gEAAgE,iBAAiB,4SAA4S,qBAAqB,g6CAAg6C,WAAW,8xBAA8xB,SAAS,KAAK,WAAW,y8BAAy8B,WAAW,s5BAAs5B,WAAW,kbAAkb,qFAAqF,2NAA2N,aAAa,uTAAuT,qBAAqB,wTAAwT,sBAAsB,mTAAmT,sCAAsC,8dAA8d,WAAW,kSAAkS,qFAAqF,2NAA2N,aAAa,qTAAqT,YAAY,sTAAsT,YAAY,ieAAie,WAAW,yjGAAyjG,oBAAoB,oTAAoT,aAAa,sTAAsT,WAAW,8SAA8S,YAAY,oTAAoT,kBAAkB,mTAAmT,iBAAiB,m8CAAm8C,mBAAmB,4LAA4L,eAAe,gEAAgE,sBAAsB,6sBAA6sB,mBAAmB,yLAAyL,eAAe,gEAAgE,sBAAsB,0SAA0S,+gHAA+gH,eAAe,6YAA6Y,eAAe,knD;;;;;;;;;;;ACA31qC,+DAA+D,+J;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAF;AACe;AACnB;AACa;AAEO;AACI;AAEpB;AACU;AACE;AACV;AACU;AACQ;AAQjF;IA4HE,2BAAmB,qBAA4C,EAAS,iBAAoC,EAAS,iBAAoC,EAAS,gBAAkC,EAAU,cAA8B,EAAS,mBAAwC,EAAS,WAAwB,EAAU,MAAc,EAAU,KAAqB,EAAS,YAA0B;QAAxZ,iBAwDC;QAxDkB,0BAAqB,GAArB,qBAAqB,CAAuB;QAAS,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAS,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAS,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAS,wBAAmB,GAAnB,mBAAmB,CAAqB;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAS,iBAAY,GAAZ,YAAY,CAAc;QArHxZ,YAAO,GAAG;YACR,KAAK,EAAE,CAAC,SAAS,CAAC;YAClB,qBAAqB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;SACzC,CAAC;QACF,eAAU,GAAG,EAAE,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;QAElB,qBAAgB,GAAG,KAAK,CAAC;QAEzB,iBAAY,GAAG,CAAC,CAAC;QACjB,mBAAc,GAAG,KAAK,CAAC;QAEvB,yBAAoB,GAAG;YACrB,EAAE,IAAI,EAAE,MAAM,EAAE;YAChB,EAAE,IAAI,EAAE,iBAAiB,EAAE;YAC3B,EAAE,IAAI,EAAE,kBAAkB,EAAE;YAC5B,EAAE,IAAI,EAAE,aAAa,EAAE;SACxB,CAAC;QAGF,uBAAkB,GAAG;YACnB,EAAE,IAAI,EAAE,gBAAgB,EAAE;YAC1B,EAAE,IAAI,EAAE,SAAS,EAAE;YACnB,EAAE,IAAI,EAAE,eAAe,EAAE;YACzB,EAAE,IAAI,EAAE,QAAQ,EAAE;YAClB,EAAE,IAAI,EAAE,cAAc,EAAE;YACxB,EAAE,IAAI,EAAE,aAAa,EAAE;SACxB,CAAC;QACF,YAAO,GAAG,EAAE,CAAC;QAEb,+BAA0B,GAAG;YAC3B,EAAE,IAAI,EAAE,SAAS,EAAE;YACnB,EAAE,IAAI,EAAE,eAAe,EAAE;YACzB,EAAE,IAAI,EAAE,gBAAgB,EAAE;SAC3B;QAED,YAAO,GAAG,IAAI,CAAC;QACf,aAAQ,GAAoB,0DAAe,CAAC,SAAS,CAAC;QACtD,gBAAW,GAAG,IAAI,CAAC;QACnB,eAAU,GAAG,IAAI,CAAC;QAClB,WAAM,GAAG,IAAI,CAAC;QACd,aAAQ,GAAG,CAAC,CAAC,CAAC;QACd,YAAO,GAAG,CAAC,CAAC;QACZ,aAAQ,GAAG,CAAC,CAAC;QACb,eAAU,GAAG,IAAI,CAAC;QAClB,mBAAc,GAAG,EAAE,CAAC;QACpB,kBAAa,GAAG,EAAE,CAAC;QACnB,gBAAW,GAAG,KAAK,CAAC;QACpB,cAAS,GAAG,EAAE,CAAC;QACf,gBAAW,GAAG,KAAK,CAAC;QAKpB,gBAAW,GAAG,EAAE,CAAC;QACjB,sBAAiB,GAAG,EAAE,CAAC;QAGvB,sBAAiB,GAAG,EAAE,CAAC;QACvB,cAAS,GAAG;YACV,WAAW,EAAE,EAAE;YACf,QAAQ,EAAE,EAAE;SACb,CAAC;QACF,gBAAW,GAAG,EAAE,CAAC;QACjB,WAAM,GAAG;YACP,UAAU,EAAC,aAAa;YACxB,MAAM,EAAC,IAAI;YACX,MAAM,EAAE,MAAM;YACd,WAAW,EAAC,QAAQ;YACpB,gBAAgB,EAAE,cAAK,CAAC;YACxB,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM;YAChC,QAAQ,EAAE,MAAM;YAChB,cAAc,EAAE,mBAAmB;YACnC,iBAAiB,EAAC,QAAQ;YAC1B,WAAW,EAAE,MAAM;SACpB;QAED,cAAS,GAAG,KAAK,CAAC;QAElB,cAAS,GAAG;YACV,UAAU,EAAE,EAAE;YACd,WAAW,EAAE,EAAE;YACf,OAAO,EAAE,EAAE;YACX,KAAK,EAAE,EAAE;YACT,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,EAAE;YACd,cAAc,EAAE,EAAE;YAClB,SAAS,EAAE,EAAE;YACb,OAAO,EAAE,EAAE;YACX,WAAW,EAAE,EAAE;YACf,WAAW,EAAE,EAAE;YACf,aAAa,EAAE,EAAE;YACjB,YAAY,EAAE,EAAE;YAChB,aAAa,EAAE,EAAE;YACjB,QAAQ,EAAE,EAAE;YACZ,IAAI,EAAE,EAAE;YACR,UAAU,EAAC,EAAE;YACb,MAAM,EAAC,EAAE;YACT,OAAO,EAAC,EAAE;YACV,UAAU,EAAC,EAAE;YACb,SAAS,EAAC,EAAE;YACZ,YAAY,EAAE,EAAE;YAChB,QAAQ,EAAC,EAAE;YACX,OAAO,EAAE,EAAE;YACX,kBAAkB,EAAE,KAAK;YACzB,kBAAkB,EAAE,KAAK;YACzB,eAAe,EAAE,EAAE;YACnB,eAAe,EAAE,EAAE;SACpB,CAAC;QACF,qBAAgB,GAAG,EAAE,CAAC;QAEtB,uBAAkB,GAAG,EAAE,CAAC;QACxB,iBAAY,GAAG,KAAK,CAAC;QAErB,oBAAe,GAAG,EAAE,CAAC;QA0PrB,qBAAgB,GAAG,KAAK,CAAC;QAtPvB,qCAAqC;QACrC,8DAA8D;QAC9D,+DAA+D;QAC/D,6EAA6E;QAC7E,yDAAyD;QACzD,iHAAiH;QACjH,8DAA8D;QAC9D,kEAAkE;QAClE,6DAA6D;QAC7D,2DAA2D;QAC3D,8CAA8C;QAC9C,8CAA8C;QAC9C,gDAAgD;QAChD,+CAA+C;QAC/C,gDAAgD;QAChD,8CAA8C;QAC9C,sHAAsH;QACtH,mEAAmE;QACnE,8DAA8D;QAC9D,0BAA0B;QAC1B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,gBAAM;YACrC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YACxC,IAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,MAAM,EAAC;gBAC5B,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;aAC1B;iBACG;gBACF,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;aAC3B;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;QAC7C,iDAAiD;QACjD,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,cAAI;YACvD,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC7B,WAAW;gBACX,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;oBACzC,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACnD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC;wBAClB,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC;wBACxB,UAAU,EAAC,MAAM,CAAC,UAAU,CAAC;wBAC7B,QAAQ,EAAC,MAAM,CAAC,QAAQ,CAAC;wBACzB,WAAW,EAAC,MAAM,CAAC,WAAW,CAAC;wBAC/B,YAAY,EAAC,MAAM,CAAC,YAAY,CAAC;wBACjC,eAAe,EAAC,MAAM,CAAC,eAAe,CAAC;wBACvC,WAAW,EAAC,MAAM,CAAC,WAAW,CAAC;wBAC/B,WAAW,EAAC,MAAM,CAAC,WAAW,CAAC;wBAC/B,IAAI,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;qBAC7B,CAAC,CAAC;iBACN;gBACD,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;aACzB;iBACG;gBACF,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,oCAAQ,GAAR;QAAA,iBA8CC;QA7CC,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,cAAI;YAC9C,IAAG,IAAI,CAAC,YAAY,CAAC,EAAC;gBACpB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;aACnC;QACH,CAAC,EACD,eAAK;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,cAAI;YACpD,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC7B,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC/B,KAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACrD,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC;aACtD;iBACG;gBACF,KAAI,CAAC,OAAO,GAAG,EAAE,CAAC;gBAClB,KAAI,CAAC,SAAS,CAAC,SAAS,GAAG,EAAE,CAAC;aAC/B;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;YACvD,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC7B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;oBAC3C,KAAI,CAAC,WAAW,GAAO,KAAI,CAAC,WAAW,SAAE,EAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAC,EAAC,CAAC;iBACnH;aACF;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,cAAI;YACjD,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC7B,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;aACnC;iBACG;gBACF,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;aACrB;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;YAC9E,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC7B,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;aACrC;iBACG;gBACF,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;aAC3B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAQ,GAAR,UAAS,KAAK;QACZ,iDAAiD;QACjD,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,KAAK,CAAC;QACjC,+BAA+B;IACjC,CAAC;IAED,0CAAc,GAAd;QAAA,iBAYC;QAXC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACpC,IAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,cAAI;YACjE,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC7B,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,oCAAoC,EAAE,EAAE,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC;gBACxF,KAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,KAAI,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;oBAC/E,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;wBAC7B,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;qBAC7B;gBACH,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAgB,GAAhB,UAAiB,EAAE,EAAE,KAAK,EAAE,SAAS;QACnC,IAAG,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAC;YAC7B,IAAI,UAAU,GAAG,KAAK,CAAC;YACvB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAC9C,IAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAC;oBAC9B,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;oBAClC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC;oBAC1C,UAAU,GAAG,IAAI,CAAC;iBACnB;aACF;YACD,IAAG,CAAC,UAAU,EAAC;gBACb,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAC,CAAC,CAAC;aAC3E;SACF;aACG;YACF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAC,CAAC,CAAC;SAC3E;QACD,OAAO,CAAC,GAAG,CAAC,OAAO,GAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACzC,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAmFC;QAlFC,IAAI,CAAC,eAAe,GAAG,IAAI,wDAAS,CAAC;YACnC,gBAAgB,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,IAAI,CAAC;YAC7C,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,IAAI,CAAC;YAClC,eAAe,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,IAAI,CAAC;YAC5C,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACvD,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;YACnE,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC7B,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5B,KAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACnD,KAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;gBACrD,KAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBAC7C,KAAI,CAAC,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;gBACzC,KAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACnD,KAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACnD,KAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;gBACjD,KAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBAC7C,IAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,QAAQ,EAAC;oBACrE,KAAI,CAAC,SAAS,CAAC,YAAY,GAAG,QAAQ,CAAC;iBACxC;qBACG;oBACF,KAAI,CAAC,SAAS,CAAC,YAAY,GAAG,MAAM,CAAC;iBACtC;gBACD,IAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,MAAM,EAAC;oBAChC,KAAI,CAAC,SAAS,CAAC,aAAa,GAAG,GAAG,CAAC;oBACnC,KAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC;oBAC5B,KAAI,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC;iBAC9D;qBACG;oBACF,KAAI,CAAC,SAAS,CAAC,aAAa,GAAG,GAAG,CAAC;oBACnC,KAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC;iBAC7B;gBAED,KAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBAC7C,KAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC3C,KAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBAC7C,KAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACnD,KAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;gBACjD,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;gBACrC,IAAG,KAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,EAAC;oBAC1B,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;iBAC9B;gBACD,IAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,IAAI,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,IAAI,EAAE,EAAC;oBACzH,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;iBAC/C;qBACG;oBACF,KAAI,CAAC,SAAS,GAAG,8BAA8B,CAAC;iBACjD;gBACD,KAAI,CAAC,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC;gBAC1D,KAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;gBAChD,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;gBACvF,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;aAC5D;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;YAC/E,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,IAAI,QAAQ,GAAG,EAAE,CAAC;gBAClB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC5B,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;gBACxC,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,KAAI,CAAC,YAAY,EAAE,CAAC,EAAE,EAAC;oBACpC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;iBACxC;gBACD,KAAI,CAAC,SAAS,CAAC,SAAS,GAAG,QAAQ,CAAC;aACrC;iBACG;gBACF,KAAI,CAAC,OAAO,GAAG,EAAE,CAAC;gBAClB,KAAI,CAAC,YAAY,GAAG,CAAC,CAAC;gBACtB,KAAI,CAAC,SAAS,CAAC,SAAS,GAAG,EAAE,CAAC;aAC/B;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,cAAI;YAClE,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC7B,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;aAChD;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;YAChF,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC7B,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;aAC1C;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;IAC/B,CAAC;IAED,mDAAuB,GAAvB,UAAwB,SAAS;QAAjC,iBAeC;QAdC,IAAI,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;QAC1C,QAAQ,CAAC,MAAM,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,cAAI;YAC3D,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,yCAAyC,EAAE,EAAE,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC;YAC7F,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,KAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,KAAI,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;gBAC9E,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;oBAC7B,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;iBACrC;qBACG;oBACF,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;iBAC3B;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAa,GAAb,UAAc,KAAK;QACjB,IAAG,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,EAAC;YAC1B,IAAG,IAAI,CAAC,SAAS,CAAC,UAAU,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,EAAC;gBACjD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;aAC9B;iBACG;gBACF,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;aAC/B;SACF;aACG;YACF,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;SAC/B;IACH,CAAC;IAED,gDAAoB,GAApB;QAAA,iBA+DC;QA9DC,IAAG,IAAI,CAAC,QAAQ,EAAE,EAAC;YACjB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,WAAW,GAAG,EAAE,CAAC;YACrB,IAAG,IAAI,CAAC,UAAU,KAAK,EAAE,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC;aAC1C;YACD,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACzD,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;YAChC,IAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YACxD,IAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;YACzG,+DAA+D;YAC/D,qBAAqB;YACrB,2DAA2D;YAC3D,2DAA2D;YAC3D,6DAA6D;YAC7D,2DAA2D;YAC3D,qDAAqD;YACrD,iDAAiD;YACjD,mEAAmE;YACnE,0BAA0B;YAC1B,qDAAqD;YACrD,0FAA0F;YAC1F,qBAAqB;YACrB,6BAA6B;YAC7B,IAAI;YACJ,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,cAAI;gBACjD,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;oBAC7B,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,mCAAmC,EAAE,EAAE,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC;oBACvF,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAI,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;wBACnE,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;4BAC7B,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC5B,4EAA4E;4BAC5E,8EAA8E;4BAC9E,sEAAsE;4BACtE,kEAAkE;4BAClE,4EAA4E;4BAC5E,4EAA4E;4BAC5E,0EAA0E;4BAC1E,8EAA8E;4BAC9E,sEAAsE;4BACtE,wCAAwC;4BACxC,KAAI,CAAC,QAAQ,EAAE,CAAC;4BAChB,IAAG,KAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,EAAC;gCAC1B,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;6BAC9B;yBAEF;oBACH,CAAC,CAAC,CAAC;iBACJ;qBACG;oBACF,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,sDAAsD,EAAE,EAAE,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC;oBAC1G,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;iBACxB;YACH,CAAC,CAAC,CAAC;SACJ;aACG;YACF,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,EAAE,CAAC;SACzB;IACH,CAAC;IAED,sCAAU,GAAV,UAAW,EAAE;QACX,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC1B,IAAG,IAAI,CAAC,YAAY,EAAC;YACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;SAC1C;aACG;YACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;SACxC;QAED;+FACuF;IACzF,CAAC;IAEM,+CAAmB,GAA1B,UAA2B,OAAO;QAChC,gBAAgB;QAChB,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,iBAAiB,CAAC;QAC5C,IAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAC,eAAe,CAAC,IAAI,EAAE,EAAC;YACxD,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAC,eAAe,CAAC,GAAE,IAAI,CAAC;SAClF;QACD,IAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAC,OAAO,CAAC,IAAI,EAAE,EAAC;YAChD,IAAI,CAAC,SAAS,CAAC,QAAQ,IAAI,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAC,OAAO,CAAC,CAAC;SACrE;QACD,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAC,UAAU,CAAC,CAAC;QAClE,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAC,6BAA6B,CAAC,CAAC;QACtF,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAC,aAAa,CAAC,CAAC;QACzE,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAC,SAAS,CAAC,CAAC;IACtE,CAAC;IACM,8CAAkB,GAAzB,UAA0B,OAAO,EAAE,IAAI;QACrC,IAAG,CAAC,IAAI;YACJ,OAAO,IAAI,CAAC;QAEhB,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,kBAAkB,IAAI,OAAO,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC;YACjF,OAAO,IAAI,CAAC;QAEhB,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAE1B,KAAiB,UAA0B,EAA1B,YAAO,CAAC,kBAAkB,EAA1B,cAA0B,EAA1B,IAA0B,EAAE;YAAxC,IAAI,IAAI;YACT,IAAG,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC;gBACpC,SAAS;YAEb,IAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,WAAC,IAAI,QAAC,CAAC,WAAW,EAAE,IAAI,IAAI,EAAvB,CAAuB,CAAC,GAAG,CAAC,CAAC;gBACtD,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC;SAChC;QAED,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,uCAAW,GAAX,UAAY,KAAK,EAAE,EAAE,EAAE,cAAc;QAArC,iBAmCC;QAlCC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,kBAAkB,GAAG;YACvB,EAAE,EAAC,IAAI,CAAC,MAAM;YACd,MAAM,EAAE,cAAc;SACvB;QACD,IAAG,KAAK,EAAC;YACP,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,cAAI;gBAChE,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;oBAC7B,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,oCAAoC,EAAE,EAAE,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC;oBACxF,KAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,KAAI,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;wBAC/E,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;4BAC7B,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;yBAC7B;oBACH,CAAC,CAAC,CAAC;oBACH,KAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,KAAI,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;wBAChF,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;4BAC7B,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;yBAC1C;oBACH,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;SACJ;aACG;YACF,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,cAAI;gBAC/D,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;oBAC7B,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,oCAAoC,EAAE,EAAE,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC;oBACxF,KAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,KAAI,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;wBAC/E,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;4BAC7B,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;yBAC7B;oBACH,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,oCAAQ,GAAR;QACE,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,IAAI,SAAS,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAC7C,IAAI,GAAG,GAAG,KAAK,CAAC,WAAW,EAAE,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC;QACxD,IAAI,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;QAChD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC,EAAE;YAC7D,GAAG,EAAE,CAAC;SACT;QACD,IAAG,GAAG,GAAG,EAAE,EAAC;YACV,OAAO,KAAK,CAAC;SACd;aACG;YACF,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,uCAAW,GAAX,UAAY,GAAG;QACb,IAAI,QAAQ,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC;QACrD,IAAI,QAAQ,IAAI,EAAE,IAAI,QAAQ,GAAG,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,IAAI,QAAQ,GAAG,EAAE,CAAC,EAAC;YACpE,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,qCAAS,GAAT;QACE,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC;YAC5B,MAAM,EAAE;gBACJ,QAAQ,EAAE,IAAI,CAAC,MAAM;gBACrB,aAAa,EAAE,IAAI,CAAC,QAAQ;gBAC5B,WAAW,EAAE,IAAI,CAAC,OAAO;aAC5B;SACJ,CAAC,CAAC;QACH,OAAO;YACH,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,eAAe,EAAE,IAAI,CAAC,WAAW;YACjC,YAAY,EAAE,IAAI,CAAC,UAAU;YAC7B,YAAY,EAAE,IAAI,CAAC,UAAU;SAChC,CAAC;IACH,CAAC;IAhkBqB;QAAtB,+DAAS,CAAC,UAAU,CAAC;kCAAe,qDAAM;2DAAC;IACxB;QAAnB,+DAAS,CAAC,OAAO,CAAC;kCAAiB,wDAAS;6DAAC;IACtB;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAa,mFAAoB;wDAAC;IAH9C,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCA6H0C,0FAAqB,EAA4B,iFAAiB,EAA4B,kFAAiB,EAA2B,+EAAgB,EAA0B,yDAAc,EAA8B,qFAAmB,EAAsB,qEAAW,EAAkB,sDAAM,EAAiB,8DAAc,EAAuB,uEAAY;OA5H7Y,iBAAiB,CAkkB7B;IAAD,wBAAC;CAAA;AAlkB6B;;;;;;;;;;;;ACrB9B,6qBAA6qB,SAAS,8CAA8C,WAAW,4TAA4T,UAAU,sjBAAsjB,SAAS,aAAa,SAAS,gLAAgL,SAAS,wKAAwK,gBAAgB,GAAG,eAAe,IAAI,YAAY,4xCAA4xC,SAAS,gDAAgD,WAAW,4TAA4T,QAAQ,4TAA4T,gBAAgB,GAAG,eAAe,IAAI,YAAY,iO;;;;;;;;;;;ACA/iI,+DAA+D,+J;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAU;AAChB;AACwB;AAEpB;AACE;AAO/D;IAEE,4BAAmB,WAAwB,EAAU,cAA8B,EAAS,YAA0B,EAAU,MAAc,EAAU,KAAqB;QAA1J,gBAAW,GAAX,WAAW,CAAa;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAS,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;QAK7K,mBAAc,GAAG,EAAE,CAAC;QACpB,qBAAgB,GAAG,EAAE,CAAC;QACtB,UAAK,GAAG,EAAE,CAAC;QACX,cAAS,GAAG,EAAE,CAAC;QACf,qBAAgB,GAAG,EAAE,CAAC;QACtB,cAAS,GAAG,KAAK,CAAC;QAElB,YAAO,GAAG,IAAI,CAAC;QACf,aAAQ,GAAoB,0DAAe,CAAC,SAAS,CAAC;QACtD,gBAAW,GAAG,IAAI,CAAC;QACnB,eAAU,GAAG,IAAI,CAAC;QAClB,WAAM,GAAG,IAAI,CAAC;QACd,aAAQ,GAAG,CAAC,CAAC,CAAC;QACd,YAAO,GAAG,CAAC,CAAC;QACZ,aAAQ,GAAG,CAAC,CAAC;QACb,eAAU,GAAG,IAAI,CAAC;QAClB,mBAAc,GAAG,EAAE,CAAC;QACpB,kBAAa,GAAG,EAAE,CAAC;QACnB,QAAG,GAAG,EAAE,CAAC;QACT,SAAI,GAAG,EAAE,CAAC;IAxBuK,CAAC;IA0BlL,qCAAQ,GAAR;QAAA,iBAaC;QAZC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;YACrD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAC3B,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC,EACD,eAAK;QACL,CAAC,CAAC,CAAC;QACH,yDAAyD;QACzD,kCAAkC;QAClC,kCAAkC;QAClC,KAAK;QACL,aAAa;QACb,MAAM;IACR,CAAC;IAED,yCAAY,GAAZ,UAAa,KAAK,EAAE,KAAK;QAAzB,iBAwBC;QAvBC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC;QAC9E,IAAG,KAAK,IAAI,EAAE,EAAC;YACb,IAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,KAAK,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;gBAC5E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC3B,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;oBAC7B,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;iBAC5B;qBACG;oBACF,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;iBACjB;YACL,CAAC,CAAC,CAAC;SACJ;aACG;YACF,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,yDAAyD;YACzD,kCAAkC;YAClC,kCAAkC;YAClC,KAAK;YACL,aAAa;YACb,MAAM;SACP;IACH,CAAC;IAED,2CAAc,GAAd,UAAe,KAAK,EAAE,KAAK;QAA3B,iBAuBC;QAtBC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC;QAC5E,IAAG,KAAK,IAAI,EAAE,EAAC;YACb,IAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,KAAK,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;gBAC5E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC3B,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;oBAC7B,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;iBAChC;qBACG;oBACF,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;iBACrB;YACL,CAAC,CAAC,CAAC;SACJ;aACG;YACF,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,yDAAyD;YACzD,kCAAkC;YAClC,sCAAsC;YACtC,KAAK;YACL,aAAa;YACb,MAAM;SACP;IACH,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAkCC;QAjCC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAG,IAAI,CAAC,gBAAgB,IAAI,EAAE,EAAC;YAC7B,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,cAAI;gBAC1G,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;oBAC3B,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,4CAA4C,EAAE,EAAE,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC;oBAChG,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAChB,KAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;oBAC3B,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;oBACpB,KAAI,CAAC,GAAG,GAAG,EAAE,CAAC;oBACd,KAAI,CAAC,IAAI,GAAG,EAAE,CAAC;oBACf,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;oBACzB,KAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;oBAC3B,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;oBACnB,KAAI,CAAC,MAAM,GAAG,EAAE,CAAC;oBACjB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;iBAC1B;YACL,CAAC,EACD,eAAK;YACL,CAAC,CAAC,CAAC;SACJ;aACG;YACF,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,cAAI;gBAC3E,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;oBAC3B,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,4CAA4C,EAAE,EAAE,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC;oBAChG,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAChB,KAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;oBAC3B,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;oBACpB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;iBAC1B;YACL,CAAC,EACD,eAAK;YACL,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,uCAAU,GAAV,UAAW,GAAG,EAAC,OAAO,EAAC,GAAG;QACxB,qBAAqB;QACrB,IAAG,CAAC,OAAO,EAAC;YACV,IAAI,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBACnD,IAAK,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE;oBACpC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAClB;aACH;SACF;aACG;YACF,IAAI,UAAU,GAAG,KAAK,CAAC;YACvB,IAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAC;gBAC3B,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;oBACxC,IAAG,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,EAAC;wBAC7B,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC;wBACpB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,+CAA+C,EAAE,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;wBACnG,UAAU,GAAG,IAAI,CAAC;wBAClB,MAAM;qBACP;iBACF;aACF;YACD,IAAG,CAAC,UAAU,EAAC;gBACb,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACjC;SACF;QACD,mBAAmB;QACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACrC,CAAC;IAED,sCAAS,GAAT;QACE,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC;YAC5B,MAAM,EAAE;gBACJ,QAAQ,EAAE,IAAI,CAAC,MAAM;gBACrB,aAAa,EAAE,IAAI,CAAC,QAAQ;gBAC5B,WAAW,EAAE,IAAI,CAAC,OAAO;aAC5B;SACJ,CAAC,CAAC;QACH,OAAO;YACH,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,eAAe,EAAE,IAAI,CAAC,WAAW;YACjC,YAAY,EAAE,IAAI,CAAC,UAAU;YAC7B,YAAY,EAAE,IAAI,CAAC,UAAU;SAChC,CAAC;IACJ,CAAC;IAED,wCAAW,GAAX;QACE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IA/LU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAGgC,qEAAW,EAA0B,yDAAc,EAAuB,uEAAY,EAAkB,sDAAM,EAAiB,8DAAc;OAFlK,kBAAkB,CAgM9B;IAAD,yBAAC;CAAA;AAhM8B;;;;;;;;;;;;ACZ/B,m6BAAm6B,WAAW,oPAAoP,cAAc,soBAAsoB,WAAW,wRAAwR,eAAe,qRAAqR,cAAc,iRAAiR,aAAa,ycAAyc,aAAa,gSAAgS,gBAAgB,gSAAgS,kBAAkB,qRAAqR,qBAAqB,k6BAAk6B,aAAa,i/EAAi/E,gBAAgB,yCAAyC,gBAAgB,6tBAA6tB,iBAAiB,4wBAA4wB,0BAA0B,0wBAA0wB,yBAAyB,iiBAAiiB,cAAc,MAAM,yBAAyB,oQAAoQ,iBAAiB,s4CAAs4C,mBAAmB,4LAA4L,eAAe,0DAA0D,sBAAsB,qsBAAqsB,mBAAmB,yLAAyL,eAAe,0DAA0D,sBAAsB,oiF;;;;;;;;;;;ACAlza,+BAA+B,gBAAgB,mBAAmB,sBAAsB,EAAE,iCAAiC,mCAAmC,EAAE,+CAA+C,moB;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7J;AACW;AACJ;AAOzD;IAQE,0BAAmB,WAAwB,EAAU,MAAc,EAAU,KAAqB;QAAlG,iBA6BC;QA7BkB,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;QAPlG,WAAM,GAAG,EAAE,CAAC;QAKZ,cAAS,GAAG,EAAE,CAAC;QAGb,4EAA4E;QAC5E,IAAG,IAAI,CAAC,MAAM,IAAI,EAAE,EAAC;YAAE,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC;SAAC;QAAA,CAAC;QAC5E,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;YACnE,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC7B,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5B,IAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,IAAI,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,IAAI,EAAE,EAAC;oBACzH,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;iBAC/C;qBACG;oBACF,KAAI,CAAC,SAAS,GAAG,8BAA8B,CAAC;iBACjD;gBACD,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,cAAI;YACpD,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC7B,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC/B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;aAC3B;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,cAAI;YACjD,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC7B,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;gBAClC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;aAC7B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAQ,GAAR,UAAS,EAAE;QACT,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,GAAC,IAAI,CAAC,GAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,EAAC,EAAC,WAAW,EAAC,EAAC,EAAE,EAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAC,MAAM,EAAC,EAAC,CAAC,CAAC;IAC3G,CAAC;IAED,gCAAK,GAAL;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,mCAAQ,GAAR;IACA,CAAC;IAjDU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCASgC,qEAAW,EAAkB,sDAAM,EAAiB,8DAAc;OARvF,gBAAgB,CAkD5B;IAAD,uBAAC;CAAA;AAlD4B;;;;;;;;;;;;ACT7B,unBAAunB,4pBAA4pB,4BAA4B,kPAAkP,UAAU,+UAA+U,aAAa,yyEAAyyE,o6HAAo6H,8dAA8d,4BAA4B,YAAY,MAAM,YAAY,s9DAAs9D,KAAK,KAAK,KAAK,y+C;;;;;;;;;;;ACAjlV,+DAA+D,2J;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAU;AACkB;AACF;AACR;AAOjF;IA0BE,2BAAmB,yBAAoD,EAAS,GAAgB,EAAS,cAA8B;QAApH,8BAAyB,GAAzB,yBAAyB,CAA2B;QAAS,QAAG,GAAH,GAAG,CAAa;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAnBvI,YAAO,GAAG,IAAI,CAAC;QACf,aAAQ,GAAoB,0DAAe,CAAC,SAAS,CAAC;QACtD,gBAAW,GAAG,IAAI,CAAC;QACnB,eAAU,GAAG,IAAI,CAAC;QAClB,WAAM,GAAG,IAAI,CAAC;QACd,aAAQ,GAAG,CAAC,CAAC,CAAC;QACd,YAAO,GAAG,CAAC,CAAC;QACZ,aAAQ,GAAG,CAAC,CAAC;QACb,eAAU,GAAG,IAAI,CAAC;QAClB,mBAAc,GAAG,EAAE,CAAC;QACpB,kBAAa,GAAG,EAAE,CAAC;QAEnB,iBAAY,GAAe;YAC1B,EAAE,IAAI,EAAE,SAAS,EAAC,QAAQ,EAAC,CAAC,aAAa,EAAC,iBAAiB,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE;YAC1E,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,CAAC,aAAa,EAAC,iBAAiB,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE;YACxE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAC,CAAC,aAAa,EAAC,iBAAiB,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE;YACzE,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAC,CAAC,aAAa,EAAC,iBAAiB,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE;SAC7E,CAAC;QAsFA,gBAAW,GAAE,EAAE,CAAC;IApF0H,CAAC;IAE5I,oCAAQ,GAAR;QAAA,iBAkBC;QAjBC,IAAI,CAAC,WAAW,GAAG,IAAI,wDAAS,CAAC;YAC7B,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpD,WAAW,EAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAC5B,CAAC;YACF,aAAa,EAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAC9B,CAAC;SACL,CAAC,CAAC;QAEH,IAAI,CAAC,yBAAyB,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,cAAI;YACxD,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC7B,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;gBACjC,gDAAgD;gBAChD,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC;aAC1C;QACH,CAAC,EACD,eAAK;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IACD,sBAAI,gCAAC;aAAL,cAAU,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAE5C,qCAAS,GAAT;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IACA,kCAAM,GAAN;QACE,2BAA2B;QAC3B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QAAA,IAAI,CAAC,WAAW,GAAG,IAAI,wDAAS,CAAC;YACtD,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpD,WAAW,EAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAC5B,CAAC;YACF,aAAa,EAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAC9B,CAAC;SACL,CAAC,CAAC;IAEL,CAAC;IAED,yCAAa,GAAb,UAAc,EAAE;QAAhB,iBAOC;QANC,IAAI,CAAC,yBAAyB,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;YACxD,IAAG,IAAI,CAAC,QAAQ,CAAC,EAAC;gBAChB,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,sBAAsB,EAAE,EAAE,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC;gBAC1E,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;aACvD;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,uBAAuB;IACvB,0CAAc,GAAd;QACE,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,IAAI,EAAK,EAAE;YACX,IAAI,EAAK,EAAE;YACX,IAAI,EAAK,EAAE;YACX,IAAI,EAAK,EAAE;SACZ,CAAC,CAAC;IACL,CAAC;IAEF,oBAAoB;IAEpB,2BAA2B;IAC3B,oCAAoC;IACpC,KAAK;IAEJ,4CAAgB,GAAhB;QACC,IAAM,OAAO,GAAc,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC;QAC/D,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;IACrC,CAAC;IAED,+CAAmB,GAAnB,UAAoB,CAAU;QAC5B,IAAM,OAAO,GAAc,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC;QAC/D,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACpB,gCAAgC;QAClC,kCAAkC;IAClC,CAAC;IACD,2BAA2B;IAC3B,oBAAoB;IACpB,yCAAa,GAAb;QACE,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACnB,IAAI,EAAO,EAAE;YACb,WAAW,EAAK,EAAE;YAClB,YAAY,EAAK,EAAE;SACrB,CAAC,CAAC;IACN,CAAC;IAKA,sCAAU,GAAV,UAAW,GAAG,EAAC,KAAK;QAClB,aAAa;QAGb,IAAI,OAAO,GAAC,CAAC,SAAS,EAAC,MAAM,EAAC,OAAO,EAAC,UAAU,CAAC,CAAC;QAClD,IAAI,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAEpC,6BAA6B;QAC7B,kCAAkC;QAElC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC;IACrC,CAAC;IAED,2CAAe,GAAf;QACE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1B,IAAM,OAAO,GAAc,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC;QACjE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;IACpC,CAAC;IAED,8CAAkB,GAAlB,UAAmB,CAAU;QAC3B,IAAM,OAAO,GAAc,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC;QACjE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAChC,kCAAkC;IAClC,CAAC;IACD,wBAAwB;IAExB,gDAAoB,GAApB,UAAqB,GAAS;QAA9B,iBA2BC;QA1BC,mCAAmC;QACnC,IAAI,GAAG,GAAE,EAAC,MAAM,EAAC,EAAE,EAAC,WAAW,EAAC,EAAC,aAAa,EAAC,EAAE,EAAC,WAAW,EAAC,EAAE,EAAC,EAAC,CAAC;QACnE,sDAAsD;QACtD,GAAG,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC;QACvB,GAAG,CAAC,WAAW,CAAC,CAAC,aAAa,CAAC,GAAG,GAAG,CAAC,WAAW,CAAC;QAClD,GAAG,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC;QAE9C,iDAAiD;QAEjD,mCAAmC;QAEnC,IAAI,CAAC,yBAAyB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,cAAI;YACtD,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,MAAM,EAAC;gBACzB,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,oBAAoB,EAAE,EAAE,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC;gBACxE,KAAI,CAAC,yBAAyB,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,cAAI;oBACxD,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;wBAC7B,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;wBACjC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC;wBACzC,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;wBACzB,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;qBAC1B;gBACH,CAAC,EACD,eAAK;gBACL,CAAC,CAAC,CAAC;aACL;QACH,CAAC,CAAC;IACJ,CAAC;IAED,uCAAW,GAAX,UAAY,EAAE;QACZ,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;QACxD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACnE,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QACxD,KAAI,IAAI,CAAC,GAAE,CAAC,EAAE,CAAC,GAAE,SAAS,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YACpD,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACvD;QACD,KAAI,IAAI,CAAC,GAAE,CAAC,EAAE,CAAC,GAAE,SAAS,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YAClD,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACtD;QACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,+CAAmB,GAAnB,UAAoB,KAAK;QACvB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACzB,IAAM,OAAO,GAAc,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC;QACjE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,6CAAiB,GAAjB,UAAkB,KAAK;QACtB,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACnB,IAAI,EAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC1B,WAAW,EAAK,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;YACtC,YAAY,EAAK,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;SAC1C,CAAC,CAAC;IACJ,CAAC;IAED,gDAAoB,GAApB,UAAqB,KAAK;QAC1B,IAAM,OAAO,GAAc,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC;QAC/D,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;IAC7C,CAAC;IAED,8CAAkB,GAAlB,UAAmB,KAAK;QACvB,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,IAAI,EAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACxB,IAAI,EAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACxB,IAAI,EAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACxB,IAAI,EAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SACzB,CAAC,CAAC;IACJ,CAAC;IAED,qCAAS,GAAT;QACE,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC;YAC5B,MAAM,EAAE;gBACJ,QAAQ,EAAE,IAAI,CAAC,MAAM;gBACrB,aAAa,EAAE,IAAI,CAAC,QAAQ;gBAC5B,WAAW,EAAE,IAAI,CAAC,OAAO;aAC5B;SACJ,CAAC,CAAC;QACH,OAAO;YACH,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,eAAe,EAAE,IAAI,CAAC,WAAW;YACjC,YAAY,EAAE,IAAI,CAAC,UAAU;YAC7B,YAAY,EAAE,IAAI,CAAC,UAAU;SAChC,CAAC;IACJ,CAAC;IApOQ,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCA2B8C,iGAAyB,EAAc,0DAAW,EAAyB,yDAAc;OA1B5H,iBAAiB,CAqO7B;IAAD,wBAAC;CAAA;AArO6B;;;;;;;;;;;;ACV9B,6qBAA6qB,SAAS,KAAK,WAAW,s3BAAs3B,mCAAmC,6CAA6C,gBAAgB,+CAA+C,eAAe,+CAA+C,YAAY,+CAA+C,cAAc,+CAA+C,eAAe,+CAA+C,WAAW,mfAAmf,gBAAgB,4PAA4P,uL;;;;;;;;;;;ACAzsF,+DAA+D,mK;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAU;AAChB;AAEI;AACE;AAO/D;IAQG,8BAAmB,WAAwB,EAAU,YAA0B,EAAU,MAAc,EAAU,KAAqB;QAAnH,gBAAW,GAAX,WAAW,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;QAPvI,UAAK,GAAG,EAAE,CAAC;QACX,gBAAW,GAAG,KAAK,CAAC;QAEpB,MAAC,GAAW,CAAC,CAAC;QACd,aAAQ,GAAW,CAAC,CAAC;QAIjB,IAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,MAAM,EAAC;YAC7C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SAC3B;IACH,CAAC;IAEJ,uCAAQ,GAAR;QAAA,iBAwBC;QAvBE,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;YACnD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAC3B,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC,EACD,eAAK;QACL,CAAC,CAAC,CAAC;QACH,IAAG,IAAI,CAAC,WAAW,EAAC;YAChB,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;YAC7D,IAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;gBAC7F,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC3B,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;YAC/C,CAAC,CAAC,CAAC;SACN;aACG;YACA,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;gBACjE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC3B,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;YAC/C,CAAC,EACD,eAAK;YACL,CAAC,CAAC,CAAC;SACN;IACN,CAAC;IAEA,yCAAU,GAAV,UAAW,KAAK;QAAhB,iBAuBC;QAtBG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAG,KAAK,IAAI,EAAE,EAAC;YACX,IAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,KAAK,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;gBAC5E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC3B,IAAG,IAAI,CAAC,OAAO,CAAC,EAAC;oBACf,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;iBAC5C;qBACG;oBACF,KAAI,CAAC,cAAc,GAAG,CAAC,CAAC;iBACzB;YACL,CAAC,CAAC,CAAC;SACN;aACG;YACA,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;gBACjE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC3B,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;YAC/C,CAAC,EACD,eAAK;YACL,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IA/DU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCASiC,qEAAW,EAAwB,uEAAY,EAAkB,sDAAM,EAAiB,8DAAc;OAR5H,oBAAoB,CAiEhC;IAAD,2BAAC;CAAA;AAjEgC;;;;;;;;;;;;ACXjC,6sEAA6sE,WAAW,KAAK,cAAc,GAAG,iBAAiB,uzBAAuzB,s+BAAs+B,UAAU,yhCAAyhC,UAAU,8pCAA8pC,wcAAwc,wsCAAwsC,sDAAsD,6hBAA6hB,sDAAsD,yrBAAyrB,uDAAuD,glBAAglB,sDAAsD,umBAAumB,mDAAmD,0hBAA0hB,iDAAiD,kwBAAkwB,0DAA0D,uZAAuZ,0DAA0D,4hBAA4hB,mDAAmD,8nBAA8nB,qDAAqD,6NAA6N,SAAS,KAAK,WAAW,6eAA6e,qDAAqD,guBAAguB,wDAAwD,oOAAoO,WAAW,KAAK,cAAc,GAAG,iBAAiB,uvBAAuvB,2DAA2D,uZAAuZ,2DAA2D,szBAAszB,2DAA2D,oyBAAoyB,kDAAkD,8IAA8I,SAAS,KAAK,WAAW,sfAAsf,0DAA0D,sKAAsK,iBAAiB,KAAK,mBAAmB,6kBAA6kB,6IAA6I,aAAa,2EAA2E,iBAAiB,8FAA8F,cAAc,4SAA4S,qBAAqB,qKAAqK,aAAa,2EAA2E,iBAAiB,mXAAmX,qBAAqB,uKAAuK,aAAa,2EAA2E,iBAAiB,uEAAuE,cAAc,4pBAA4pB,cAAc,iKAAiK,qBAAqB,sKAAsK,aAAa,2EAA2E,iBAAiB,uEAAuE,cAAc,0UAA0U,cAAc,gFAAgF,IAAI,sUAAsU,IAAI,gSAAgS,cAAc,gKAAgK,qBAAqB,uKAAuK,aAAa,wDAAwD,iBAAiB,iUAAiU,qBAAqB,koNAAkoN,SAAS,KAAK,WAAW,w1CAAw1C,SAAS,KAAK,WAAW,wwBAAwwB,iBAAiB,KAAK,mBAAmB,y5DAAy5D,SAAS,KAAK,WAAW,syB;;;;;;;;;;;ACA3umC,oCAAoC,gBAAgB,yBAAyB,oBAAoB,uBAAuB,qBAAqB,iFAAiF,EAAE,QAAQ,qBAAqB,EAAE,kBAAkB,iBAAiB,6BAA6B,EAAE,oEAAoE,gBAAgB,EAAE,cAAc,8BAA8B,EAAE,iBAAiB,iCAAiC,gBAAgB,EAAE,4BAA4B,yBAAyB,qBAAqB,mBAAmB,oBAAoB,EAAE,+BAA+B,sBAAsB,EAAE,qCAAqC,sBAAsB,EAAE,iDAAiD,+0D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxtB;AAChB;AACmB;AACK;AACX;AAGT;AACE;AACc;AACN;AACE;AAC1C;AAC8B;AAO7D;IAmHE,4BAAmB,gBAAkC,EAAS,iBAAoC,EAAU,cAA8B,EAAS,mBAAwC,EAAS,YAA0B,EAAS,WAAwB,EAAU,MAAc,EAAU,KAAqB;QAAtT,iBAsBC;QAtBkB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAS,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAS,wBAAmB,GAAnB,mBAAmB,CAAqB;QAAS,iBAAY,GAAZ,YAAY,CAAc;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;QA/G9S,cAAS,GAAY,KAAK,CAAC;QACnC,eAAU,GAAG,EAAE,CAAC;QAChB,MAAC,GAAW,CAAC,CAAC;QACd,aAAQ,GAAW,EAAE,CAAC;QACtB,UAAK,GAAG,UAAU,CAAC;QACnB,UAAK,GAAG,gBAAgB,CAAC;QACzB,SAAI,GAAG,6BAA6B,CAAC;QACrC,YAAO,GAAG,IAAI,CAAC;QACf,aAAQ,GAAoB,0DAAe,CAAC,SAAS,CAAC;QACtD,gBAAW,GAAG,IAAI,CAAC;QACnB,eAAU,GAAG,IAAI,CAAC;QAClB,WAAM,GAAG,IAAI,CAAC;QACd,aAAQ,GAAG,CAAC,CAAC,CAAC;QACd,YAAO,GAAG,CAAC,CAAC;QACZ,aAAQ,GAAG,CAAC,CAAC;QACb,eAAU,GAAG,IAAI,CAAC;QAClB,mBAAc,GAAG,EAAE,CAAC;QACpB,kBAAa,GAAG,EAAE,CAAC;QAOnB,kBAAa,GAAG,KAAK,CAAC;QACtB,eAAU,GAAG,KAAK,CAAC;QAEZ,cAAS,GAAY,IAAI,CAAC;QAC1B,iBAAY,GAAY,KAAK,CAAC;QAC9B,YAAO,GAAY,KAAK,CAAC;QACzB,eAAU,GAAY,KAAK,CAAC;QAC5B,cAAS,GAAY,KAAK,CAAC;QAElC,YAAO,GAAG;YACR,KAAK,EAAE,CAAC,SAAS,CAAC;YAClB,qBAAqB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;SACzC;QACD,WAAM,GAAG;YACP,MAAM,EAAE,EAAE;YACV,YAAY,EAAE,EAAE;YAChB,QAAQ,EAAE,EAAE;SACb;QAID,gBAAW,GAAG,KAAK,CAAC;QACpB,cAAS,GAAG,EAAE,CAAC;QACf,gBAAW,GAAG,KAAK,CAAC;QAKpB,gBAAW,GAAG,EAAE,CAAC;QACjB,cAAS,GAAG,KAAK,CAAC;QAElB,UAAK,GAAG;YACN,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,EAAE;YACd,WAAW,EAAE,EAAE;YACf,UAAU,EAAE,EAAE;YACd,OAAO,EAAE,EAAE;YACX,KAAK,EAAE,EAAE;YACT,cAAc,EAAE,EAAE;YAClB,SAAS,EAAE,EAAE;YACb,OAAO,EAAE,EAAE;YACX,cAAc,EAAE,EAAE;YAClB,SAAS,EAAC,EAAE;YACZ,MAAM,EAAE,EAAE;YACV,MAAM,EAAE,EAAE;YACV,cAAc,EAAE,EAAE;YAClB,QAAQ,EAAE,EAAE;YACZ,IAAI,EAAC,EAAE;YACP,UAAU,EAAC,EAAE;YACb,MAAM,EAAC,EAAE;YACT,OAAO,EAAC,EAAE;YACV,SAAS,EAAC,EAAE;YACZ,YAAY,EAAE,EAAE;YAChB,QAAQ,EAAE,GAAG;YACb,UAAU,EAAE,EAAE;YACd,eAAe,EAAC,EAAE;YAClB,OAAO,EAAC,EAAE;YACV,eAAe,EAAE,EAAE;SACpB;QACD,qBAAgB,GAAG,EAAE,CAAC;QAEtB,YAAO,GAAG;YACR,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE;YACjC,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAE;YAChC,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAC;YAC3B,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAC;YAC7B,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAC;YAC3B,EAAE,IAAI,EAAE,uBAAuB,EAAE,KAAK,EAAE,EAAE,EAAC;SAC1C,CAAC;QAEJ,eAAU,GAAG;YACX,EAAE,IAAI,EAAE,YAAY,EAAE;YACtB,EAAE,IAAI,EAAE,WAAW,EAAE;YACrB,EAAE,IAAI,EAAE,OAAO,EAAC;YAChB,EAAE,IAAI,EAAE,SAAS,EAAC;YAClB,EAAE,IAAI,EAAE,OAAO,EAAC;YAChB,EAAE,IAAI,EAAE,MAAM,EAAC;YACf,EAAE,IAAI,EAAE,OAAO,EAAC;YAChB,EAAE,IAAI,EAAE,uBAAuB,EAAC;SACjC,CAAC;QAED,gBAAW,GAAG,KAAK,CAAC;QAEpB,iBAAY,GAAG,EAAE,CAAC;QAClB,uBAAkB,GAAG,EAAE,CAAC;QACxB,aAAQ,GAAG,IAAI,CAAC;QAGf,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QAC5D,IAAG,KAAK,EAAC;YACP,IAAG,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,EAAC;gBACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;aAC1B;YACD,IAAG,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,EAAC;gBACzB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aACrB;YACD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;SAChC;QACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,cAAI;YAC9C,IAAG,IAAI,CAAC,YAAY,CAAC,EAAC;gBACpB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;aACnC;QACH,CAAC,EACD,eAAK;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;IAChD,CAAC;IAED,qCAAQ,GAAR;QAAA,iBA0DC;QAzDG,IAAI,CAAC,UAAU,GAAG,IAAI,wDAAS,CAAC;YAC5B,aAAa,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YAC7E,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACvD,CAAC,CAAC;QACH,IAAI,KAAK,CAAC;QACV,IAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,EAAC;YACvC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;SACxB;aACG;YACF,KAAK,GAAG,EAAE,CAAC;SACZ;QACD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,EAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;YAC7D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAC1B,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC7B,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC/B,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBACvC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBACjC,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;gBAC1C,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;QACH,CAAC,EACD,eAAK;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,cAAI;YACvD,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC7B,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;oBACzC,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACnD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC;wBAClB,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC;wBAC3B,UAAU,EAAC,MAAM,CAAC,UAAU,CAAC;wBAC7B,QAAQ,EAAC,MAAM,CAAC,QAAQ,CAAC;wBACzB,WAAW,EAAC,MAAM,CAAC,WAAW,CAAC;wBAC/B,YAAY,EAAC,MAAM,CAAC,YAAY,CAAC;wBACjC,eAAe,EAAC,MAAM,CAAC,eAAe,CAAC;wBACvC,WAAW,EAAC,MAAM,CAAC,WAAW,CAAC;wBAC5B,IAAI,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;wBAC5B,WAAW,EAAC,MAAM,CAAC,WAAW,CAAC;qBAChC,CAAC,CAAC;iBACN;gBACD,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;aACzB;iBACG;gBACF,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;YACvD,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,cAAI;YACpC,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;YACtE,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QACH,IAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,GAAG,EAAC;YAC1C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;IACH,CAAC;IAED,uCAAU,GAAV,UAAW,KAAK;QACd,IAAG,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,EAAC;YAC1B,IAAI,KAAG,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;YAC3C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YACpC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,WAAC;gBAC1C,OAAO,CAAC,CAAC,MAAM,KAAK,KAAG,CAAC;YAC1B,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SACrC;aACG;YACF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC;YAC1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC;SAC7C;QACD,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IACxB,CAAC;IAED,yCAAY,GAAZ,UAAa,KAAK;QAChB,IAAG,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,EAAC;YAC1B,IAAI,KAAG,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;YAC3C,IAAI,MAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAI,SAAO,GAAG,MAAI,CAAC,MAAM,CAAC;YAC1B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,UAAS,IAAI;gBACtD,KAAK,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,SAAO,EAAE,CAAC,EAAE,EAAC;oBAC3B,IAAI,IAAI,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAG,EAAC;wBACrE,OAAO,IAAI,CAAC;qBACb;iBACF;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC;SACrC;aACG;YACF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC;YAC1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC;SAC7C;QACD,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IACxB,CAAC;IAED,6CAAgB,GAAhB,UAAiB,KAAK;QACpB,IAAG,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,EAAC;YAC1B,IAAI,KAAG,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;YAC3C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,cAAI,IAAI,WAAI,CAAC,GAAG,KAAK,KAAG,EAAhB,CAAgB,CAAC,CAAC;YAC3E,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC;SACrC;aACG;YACF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC;YAC1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC;SAC7C;QACD,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IACxB,CAAC;IAED,wCAAW,GAAX;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAC1C,IAAG,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,EAAE,EAAC;YAC9B,IAAI,KAAG,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;YAC/C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,cAAI,IAAI,WAAI,CAAC,GAAG,KAAK,KAAG,EAAhB,CAAgB,CAAC,CAAC;SACpE;QACD,IAAG,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE,EAAC;YACxB,IAAI,KAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YACzC,IAAI,MAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAI,SAAO,GAAG,MAAI,CAAC,MAAM,CAAC;YAC1B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAS,IAAI;gBACpD,KAAK,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,SAAO,EAAE,CAAC,EAAE,EAAC;oBAC3B,IAAI,IAAI,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAG,EAAC;wBACrE,OAAO,IAAI,CAAC;qBACb;iBACF;YACH,CAAC,CAAC,CAAC;SACJ;QACD,IAAG,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,EAAE,EAAC;YAC1B,IAAI,KAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;YAC3C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YACpC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,WAAC;gBACxC,OAAO,CAAC,CAAC,MAAM,KAAK,KAAG,CAAC;YAC1B,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SACrC;QAED,IAAG,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,EAAE,EAAC;YACpF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC;SAC3C;QACD,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IACxB,CAAC;IAED,6CAAgB,GAAhB,UAAiB,EAAE,EAAE,KAAK,EAAE,SAAS;QACnC,IAAG,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAC;YAC7B,IAAI,UAAU,GAAG,KAAK,CAAC;YACvB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAC9C,IAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAC;oBAC9B,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;oBAClC,UAAU,GAAG,IAAI,CAAC;iBACnB;aACF;YACD,IAAG,CAAC,UAAU,EAAC;gBACb,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAC,CAAC,CAAC;aAC3E;SACF;aACG;YACF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAC,CAAC,CAAC;SAC3E;QACD,OAAO,CAAC,GAAG,CAAC,OAAO,GAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACzC,CAAC;IAEM,gDAAmB,GAA1B,UAA2B,OAAO;QAChC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,iBAAiB,CAAC;QAC5C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAC,eAAe,CAAC,CAAC,CAAC;QAC9D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAC,OAAO,CAAC,CAAC,CAAC;QACtD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAC,UAAU,CAAC,CAAC,CAAC;QACzD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAC,6BAA6B,CAAC,CAAC,CAAC;QAC5E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAC,aAAa,CAAC,CAAC,CAAC;QAC5D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAC,SAAS,CAAC,CAAC,CAAC;QACxD,IAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAC,eAAe,CAAC,IAAI,EAAE,EAAC;YACxD,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAC,eAAe,CAAC,GAAE,IAAI,CAAC;SAC9E;QACD,IAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAC,OAAO,CAAC,IAAI,EAAE,EAAC;YAChD,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAC,OAAO,CAAC,CAAC;SACjE;QACD,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAC,UAAU,CAAC,CAAC;QAC9D,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAC,6BAA6B,CAAC,CAAC;QAClF,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAC,aAAa,CAAC,CAAC;QACrE,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAC,SAAS,CAAC,CAAC;QAChE,OAAO,CAAC,GAAG,CAAC,eAAe,GAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAC1D,CAAC;IAEM,+CAAkB,GAAzB,UAA0B,OAAO,EAAE,IAAI;QACrC,IAAG,CAAC,IAAI;YACJ,OAAO,IAAI,CAAC;QAEhB,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,kBAAkB,IAAI,OAAO,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC;YACjF,OAAO,IAAI,CAAC;QAEhB,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAE1B,KAAiB,UAA0B,EAA1B,YAAO,CAAC,kBAAkB,EAA1B,cAA0B,EAA1B,IAA0B,EAAE;YAAxC,IAAI,IAAI;YACT,IAAG,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC;gBACpC,SAAS;YAEb,IAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,WAAC,IAAI,QAAC,CAAC,WAAW,EAAE,IAAI,IAAI,EAAvB,CAAuB,CAAC,GAAG,CAAC,CAAC;gBACtD,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC;SAChC;QAED,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,qCAAQ,GAAR,UAAS,EAAE;QACT,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,GAAC,IAAI,CAAC,GAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,EAAC,EAAC,WAAW,EAAC,EAAC,EAAE,EAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAC,OAAO,EAAC,EAAC,CAAC,CAAC;IAC5G,CAAC;IAED,kDAAqB,GAArB,UAAsB,EAAE;QAAxB,iBAqBC;QApBC,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;YAClD,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC9B,KAAI,CAAC,cAAc,CAAC,KAAK,CAAC,gCAAgC,EAAE,EAAE,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC;gBACjF,IAAI,KAAK,UAAC;gBACV,IAAG,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,EAAC;oBACvC,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC;iBACxB;qBACG;oBACF,KAAK,GAAG,EAAE,CAAC;iBACZ;gBACD,KAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;oBAC3E,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;oBACrB,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;oBACzB,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;wBAC7B,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;wBAC/B,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;qBAC3C;gBACH,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAM,GAAN,UAAO,GAAG;QACR,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,SAAS,CAAC,CAAC;QAC9C,IAAG,SAAS,EAAE;YACZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAC;gBAClC,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;gBAChC,OAAO,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC;YAC7B,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,OAAO,GAAO,IAAI,CAAC,OAAO,SAAE,GAAG,EAAC,CAAC;YACtC,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;SAC1C;IACH,CAAC;IAED,sCAAS,GAAT,UAAU,GAAG;QACX,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAC;YACxB,OAAO,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAS,GAAT;QACI,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC;YAC5B,MAAM,EAAE;gBACJ,QAAQ,EAAE,IAAI,CAAC,MAAM;gBACrB,aAAa,EAAE,IAAI,CAAC,QAAQ;gBAC5B,WAAW,EAAE,IAAI,CAAC,OAAO;aAC5B;SACJ,CAAC,CAAC;QACH,OAAO;YACH,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,eAAe,EAAE,IAAI,CAAC,WAAW;YACjC,YAAY,EAAE,IAAI,CAAC,UAAU;YAC7B,YAAY,EAAE,IAAI,CAAC,UAAU;SAChC,CAAC;IACN,CAAC;IAED,oCAAO,GAAP;QACE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,uCAAU,GAAV;QACE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IAED,uCAAU,GAAV,UAAW,EAAE,EAAC,KAAK;QAAnB,iBAwBC;QAvBC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,EAAC,KAAK,EAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,cAAI;YAC3E,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,QAAQ,EAAC;gBAC5B,KAAI,CAAC,cAAc,CAAC,KAAK,CAAC,qBAAqB,EAAE,EAAE,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC;gBACvE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;iBACI,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAClC,KAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;gBACxB,IAAM,sBAAuD,EAArD,oBAAO,EAAE,8BAAY,EAAE,gDAA8B,CAAC;gBAC9D,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,0BAA0B,EAAE,SAAS,eACzD,MAAM,IACT,OAAO,EAAE;wBACL,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,UAAC,KAAK;gCAC3B,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;4BACtC,CAAC,EAAE;qBACN,IACJ,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,uCAAU,GAAV,UAAW,KAAK;QAAhB,iBAmBC;QAlBC,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;QACjD,IAAI,KAAK,CAAC;QACV,IAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,EAAC;YACvC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;SACxB;aACG;YACF,KAAK,GAAG,EAAE,CAAC;SACZ;QACD,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;YACpF,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;YACzB,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC7B,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC/B,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;aAC3C;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAc,GAAd;QAAA,iBA6BC;QA5BC,IAAI,KAAK,CAAC;QACV,IAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,iBAAiB,CAAC,EAAC;YACvF,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;SACxB;aACG;YACF,KAAK,GAAG,EAAE,CAAC;SACZ;QACD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,EAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;YAC7D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAC1B,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC7B,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC/B,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBACvC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBACjC,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;gBAC1C,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;QACH,CAAC,EACD,eAAK;QACL,CAAC,CAAC,CAAC;QAEH,uFAAuF;QACvF,0BAA0B;QAC1B,8BAA8B;QAC9B,qCAAqC;QACrC,sCAAsC;QACtC,iDAAiD;QACjD,MAAM;QACN,MAAM;IACR,CAAC;IAED,uCAAU,GAAV;QACE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,yBAAyB;QACzB,oCAAoC;IACtC,CAAC;IAED,iDAAoB,GAApB;QAAA,iBAwDA;QAvDE,IAAG,IAAI,CAAC,QAAQ,EAAE,EAAC;YACjB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,IAAI,YAAY,GAAG,EAAE,CAAC;YACxB,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;gBAC1B,OAAO;aACR;YACH,IAAG,CAAC,IAAI,CAAC,aAAa,EAAC;gBACtB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,gBAAgB;aACpC;YACC,IAAG,CAAC,IAAI,CAAC,YAAY,EAAC;gBACpB,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;gBACtB,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aACtD;YACD,IAAI,aAAa,GAAG,EAAE,CAAC;YACvB,IAAG,IAAI,CAAC,WAAW,EAAC;gBAClB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACtD;iBACG;gBACF,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;aACxB;YACD,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC;YACtC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,cAAI;gBAChD,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;oBACtB,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,yBAAyB,EAAE,EAAE,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC;oBACjF,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,KAAI,CAAC,cAAc,EAAE,CAAC;oBACtB,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;oBACzB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBAC3B,yCAAyC;iBACzC;qBACI,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,QAAQ,EAAC;oBAC9B,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;iBAC3B;qBACI,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,YAAY,EAAC;oBACtC,IAAG,IAAI,CAAC,OAAO,CAAC,IAAI,yBAAyB,EAAC;wBAC7C,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;wBAC1B,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;wBACnB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;qBAC5B;yBACG;wBACH,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;wBACvB,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;wBACtB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;qBAC5B;iBACD;YACF,CAAC,CAAC,CAAC;SACA;aACG;YACF,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC;SACrB;IACJ,CAAC;IAEA,qCAAQ,GAAR;QACI,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,IAAI,SAAS,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACzC,IAAI,GAAG,GAAG,KAAK,CAAC,WAAW,EAAE,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC;QACxD,IAAI,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;QAChD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC,EAAE;YAC/D,GAAG,EAAE,CAAC;SACP;QACD,IAAG,GAAG,GAAG,EAAE,EAAC;YACV,OAAO,KAAK,CAAC;SACd;aACG;YACF,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAEH,wCAAW,GAAX,UAAY,GAAG;QACb,IAAI,QAAQ,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC;QACrD,IAAI,QAAQ,IAAI,EAAE,IAAI,QAAQ,GAAG,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,IAAI,QAAQ,GAAG,EAAE,CAAC,EAAC;YACpE,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,0CAAa,GAAb;QACE,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,mDAAI,CAAC;YACH,KAAK,EAAE,gBAAgB;YACvB,KAAK,EAAE,MAAM;YACb,eAAe,EAAE,IAAI;YACrB,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,MAAM;SAC1B,CAAC,CAAC,IAAI,CAAC,UAAS,IAAI;YACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YAClC,IAAG,IAAI,CAAC,KAAK,EAAC;gBACZ,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACpC;QACH,CAAC,CAAC;IACJ,CAAC;IAED,8CAAiB,GAAjB,UAAkB,KAAK;QAAvB,iBAUC;QATC,IAAI,CAAC,WAAW,CAAC,2BAA2B,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,cAAI;YACzD,OAAO,CAAC,GAAG,CAAC,mCAAmC,EAAE,IAAI,CAAC,CAAC;YACzD,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;gBAC7B,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,+BAA+B,EAAE,EAAE,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC;aACpF;iBACI,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,kBAAkB,EAAC;gBAC3C,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,6BAA6B,EAAE,EAAE,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC;aAClF;QACH,CAAC,CAAC;IACJ,CAAC;IAED,uCAAU,GAAV,UAAW,EAAE,EAAE,KAAK;QAApB,iBAmBC;QAlBC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;YACvC,IAAI,KAAK,CAAC;YACV,IAAG,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,EAAC;gBACvC,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC;aACxB;iBACG;gBACF,KAAK,GAAG,EAAE,CAAC;aACZ;YACD,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,EAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;gBAChE,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;oBAC7B,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC/B,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;iBAC3C;YACH,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,cAAc,CAAC,KAAK,CAAC,sBAAsB,EAAE,EAAE,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QAC1E,CAAC,EACD,eAAK;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAU,GAAV,UAAW,EAAE,EAAE,KAAK;QAClB,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,mDAAI,CAAC;YACD,KAAK,EAAE,8BAA8B;YACrC,IAAI,EAAE,mCAAmC;YACzC,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,SAAS;YAC5B,iBAAiB,EAAE,KAAK;YACxB,gBAAgB,EAAE,aAAa;YAC/B,kBAAkB,EAAE,iCAAiC;YACrD,iBAAiB,EAAE,2BAA2B;YAC9C,cAAc,EAAE,KAAK;SACxB,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG;YAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YAClC,IAAG,GAAG,CAAC,KAAK,EAAC;gBACd,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;aACzB;QAEH,CAAC,EAAE,UAAU,OAAO;YAChB,8DAA8D;YAC/D;;;;;;gBAMI;QACP,CAAC,CAAC;IACN,CAAC;IAEC,uCAAU,GAAV,UAAW,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;QAAvC,iBAiCD;QAhCC,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;QACnD,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,GAAG,CAAC,CAAC;QACvC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;YACjD,IAAG,GAAG,IAAI,GAAG,EAAC;gBACZ,KAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,EAAE,EAAC,KAAK,EAAC,CAAC,KAAK,GAAC,GAAG,GAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,cAAI;oBACzE,sDAAsD;gBACxD,CAAC,CAAC,CAAC;aACJ;YACD,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;YACzB,IAAI,KAAK,CAAC;YACV,IAAG,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,iBAAiB,CAAC,EAAC;gBACvF,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC;aACxB;iBACG;gBACF,KAAK,GAAG,EAAE,CAAC;aACZ;YACD,KAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,KAAI,CAAC,WAAW,EAAE,KAAK,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,cAAI;gBACxF,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gBACrB,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;gBACzB,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;oBAC7B,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC/B,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;iBAC3C;YACH,CAAC,CAAC,CAAC;YACH,IAAG,GAAG,IAAI,GAAG,EAAC;gBACZ,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,0BAA0B,EAAE,EAAE,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC;aAC/E;iBACI,IAAG,GAAG,IAAI,GAAG,EAAC;gBACjB,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,wBAAwB,EAAE,EAAE,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC;aAC7E;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEC,2CAAc,GAAd,UAAe,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;QACvC,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,mDAAI,CAAC;YACD,KAAK,EAAE,uBAAuB;YAC9B,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,eAAe,EAAE,IAAI;YACrB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,SAAS;YAC5B,iBAAiB,EAAE,YAAY;YAC/B,gBAAgB,EAAE,QAAQ;YAC1B,kBAAkB,EAAE,iCAAiC;YACrD,iBAAiB,EAAE,2BAA2B;YAC9C,cAAc,EAAE,KAAK;SACxB,CAAC,CAAC,IAAI,CAAC,UAAU,UAAU;YAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;YACxC,IAAG,UAAU,CAAC,KAAK,EAAC;gBACrB,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;aAC1C;QAEH,CAAC,EAAE,UAAU,OAAO;YAClB,IAAI,OAAO,KAAK,QAAQ,EAAE;aAEvB;YACD,8DAA8D;QAElE,CAAC,CAAC;IACN,CAAC;IAEC,yCAAY,GAAZ,UAAa,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;QACrC,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,mDAAI,CAAC;YACD,KAAK,EAAE,eAAe;YACtB,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,eAAe,EAAE,IAAI;YACrB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,SAAS;YAC5B,iBAAiB,EAAE,UAAU;YAC7B,gBAAgB,EAAE,QAAQ;YAC1B,kBAAkB,EAAE,iCAAiC;YACrD,iBAAiB,EAAE,2BAA2B;YAC9C,cAAc,EAAE,KAAK;SACxB,CAAC,CAAC,IAAI,CAAC,UAAU,QAAQ;YACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;YACtC,IAAG,QAAQ,CAAC,KAAK,EAAC;gBACnB,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;aAC1C;QAEH,CAAC,EAAE,UAAU,OAAO;YAClB,IAAI,OAAO,KAAK,QAAQ,EAAE;aAEvB;YACD,8DAA8D;QAElE,CAAC,CAAC;IACN,CAAC;IAEC,yCAAY,GAAZ;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC;IAC5C,CAAC;IAlwBqB;QAArB,+DAAS,CAAC,SAAS,CAAC;kCAAc,qDAAM;2DAAC;IACX;QAA9B,+DAAS,CAAC,2EAAkB,CAAC;kCAAQ,2EAAkB;qDAAC;IA4CjC;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAa,mFAAoB;yDAAC;IA/C9C,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAoHqC,+EAAgB,EAA4B,iFAAiB,EAA0B,yDAAc,EAA8B,qFAAmB,EAAuB,uEAAY,EAAsB,qEAAW,EAAkB,sDAAM,EAAiB,8DAAc;OAnH3S,kBAAkB,CAqwB9B;IAAD,yBAAC;CAAA;AArwB8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBU;AACc;AAEa;AACO;AACJ;AACH;AACG;AACR;AACL;AACQ;AACH;AAE/D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,gFAAiB;gBAC5B,IAAI,EAAE;oBACJ,KAAK,EAAE,UAAU;iBAClB;aACF;YACD;gBACE,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,uFAAoB;gBAC/B,IAAI,EAAE;oBACJ,KAAK,EAAE,aAAa;iBACrB;aACF;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,mFAAkB;gBAC7B,IAAI,EAAE;oBACJ,KAAK,EAAE,OAAO;iBACf;aACF;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,qEAAc;gBACzB,IAAI,EAAE;oBACJ,KAAK,EAAE,OAAO;iBACf;aACF;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,gFAAiB;gBAC5B,IAAI,EAAE;oBACJ,KAAK,EAAE,WAAW;iBACnB;aACF;YACD;gBACE,IAAI,EAAE,YAAY;gBAClB,SAAS,EAAE,mFAAkB;gBAC7B,IAAI,EAAE;oBACJ,KAAK,EAAE,YAAY;iBACpB;aACF;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,2EAAgB;gBAC3B,IAAI,EAAE;oBACJ,KAAK,EAAE,cAAc;iBACtB;aACF;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,8EAAiB;gBAC5B,IAAI,EAAE;oBACJ,KAAK,EAAE,UAAU;iBAClB;aACF;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,4EAAgB;gBAC3B,IAAI,EAAE;oBACJ,KAAK,EAAE,SAAS;iBACjB;aACF;SACF;KACF;CACF,CAAC;AAMF;IAAA;IAAkC,CAAC;IAAtB,kBAAkB;QAJ9B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,kBAAkB,CAAI;IAAD,yBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFU;AACM;AACmB;AACf;AAEG;AACM;AACL;AAEa;AACO;AACJ;AACb;AACU;AACG;AACR;AACV;AACN;AACc;AAEM;AACR;AACO;AACH;AA6B/D;IAAA;IAA2B,CAAC;IAAf,WAAW;QA3BvB,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,4DAAY;gBACZ,0DAAW;gBACX,kEAAmB;gBACnB,gEAAiB;gBACjB,wEAAkB;gBAClB,mEAAmB;gBACnB,oEAAS;gBACT,mEAAmB;gBACnB,iFAAiB;gBACjB,6DAAc;gBACd,2EAAkB;gBAClB,yEAAoB;aACvB;YACD,YAAY,EAAE;gBACV,gFAAiB;gBACjB,uFAAoB;gBACpB,mFAAkB;gBAClB,sEAAc;gBACd,iFAAiB;gBACjB,oFAAkB;gBAClB,4EAAgB;gBAChB,+EAAiB;gBACjB,4EAAgB;aACnB;SACJ,CAAC;OACW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ","file":"users-users-module.js","sourcesContent":["module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <div class=\\\"content-header\\\">Add User</div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <!-- <div class=\\\"card-header\\\">\\r\\n                <div class=\\\"card-title-wrap bar-success\\\">\\r\\n                    <h4 class=\\\"card-title\\\">Regular Form (Reactive Form)</h4>\\r\\n                </div>\\r\\n            </div> -->\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"card-block\\\">\\r\\n                    <form [formGroup]=\\\"regularForm\\\" (ngSubmit)=\\\"onReactiveFormSubmit()\\\" novalidate>\\r\\n                        <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"usernameerror\\\">Username Already Exits.<br/><br/></small>\\r\\n                        <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"emailerror\\\">Email Already Exits.<br/><br/></small>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Username</label>\\r\\n                            <input class=\\\"form-control\\\" id=\\\"username\\\" formControlName=\\\"username\\\" placeholder=\\\"Enter Username\\\" type=\\\"text\\\">\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('username').valid && (regularForm.get('username').dirty || regularForm.get('username').touched)\\\">Please enter a valid username!</small>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Password</label>\\r\\n                            <input class=\\\"form-control\\\" id=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Enter Password\\\" type=\\\"password\\\">\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('password').valid && (regularForm.get('password').dirty || regularForm.get('password').touched)\\\">Please enter a valid password!</small>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>First Name</label>\\r\\n                            <input class=\\\"form-control\\\" id=\\\"firstName\\\" formControlName=\\\"firstName\\\" placeholder=\\\"Enter First Name\\\" type=\\\"text\\\">\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('firstName').valid && (regularForm.get('firstName').dirty || regularForm.get('firstName').touched)\\\">Please enter a valid firstName!</small>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Last Name</label>\\r\\n                            <input class=\\\"form-control\\\" id=\\\"lastName\\\" formControlName=\\\"lastName\\\" placeholder=\\\"Enter Last Name\\\" type=\\\"text\\\">\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('lastName').valid && (regularForm.get('lastName').dirty || regularForm.get('lastName').touched)\\\">Please enter a valid lastName!</small>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Email</label>\\r\\n                            <input class=\\\"form-control\\\" id=\\\"email\\\" formControlName=\\\"email\\\" placeholder=\\\"Enter Email\\\" type=\\\"email\\\">\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('email').valid && (regularForm.get('email').dirty || regularForm.get('email').touched)\\\">Please enter a valid email!</small>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>DOB</label>\\r\\n                            <input class=\\\"form-control\\\" id=\\\"dob\\\" formControlName=\\\"dob\\\" type=\\\"date\\\">\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('dob').valid && (regularForm.get('dob').dirty || regularForm.get('dob').touched)\\\">Please enter a valid dob!</small>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class>Gender</label>\\r\\n                            <div class=\\\"custom-control custom-radio display-block\\\">\\r\\n                                <input type=\\\"radio\\\" id=\\\"genderRadios1\\\"  value=\\\"Female\\\" name=\\\"genderRadios\\\" class=\\\"custom-control-input\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"genderRadios1\\\">Female</label>\\r\\n                            </div>\\r\\n                            <div class=\\\"custom-control custom-radio display-block\\\">\\r\\n                                <input type=\\\"radio\\\" id=\\\"genderRadios2\\\" value=\\\"Male\\\" name=\\\"genderRadios\\\" class=\\\"custom-control-input\\\" ng-checked=\\\"true\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"genderRadios2\\\">Male</label>\\r\\n                            </div>\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('genderRadios').valid && (regularForm.get('genderRadios').dirty || regularForm.get('genderRadios').touched)\\\">Please choose Gender!</small>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Phone</label>\\r\\n                            <input class=\\\"form-control\\\" id=\\\"phone\\\" formControlName=\\\"phone\\\" type=\\\"text\\\">\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('phone').valid && (regularForm.get('phone').dirty || regularForm.get('phone').touched)\\\">Please enter valid phone number!</small>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Subscriber List</label>\\r\\n                            <select class=\\\"form-control\\\" id=\\\"sublist\\\" formControlName=\\\"sublist\\\">\\r\\n                                <option selected>Select List</option>\\r\\n                                <option *ngFor=\\\"let list of listDetails\\\" value=\\\"{{list.id}}\\\">{{list.name}}</option>\\r\\n                            </select>\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('sublist').valid && (regularForm.get('sublist').dirty || regularForm.get('sublist').touched)\\\">Please enter valid phone number!</small>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Address</label>\\r\\n                            <input class=\\\"form-control\\\" id=\\\"address\\\" formControlName=\\\"address\\\" ngx-google-places-autocomplete [options]='options' #placesRef=\\\"ngx-places\\\" (onAddressChange)=\\\"handleAddressChange($event)\\\"/>\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('address').valid && (regularForm.get('address').dirty || regularForm.get('address').touched)\\\">Please enter a valid address!</small>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\" *ngIf=\\\"isSuperAdmin\\\">\\r\\n                            <label for=\\\"role\\\">Role</label>\\r\\n                            <select class=\\\"form-control\\\" id=\\\"role\\\" formControlName=\\\"role\\\">\\r\\n                                <option disabled=\\\"true\\\">Select Role</option>\\r\\n                                <option *ngFor=\\\"let role of roles\\\" value=\\\"{{role.id}}\\\">{{role.name}}</option>\\r\\n                            </select>\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('role').valid && (regularForm.get('role').dirty || regularForm.get('role').touched)\\\">Please select a role!</small>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\" *ngIf=\\\"isSuperAdmin\\\">\\r\\n                            <label for=\\\"organization\\\">Organization</label>\\r\\n                            <select class=\\\"form-control\\\" id=\\\"organization\\\" formControlName=\\\"organization\\\">\\r\\n                                <option disabled=\\\"true\\\">Select Organization</option>\\r\\n                                <option *ngFor=\\\"let organization of organizations\\\" value=\\\"{{organization.id}}\\\">{{organization.name}}</option>\\r\\n                            </select>\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('organization').valid && (regularForm.get('organization').dirty || regularForm.get('organization').touched)\\\">Please select an organization!</small>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-raised  mr-1\\\" (click)=\\\"cancelEdit()\\\">Cancel</button>\\r\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-success btn-raised\\\" [disabled]=\\\"!regularForm.valid || submitted\\\">Submit <i *ngIf=\\\"submitted\\\" class=\\\"fas fa-spinner fa fa-spin\\\"></i></button>\\r\\n                        </div>\\r\\n                    </form>\\r\\n\\r\\n                    <!-- <form [formGroup]=\\\"regularForm1\\\" (ngSubmit)=\\\"onReactiveFormSubmit()\\\" novalidate *ngIf=\\\"isSuperAdmin\\\">\\r\\n                        <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"usernameerror\\\">Username Already Exits.<br/><br/></small>\\r\\n                        <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"emailerror\\\">Email Already Exits.<br/><br/></small>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Username</label>\\r\\n                            <input class=\\\"form-control\\\" id=\\\"username\\\" formControlName=\\\"username\\\" placeholder=\\\"Enter Username\\\" type=\\\"text\\\">\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm1.get('username').valid && (regularForm1.get('username').dirty || regularForm1.get('username').touched)\\\">Please enter a valid username!</small>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Password</label>\\r\\n                            <input class=\\\"form-control\\\" id=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Enter Password\\\" type=\\\"password\\\">\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm1.get('password').valid && (regularForm1.get('password').dirty || regularForm1.get('password').touched)\\\">Please enter a valid password!</small>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>First Name</label>\\r\\n                            <input class=\\\"form-control\\\" id=\\\"firstName\\\" formControlName=\\\"firstName\\\" placeholder=\\\"Enter First Name\\\" type=\\\"text\\\">\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm1.get('firstName').valid && (regularForm1.get('firstName').dirty || regularForm1.get('firstName').touched)\\\">Please enter a valid firstName!</small>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Last Name</label>\\r\\n                            <input class=\\\"form-control\\\" id=\\\"lastName\\\" formControlName=\\\"lastName\\\" placeholder=\\\"Enter Last Name\\\" type=\\\"text\\\">\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm1.get('lastName').valid && (regularForm1.get('lastName').dirty || regularForm1.get('lastName').touched)\\\">Please enter a valid lastName!</small>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Email</label>\\r\\n                            <input class=\\\"form-control\\\" id=\\\"email\\\" formControlName=\\\"email\\\" placeholder=\\\"Enter Email\\\" type=\\\"email\\\">\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm1.get('email').valid && (regularForm1.get('email').dirty || regularForm1.get('email').touched)\\\">Please enter a valid email!</small>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>DOB</label>\\r\\n                            <input class=\\\"form-control\\\" id=\\\"dob\\\" formControlName=\\\"dob\\\" type=\\\"date\\\">\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm1.get('dob').valid && (regularForm1.get('dob').dirty || regularForm1.get('dob').touched)\\\">Please enter a valid dob!</small>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class>Gender</label>\\r\\n                            <div class=\\\"custom-control custom-radio display-block\\\">\\r\\n                                <input type=\\\"radio\\\" id=\\\"genderRadios1\\\"  value=\\\"F\\\" name=\\\"genderRadios\\\" class=\\\"custom-control-input\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"genderRadios1\\\">Female</label>\\r\\n                            </div>\\r\\n                            <div class=\\\"custom-control custom-radio display-block\\\">\\r\\n                                <input type=\\\"radio\\\" id=\\\"genderRadios2\\\" value=\\\"M\\\" name=\\\"genderRadios\\\" class=\\\"custom-control-input\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"genderRadios2\\\">Male</label>\\r\\n                            </div>\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm1.get('genderRadios').valid && (regularForm1.get('genderRadios').dirty || regularForm1.get('genderRadios').touched)\\\">Please choose Gender!</small>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Phone</label>\\r\\n                            <input class=\\\"form-control\\\" id=\\\"phone\\\" formControlName=\\\"phone\\\" type=\\\"text\\\">\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm1.get('phone').valid && (regularForm1.get('phone').dirty || regularForm1.get('phone').touched)\\\">Please enter valid phone number!</small>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Subscriber List</label>\\r\\n                            <select class=\\\"form-control\\\" id=\\\"sublist\\\" formControlName=\\\"sublist\\\">\\r\\n                                <option disabled=\\\"true\\\">Select Subscriber</option>\\r\\n                                <option *ngFor=\\\"let list of listDetails\\\" value=\\\"{{list.id}}\\\">{{list.name}}</option>\\r\\n                            </select>\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm1.get('sublist').valid && (regularForm1.get('sublist').dirty || regularForm1.get('sublist').touched)\\\">Please select a Subscriber!</small>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Address</label>\\r\\n                            <input class=\\\"form-control\\\" id=\\\"address\\\" formControlName=\\\"address\\\" ngx-google-places-autocomplete [options]='options' #placesRef=\\\"ngx-places\\\" (onAddressChange)=\\\"handleAddressChange($event)\\\"/>\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm1.get('address').valid && (regularForm1.get('address').dirty || regularForm1.get('address').touched)\\\">Please enter a valid address!</small>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"role\\\">Role</label>\\r\\n                            <select class=\\\"form-control\\\" id=\\\"role\\\" formControlName=\\\"role\\\">\\r\\n                                <option disabled=\\\"true\\\">Select Role</option>\\r\\n                                <option *ngFor=\\\"let role of roles\\\" value=\\\"{{role.id}}\\\">{{role.name}}</option>\\r\\n                            </select>\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm1.get('role').valid && (regularForm1.get('role').dirty || regularForm1.get('role').touched)\\\">Please select a role!</small>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"organization\\\">Organization</label>\\r\\n                            <select class=\\\"form-control\\\" id=\\\"organization\\\" formControlName=\\\"organization\\\">\\r\\n                                <option disabled=\\\"true\\\">Select Organization</option>\\r\\n                                <option *ngFor=\\\"let organization of organizations\\\" value=\\\"{{organization.id}}\\\">{{organization.name}}</option>\\r\\n                            </select>\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm1.get('organization').valid && (regularForm1.get('organization').dirty || regularForm1.get('organization').touched)\\\">Please select an organization!</small>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-raised  mr-1\\\" (click)=\\\"cancelEdit()\\\">Cancel</button>\\r\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-success btn-raised\\\" [disabled]=\\\"!regularForm1.valid\\\">Submit</button>\\r\\n                        </div>\\r\\n                    </form> -->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL2FkZC11c2Vycy9hZGQtdXNlcnMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators, NgForm } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { GooglePlaceDirective } from \"ngx-google-places-autocomplete\";\r\n\r\nimport { UserService } from '../../shared/data/user.service';\r\nimport { ListsService } from '../../shared/data/lists.service';\r\nimport { OrganizationService } from '../../shared/data/organization.service';\r\n\r\n@Component({\r\n  selector: 'app-add-users',\r\n  templateUrl: './add-users.component.html',\r\n  styleUrls: ['./add-users.component.scss']\r\n})\r\nexport class AddUsersComponent implements OnInit {\r\n  @ViewChild('f') floatingLabelForm: NgForm;\r\n  @ViewChild('vform') validationForm: FormGroup;\r\n  @ViewChild(\"placesRef\") placesRef : GooglePlaceDirective;\r\n  regularForm: FormGroup;\r\n  regularForm1: FormGroup;\r\n  newaddress;\r\n  listadmin;\r\n  usernameerror = false;\r\n  emailerror = false;\r\n  showlistadmin;\r\n  options = {\r\n    types: ['geocode'],\r\n    componentRestrictions: { country: 'AU' }\r\n  }\r\n  listDetails;\r\n  submitted = false;\r\n  public roles;\r\n  public organizations;\r\n  public isSuperAdmin: boolean = false;\r\n\r\n  constructor(public userservice: UserService, public organizationservice: OrganizationService, private router: Router, private route: ActivatedRoute, private listsservice: ListsService) {\r\n    let users = JSON.parse(localStorage.getItem('currentUser'));\r\n    if(users){\r\n      if(users['role_id'] == '2'){\r\n        this.isSuperAdmin = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if(!this.isSuperAdmin){\r\n      this.regularForm = new FormGroup({\r\n        'username': new FormControl(null, [Validators.required]),\r\n        'firstName': new FormControl(null, [Validators.required]),\r\n        'email': new FormControl(null, [Validators.required, Validators.email]),\r\n        'dob': new FormControl(null, [Validators.required]),\r\n        'password': new FormControl(null, [Validators.required, Validators.minLength(4), Validators.maxLength(24)]),\r\n        'lastName': new FormControl(null, [Validators.required]),\r\n        'genderRadios': new FormControl('Female'),\r\n        'address': new FormControl(null, [Validators.required]),\r\n        'phone': new FormControl(null, [Validators.required]),\r\n        'sublist': new FormControl(null, [Validators.required]),\r\n          // 'inputEmail': new FormControl(null, [Validators.required, Validators.email]),\r\n          // 'password': new FormControl(null, [Validators.required, Validators.minLength(4), Validators.maxLength(24)]),\r\n          // 'textArea': new FormControl(null, [Validators.required]),\r\n          // 'radioOption': new FormControl('Option one is this')\r\n      }, {updateOn: 'blur'});\r\n    }\r\n    else{\r\n      this.regularForm = new FormGroup({\r\n        'username': new FormControl(null, [Validators.required]),\r\n        'firstName': new FormControl(null, [Validators.required]),\r\n        'email': new FormControl(null, [Validators.required, Validators.email]),\r\n        'dob': new FormControl(null, [Validators.required]),\r\n        'password': new FormControl(null, [Validators.required, Validators.minLength(4), Validators.maxLength(24)]),\r\n        'lastName': new FormControl(null, [Validators.required]),\r\n        'genderRadios': new FormControl('Female'),\r\n        'address': new FormControl(null, [Validators.required]),\r\n        'phone': new FormControl(null, [Validators.required]),\r\n        'sublist': new FormControl(null, [Validators.required]),\r\n        'role': new FormControl(null, [Validators.required]),\r\n        'organization': new FormControl(null, [Validators.required])\r\n          // 'inputEmail': new FormControl(null, [Validators.required, Validators.email]),\r\n          // 'password': new FormControl(null, [Validators.required, Validators.minLength(4), Validators.maxLength(24)]),\r\n          // 'textArea': new FormControl(null, [Validators.required]),\r\n          // 'radioOption': new FormControl('Option one is this')\r\n      }, {updateOn: 'blur'});\r\n    }\r\n    \tthis.listsservice.getlist(new Date().getTime()).then(data => {\r\n\t        console.log(data['lists']);\r\n\t        this.listDetails = data['lists'];\r\n\t    },\r\n\t    error => {\r\n\t    });\r\n        this.userservice.getGroups().then(data => {\r\n          this.roles = data['groups'];\r\n        });\r\n        this.organizationservice.getOrganization(new Date().getTime()).then(data => {\r\n          this.organizations = data['organization'];\r\n        });\r\n\t    if(localStorage.getItem('listadmin') == '1'){\r\n\t    \tthis.showlistadmin = true;\r\n\t\t}\r\n  }\r\n\r\n  public handleAddressChange(address) {\r\n    // Do some stuff\r\n    this.newaddress = address.formatted_address;\r\n  }\r\n\r\n  onReactiveFormSubmit(){\r\n\t\tthis.submitted = true;\r\n    let role = '';\r\n    let organization = '';\r\n\t\tif (this.regularForm.invalid) {\r\n            return;\r\n        }\r\n\t\tif(!this.showlistadmin){\r\n\t\t\tthis.listadmin = 3; // users groupid\r\n\t\t}\r\n    if(this.isSuperAdmin){\r\n      role = this.regularForm.controls['role'].value;\r\n      organization = this.regularForm.controls['organization'].value;\r\n    } else {\r\n      role = this.listadmin;\r\n      organization = '';\r\n    }\r\n    let userDetail = {\r\n      username: this.regularForm.controls['username'].value,\r\n      password: this.regularForm.controls['password'].value,\r\n      firstName: this.regularForm.controls['firstName'].value,\r\n      lastName: this.regularForm.controls['lastName'].value,\r\n      email: this.regularForm.controls['email'].value,\r\n      dob: this.regularForm.controls['dob'].value,\r\n      genderRadios: this.regularForm.controls['genderRadios'].value,\r\n      address: this.newaddress,\r\n      phone: this.regularForm.controls['phone'].value,\r\n      profileImage: '',\r\n      sublist: this.regularForm.controls['sublist'].value,\r\n      type: '',\r\n      role: role, //this.listadmin,\r\n      organization: organization\r\n    }\r\n\t\tthis.userservice.addUser(userDetail).then(data => {\r\n\t\t\tif(data['status'] == \"success\"){\r\n\t\t\t\tthis.router.navigate(['/users/users']);\r\n\t\t\t}\r\n\t\t\telse if(data['status'] == \"Failed\"){\r\n\r\n\t\t\t}\r\n\t\t\telse if(data['status'] == \"User Exits\"){\r\n\t\t\t\tif(data['value'] == \"Username Already Exits.\"){\r\n\t\t\t\t\tthis.usernameerror = true;\r\n                    //this.snotifyService.success('User Subscription Was Successfully', '', this.getConfig());\r\n\t\t\t\t\tthis.emailerror = false;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tthis.emailerror = true;\r\n\t\t\t\t\tthis.usernameerror = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n  change(e){\r\n  \tif(e.target.checked){\r\n  \t\tthis.listadmin = 4; // list admin groupid\r\n  \t}\r\n  \telse{\r\n  \t\tthis.listadmin = 3; // users groupid\r\n  \t}\r\n  }\r\n\r\n  cancelEdit(){\r\n\t\tthis.regularForm.reset();\r\n\t}\r\n\r\n}\r\n","module.exports = \"<section id=\\\"paging\\\" class=\\\"mb-3\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <div class=\\\"content-header\\\">Check In Members</div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n              <div class=\\\"card\\\">\\r\\n                <label for=\\\"memType\\\">Start Date</label>\\r\\n                <div class=\\\"input-group\\\">\\r\\n                  <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dp\\\" [(ngModel)]=\\\"popupModel.dp\\\" ngbDatepicker #d2=\\\"ngbDatepicker\\\" />\\r\\n                  <div class=\\\"input-group-append\\\">\\r\\n                    <div class=\\\"input-group-text\\\" (click)=\\\"d2.toggle()\\\">\\r\\n                      <i class=\\\"fa fa-calendar\\\" style=\\\"cursor: pointer;\\\"></i>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n              <div class=\\\"card\\\">\\r\\n                <label for=\\\"memType\\\">End Date</label>\\r\\n                <div class=\\\"input-group\\\">\\r\\n                  <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dp1\\\" [(ngModel)]=\\\"popupModel.dp1\\\" ngbDatepicker #d1=\\\"ngbDatepicker\\\" />\\r\\n                  <div class=\\\"input-group-append\\\">\\r\\n                    <div class=\\\"input-group-text\\\" (click)=\\\"d1.toggle()\\\">\\r\\n                      <i class=\\\"fa fa-calendar\\\" style=\\\"cursor: pointer;\\\"></i>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n              <div class=\\\"card px-1\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-info btn-raised\\\" (click)=\\\"dateFilters()\\\" style=\\\"margin-right: 14px;\\\">Search</button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-info btn-raised\\\" (click)=\\\"clearFilters()\\\" style=\\\"margin-right: 14px;\\\">Reset</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-3\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" (keyup)='updateFilter($event)' [(ngModel)]=\\\"search\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"card-block\\\">\\r\\n              <ngx-datatable #table class='material bootstrap' [rows]='dataSource' [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [limit]=\\\"10\\\">\\r\\n                <ngx-datatable-column name=\\\"Member Name\\\">\\r\\n                  <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                    {{row.membername}}\\r\\n                  </ng-template>\\r\\n                </ngx-datatable-column>\\r\\n                <ngx-datatable-column name=\\\"Member Number\\\">\\r\\n                  <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                    {{row.membernumber}}\\r\\n                  </ng-template>\\r\\n                </ngx-datatable-column>\\r\\n                <!-- <ngx-datatable-column name=\\\"Visitors Details\\\">\\r\\n                <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                  {{ row.visitorsdetails | json }}\\r\\n                </ng-template>\\r\\n              </ngx-datatable-column> -->\\r\\n                <ngx-datatable-column name=\\\"Visitors Details\\\">\\r\\n                  <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                    {{ getVisitorStyle(row.visitorsdetails) }}\\r\\n                  </ng-template>\\r\\n                </ngx-datatable-column>\\r\\n                <ngx-datatable-column name=\\\"Check In Date\\\">\\r\\n                  <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                    {{row.checkindate}}\\r\\n                  </ng-template>\\r\\n                </ngx-datatable-column>\\r\\n              </ngx-datatable>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL2NoZWNraW4vY2hlY2tpbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { FormControl, FormGroup, Validators, NgForm } from '@angular/forms';\r\nimport { SnotifyService, SnotifyPosition, SnotifyToastConfig } from 'ng-snotify';\r\nimport { GooglePlaceDirective } from \"ngx-google-places-autocomplete\";\r\nimport { NgbDateStruct, NgbDatepickerI18n, NgbCalendar} from '@ng-bootstrap/ng-bootstrap';\r\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\r\n\r\nimport { UserService } from '../../shared/data/user.service';\r\nimport swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-checkin',\r\n  templateUrl: './checkin.component.html',\r\n  styleUrls: ['./checkin.component.scss']\r\n})\r\nexport class CheckinComponent implements OnInit {\r\n@ViewChild(DatatableComponent) table: DatatableComponent;\r\n  dataSource = [];\r\n  originalDataSource = [];\r\n  filteredData = [];\r\n  collectionSize = 0;\r\n  columns = [\r\n    { name: 'Member Name', width: 40 },\r\n    { name: 'Member Number', width: 40 },\r\n    { name: 'Visitors Details', width: 80},\r\n    { name: 'Check In Date', width: 80}\r\n  ];\r\n  popupModel = {\r\n    'dp': '',\r\n    'dp1': ''\r\n  };\r\n  search = '';\r\n\r\n  constructor(public userservice: UserService) { }\r\n\r\n  ngOnInit() {\r\n    this.userservice.getcheckin(new Date().getTime()).then(data => {\r\n      console.log(data['user']);\r\n      if(data['status'] == 'success'){\r\n        this.dataSource = data['user'];\r\n        this.originalDataSource = data['user'];\r\n        this.filteredData = data['user'];\r\n        this.collectionSize = data['user'].length;\r\n      }\r\n    },\r\n    error => {\r\n    });\r\n  }\r\n\r\n  getVisitorStyle(visitors){\r\n    let visitor = '';\r\n    //let visitordata = JSON.parse(visitors);\r\n    if(visitors != null){\r\n      for(let i = 0; i<= visitors.length-1; i++){\r\n        if(visitors[i].name != ''){\r\n          visitor += 'Guest '+i+' :- '+visitors[i].name+' , '+ visitors[i].phone;\r\n          if(i + 1 < visitors.length){\r\n            visitor += ' / ';\r\n          }\r\n        }\r\n        else{\r\n          visitor = '-';\r\n        }\r\n      }\r\n    }\r\n    else{\r\n      visitor = '-';\r\n    }\r\n    return visitor;\r\n  }\r\n\r\n  updateFilter(event){\r\n    if(event.target.value != ''){\r\n      this.search = event.target.value.toLowerCase();\r\n      let val = event.target.value.toLowerCase();\r\n      let keys = Object.keys(this.dataSource[0]);\r\n      let colsAmt = keys.length;\r\n      this.dataSource = this.filteredData.filter(function(item){\r\n        for (let i=0; i<=colsAmt-1; i++){\r\n          if (keys[i] !== 'visitorsdetails' && keys[i] !== 'checkindate'){\r\n            if(item[keys[i]] != '' && item[keys[i]] != null){\r\n              if(item[keys[i]].toLowerCase().indexOf(val) !== -1 || !val){\r\n                return true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n    else{\r\n      this.dataSource = this.originalDataSource;\r\n    }\r\n    this.table.offset = 0;\r\n  }\r\n\r\n  dateFilters(){\r\n    let startDate = new Date(this.popupModel.dp['year']+'-'+this.popupModel.dp['month']+'-'+this.popupModel.dp['day']).getTime();\r\n    //this.popupModel.dp = stDate;\r\n    let endDate = new Date(this.popupModel.dp1['year']+'-'+this.popupModel.dp1['month']+'-'+this.popupModel.dp1['day']).getTime();\r\n    this.userservice.getcheckinbyDates(new Date().getTime(), startDate, endDate).then(data => {\r\n      console.log(data['user']);\r\n      if(data['status'] == 'success'){\r\n        this.dataSource = data['user'];\r\n        this.originalDataSource = data['user'];\r\n        this.filteredData = data['user'];\r\n        this.collectionSize = data['user'].length;\r\n        // if(this.search != ''){\r\n        //   let keys = Object.keys(this.dataSource[0]);\r\n        //   let colsAmt = keys.length;\r\n        //   this.dataSource = this.filteredData.filter(function(item){\r\n        //     for (let i=0; i<=colsAmt-1; i++){\r\n        //       if (keys[i] !== 'visitorsdetails' && keys[i] !== 'checkindate'){\r\n        //         if(item[keys[i]] != '' && item[keys[i]] != null){\r\n        //           if(item[keys[i]].toLowerCase().indexOf(this.search) !== -1 || !this.search){\r\n        //             return true;\r\n        //           }\r\n        //         }\r\n        //       }\r\n        //     }\r\n        //   });\r\n        // }\r\n      }\r\n    },\r\n    error => {\r\n    });\r\n\r\n    // this.dataSource = this.filteredData.filter(d => {\r\n    //   var time = new Date(d.checkindate).getTime();\r\n    //   return (d.checkindate >= this.popupModel.dp['year']+'-'+this.popupModel.dp['month']+'-'+this.popupModel.dp['day'] && d.checkindate <= this.popupModel.dp1['year']+'-'+this.popupModel.dp1['month']+'-'+this.popupModel.dp1['day']);\r\n    // });\r\n    // this.dataSource = this.filteredData.filter(function (a){\r\n    //   return (a.checkindate) >= '2021-05-12' && (a.ProductHits) <= '2021-05-08';\r\n    // });\r\n    this.table.offset = 0;\r\n  }\r\n  clearFilters(){\r\n    this.popupModel.dp = '';\r\n    this.popupModel.dp1 = '';\r\n    this.dataSource = this.originalDataSource;\r\n    this.filteredData = this.originalDataSource;\r\n    this.search = '';\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <div class=\\\"content-header\\\">Edit User</div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\" id=\\\"edituser\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"card-block\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-xl-3\\\">\\r\\n              <a class=\\\"profile-image\\\">\\r\\n                <img src=\\\"{{userImage}}\\\" class=\\\"rounded-circle img-border gradient-summer width-100\\\"><br>\\r\\n              </a>\\r\\n            </div>\\r\\n            <div class=\\\"col-xl-3\\\">\\r\\n              <ul style=\\\"list-style: none !important;\\\">\\r\\n                <li class=\\\"text-uppercase font-medium-3\\\">{{userModel.name}}</li>\\r\\n                <li>Membership Card - {{userModel.subId}}</li>\\r\\n                <li><img src=\\\"assets/img/phone.jpg\\\"> {{userModel.phone}}</li>\\r\\n                <li><img src=\\\"assets/img/l1.jpg\\\"> {{userModel.address}}</li>\\r\\n              </ul>\\r\\n            </div>\\r\\n            <div class=\\\"col-xl-6\\\">\\r\\n              <ul style=\\\"list-style: none !important;\\\">\\r\\n                <li class=\\\"text-uppercase\\\">List Subscription Count : {{listSubCount}}</li>\\r\\n                <li class=\\\"text-uppercase\\\" *ngFor=\\\"let detail of newsLetterDetails\\\">{{detail.text}} : {{detail.count}}</li>\\r\\n              </ul>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <ngb-tabset>\\r\\n                <ngb-tab title=\\\"Overview\\\">\\r\\n                  <ng-template ngbTabContent>\\r\\n                    <form #edituser=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\r\\n                      <!-- <form #edituser=\\\"ngForm\\\" class=\\\"editForm\\\" *ngIf=\\\"!isSuperAdmin\\\" novalidate> -->\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label>Username</label>\\r\\n                            <input required [(ngModel)]=\\\"userModel.username\\\" name=\\\"username\\\" #username=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': edituser.submitted && username.invalid }\\\" class=\\\"form-control\\\" id=\\\"username\\\" placeholder=\\\"Enter Username\\\"\\r\\n                              type=\\\"text\\\">\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"edituser.submitted && username.invalid\\\">Please enter a valid username!</small>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label>Password</label>\\r\\n                            <input required [(ngModel)]=\\\"userModel.password\\\" [ngClass]=\\\"{ 'is-invalid': edituser.submitted && password.invalid }\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" placeholder=\\\"Enter Password\\\"\\r\\n                              minlength=\\\"4\\\" maxlength=\\\"24\\\" type=\\\"password\\\">\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"password.errors?.minlength\\\">Password characters length must be between 4 and 24 !</small>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label>First Name</label>\\r\\n                            <input required [(ngModel)]=\\\"userModel.firstName\\\" #firstName=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': edituser.submitted && firstName.invalid }\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" name=\\\"firstName\\\"\\r\\n                              placeholder=\\\"Enter First Name\\\" type=\\\"text\\\">\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"edituser.submitted && firstName.invalid\\\">Please enter a valid firstName!</small>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label>Last Name</label>\\r\\n                            <input [(ngModel)]=\\\"userModel.lastName\\\" #lastName=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': edituser.submitted && lastName.invalid }\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" name=\\\"lastName\\\" placeholder=\\\"Enter Last Name\\\" type=\\\"text\\\">\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"edituser.submitted && lastName.invalid\\\">Please enter a valid lastName!</small>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label>Email</label>\\r\\n                            <input [(ngModel)]=\\\"userModel.email\\\" #email=\\\"ngModel\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" email placeholder=\\\"Enter Email\\\" type=\\\"email\\\" [readOnly]=\\\"onlyUserEdit\\\">\\r\\n                            <!-- <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"edituser.submitted && email.invalid\\\">Please enter a valid email!</small> -->\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label>DOB</label>\\r\\n                            <input [(ngModel)]=\\\"userModel.dob\\\" #dob=\\\"ngModel\\\" class=\\\"form-control\\\" id=\\\"dob\\\" name=\\\"dob\\\" type=\\\"date\\\">\\r\\n                            <!-- <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"edituser.submitted && dob.invalid\\\">Please enter a valid dob!</small> -->\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class>Gender</label>\\r\\n                            <div class=\\\"custom-control custom-radio display-block\\\">\\r\\n                              <input type=\\\"radio\\\" id=\\\"Female\\\" value=\\\"Female\\\" name=\\\"genderRadios\\\" #genderRadios=\\\"ngModel\\\" class=\\\"custom-control-input\\\" required [(ngModel)]=\\\"userModel.genderRadios\\\">\\r\\n                              <label class=\\\"custom-control-label\\\" for=\\\"Female\\\">Female</label>\\r\\n                            </div>\\r\\n                            <div class=\\\"custom-control custom-radio display-block\\\">\\r\\n                              <input type=\\\"radio\\\" id=\\\"Male\\\" value=\\\"Male\\\" name=\\\"genderRadios\\\" #genderRadios=\\\"ngModel\\\" class=\\\"custom-control-input\\\" [(ngModel)]=\\\"userModel.genderRadios\\\">\\r\\n                              <label class=\\\"custom-control-label\\\" for=\\\"Male\\\">Male</label>\\r\\n                            </div>\\r\\n                            <!-- <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"edituser.submitted && genderRadios.invalid\\\">Please choose Gender!</small> -->\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label>Phone</label>\\r\\n                            <input required [(ngModel)]=\\\"userModel.phone\\\" #phone=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': edituser.submitted && phone.invalid }\\\" class=\\\"form-control\\\" id=\\\"phone\\\" name=\\\"phone\\\" type=\\\"text\\\" pattern=\\\"^\\\\s*(?:[A-Z0-9]\\\\s*){2,10}$\\\"\\r\\n                              (keypress)=\\\"isNumberKey($event)\\\">\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"edituser.submitted && phone.invalid\\\">Please enter valid phone number!</small>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label>Address</label>\\r\\n                            <input required [(ngModel)]=\\\"userModel.address\\\" #address=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': edituser.submitted && address.invalid }\\\" class=\\\"form-control\\\" id=\\\"address\\\" name=\\\"address\\\" ngx-google-places-autocomplete\\r\\n                              [options]='options' #placesRef=\\\"ngx-places\\\" (onAddressChange)=\\\"handleAddressChange($event)\\\" />\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"edituser.submitted && address.invalid\\\">Please enter a valid address!</small>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label>Select Membership</label>\\r\\n                            <select required [(ngModel)]=\\\"userModel.membership\\\" [ngClass]=\\\"{ 'is-invalid': edituser.submitted && membership.invalid }\\\" (change)=\\\"setMembership($event)\\\" class=\\\"form-control\\\" id=\\\"membership\\\" #membership=\\\"ngModel\\\"\\r\\n                              [disabled]=\\\"onlyUserEdit\\\" name=\\\"membership\\\">\\r\\n                              <option value=''>Select List</option>\\r\\n                              <option *ngFor=\\\"let member of members\\\" value=\\\"{{member.id}}\\\">{{member.plans}}</option>\\r\\n                            </select>\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"(edituser.submitted && membership.invalid && membership.value == '')\\\">Please select a Membership.</small>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label>Membership Card</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Membership Card\\\" required [(ngModel)]=\\\"userModel.subId\\\" id=\\\"subId\\\" #subId=\\\"ngModel\\\" name=\\\"subId\\\">\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label>Confirm Membership Fees Paid</label>\\r\\n                            <div class=\\\"custom-control custom-radio display-block\\\">\\r\\n                              <input type=\\\"radio\\\" id=\\\"y\\\" value=\\\"y\\\" name=\\\"paymentRadios\\\" class=\\\"custom-control-input\\\" required [(ngModel)]=\\\"userModel.paymentRadios\\\" #paymentRadios=\\\"ngModel\\\"\\r\\n                                [ngClass]=\\\"{ 'is-invalid': edituser.submitted && paymentRadios.invalid }\\\">\\r\\n                              <label class=\\\"custom-control-label\\\" for=\\\"y\\\">Yes</label>\\r\\n                            </div>\\r\\n                            <div class=\\\"custom-control custom-radio display-block\\\">\\r\\n                              <input type=\\\"radio\\\" id=\\\"n\\\" value=\\\"n\\\" name=\\\"paymentRadios\\\" class=\\\"custom-control-input\\\" required [(ngModel)]=\\\"userModel.paymentRadios\\\" #paymentRadios=\\\"ngModel\\\"\\r\\n                                [ngClass]=\\\"{ 'is-invalid': edituser.submitted && paymentRadios.invalid }\\\">\\r\\n                              <label class=\\\"custom-control-label\\\" for=\\\"n\\\">No</label>\\r\\n                            </div>\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"edituser.submitted && userModel.membership != '' && paymentRadios.invalid\\\">Please Select!</small>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3\\\" *ngIf=\\\"userModel.paymentRadios == 'y'\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label>Add Receipt Number</label>\\r\\n                            <div class=\\\"custom-control custom-radio display-block\\\">\\r\\n                              <input type=\\\"text\\\" name=\\\"receiptNumber\\\" placeholder=\\\"Enter Receipt Number\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"userModel.receiptNumber\\\" [ngClass]=\\\"{ 'is-invalid': edituser.submitted && receiptNumber.invalid }\\\">\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"row\\\" *ngIf=\\\"extraFields\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                          <h4 class=\\\"form-section\\\">Extra Fields</h4>\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-6\\\" *ngFor=\\\"let field of addFields;let i = index\\\">\\r\\n                              <div class=\\\"form-group\\\" *ngIf=\\\"field.fieldType == 'text'\\\">\\r\\n                                <label>{{field.label}}</label>\\r\\n                                <input class=\\\"form-control\\\" name=\\\"{{field.fieldName}}\\\" value=\\\"{{field.valuesBind}}\\\" [(ngModel)]=\\\"field.valuesBind\\\" type=\\\"text\\\" minlength=\\\"1\\\" maxlength=\\\"{{field.length}}\\\" [required]=\\\"field.mandatory\\\"\\r\\n                                  (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\">\\r\\n                                <small *ngIf=\\\"field.validation || edituser.submitted && (field.fieldName.invalid)\\\" class=\\\"form-text text-muted danger\\\">{{field.validationMsg}}</small>\\r\\n                              </div>\\r\\n                              <div class=\\\"form-group\\\" *ngIf=\\\"field.fieldType == 'date'\\\">\\r\\n                                <label>{{field.label}}</label>\\r\\n                                <input class=\\\"form-control\\\" name=\\\"{{field.fieldName}}\\\" value=\\\"{{field.valuesBind}}\\\" [(ngModel)]=\\\"field.valuesBind\\\" type=\\\"date\\\" [required]=\\\"field.mandatory\\\"\\r\\n                                  (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\">\\r\\n                                <small *ngIf=\\\"field.validation || edituser.submitted && (dateValue.invalid)\\\" class=\\\"form-text text-muted danger\\\">{{field.validationMsg}}</small>\\r\\n                              </div>\\r\\n                              <div class=\\\"form-group\\\" *ngIf=\\\"field.fieldType == 'number'\\\">\\r\\n                                <label>{{field.label}}</label>\\r\\n                                <input class=\\\"form-control\\\" value=\\\"{{field.valuesBind}}\\\" name=\\\"{{field.fieldName}}\\\" #numbererrorValue=\\\"ngModel\\\" [(ngModel)]=\\\"field.valuesBind\\\" minlength=\\\"0\\\" maxlength=\\\"{{field.length}}\\\" #numbererrorValue=\\\"ngModel\\\"\\r\\n                                  [required]=\\\"field.mandatory\\\" (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\" (keypress)=\\\"isNumberKey($event)\\\">\\r\\n                                <!-- <input class=\\\"form-control\\\" name=\\\"numberValue\\\" [(ngModel)]=\\\"lists.numberValue\\\" *ngIf=\\\"field.length == '' && field.length <= 0\\\" type=\\\"text\\\" pattern=\\\"[0-9]\\\" [required]=\\\"field.mandatory\\\" (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\"> -->\\r\\n                                <small *ngIf=\\\"field.length != '' && field.length > 0\\\" class=\\\"form-text text-muted danger\\\">Field Length Should not exceed {{field.length}}</small>\\r\\n                                <small *ngIf=\\\"field.validation || edituser.submitted && (numbererrorValue.errors)\\\" class=\\\"form-text text-muted danger\\\">{{field.validationMsg}}</small>\\r\\n                              </div>\\r\\n                              <div class=\\\"form-group\\\" *ngIf=\\\"field.fieldType == 'float'\\\">\\r\\n                                <label>{{field.label}}</label>\\r\\n                                <input class=\\\"form-control\\\" value=\\\"{{field.valuesBind}}\\\" name=\\\"{{field.fieldName}}\\\" #floaterrorValue=\\\"ngModel\\\" [(ngModel)]=\\\"field.valuesBind\\\" minlength=\\\"0\\\" maxlength=\\\"{{field.length}}\\\" #floaterrorValue=\\\"ngModel\\\"\\r\\n                                  [required]=\\\"field.mandatory\\\" (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\" (keypress)=\\\"isNumberKey($event)\\\">\\r\\n                                <!-- <input class=\\\"form-control\\\" name=\\\"floatValue\\\" [(ngModel)]=\\\"lists.floatValue\\\" maxlength=\\\"{{field.length}}\\\" *ngIf=\\\"field.length != '' && field.length > 0\\\" pattern=\\\"/^[0-9]+(\\\\.[0-9]{1,2})?$/\\\" (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\" type=\\\"text\\\" [required]=\\\"field.mandatory\\\">\\r\\n                                            <input class=\\\"form-control\\\" name=\\\"floatValue\\\" [(ngModel)]=\\\"lists.floatValue\\\" *ngIf=\\\"field.length == '' && field.length <= 0\\\" pattern=\\\"/^[0-9]+(\\\\.[0-9]{1,2})?$/\\\" (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\" type=\\\"text\\\" [required]=\\\"field.mandatory\\\"> -->\\r\\n                                <small *ngIf=\\\"field.length != '' && field.length > 0\\\" class=\\\"form-text text-muted danger\\\">Field Length Should not exceed {{field.length}}</small>\\r\\n                                <small *ngIf=\\\"field.validation || edituser.submitted && (floaterrorValue.errors)\\\" class=\\\"form-text text-muted danger\\\">{{field.validationMsg}}</small>\\r\\n                              </div>\\r\\n                              <div class=\\\"form-group\\\" *ngIf=\\\"field.fieldType == 'toggle'\\\">\\r\\n                                <label>{{field.label}}</label>\\r\\n                                <ui-switch name=\\\"{{field.fieldName}}\\\" [(ngModel)]=\\\"field.valuesBind\\\" (change)=\\\"fieldValueChange(field.id,$event, field.fieldName)\\\" [required]=\\\"field.mandatory\\\"></ui-switch>\\r\\n                                <small *ngIf=\\\"field.validation || edituser.submitted && (toggleValue.invalid)\\\" class=\\\"form-text text-muted danger\\\">{{field.validationMsg}}</small>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"usernameerror\\\">Username Already Exists.<br /><br /></small>\\r\\n                      <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"emailerror\\\">Email Already Exists.<br /><br /></small>\\r\\n                      <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"dateerror\\\">Your age must be 18 or older.<br /><br /></small>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-raised  mr-1\\\" (click)=\\\"cancelEdit()\\\">Cancel</button>\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-success btn-raised\\\" [disabled]=\\\"!edituser.valid || submitted\\\" (click)=\\\"onReactiveFormSubmit()\\\">Submit <i *ngIf=\\\"submitted\\\" class=\\\"fas fa-spinner fa fa-spin\\\"></i></button>\\r\\n                      </div>\\r\\n                    </form>\\r\\n                  </ng-template>\\r\\n                </ngb-tab>\\r\\n                <ngb-tab title=\\\"List Memberships\\\">\\r\\n                  <ng-template ngbTabContent>\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-sm-12\\\">\\r\\n                        <p class=\\\"content-header\\\">List Subscription By {{user.name}}</p>\\r\\n                        <div class=\\\"row\\\">\\r\\n                          <div class=\\\"col-sm-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label>Subscriber List</label>\\r\\n                              <ngx-select-dropdown [config]=\\\"config\\\" [options]=\\\"listDetails\\\" name=\\\"sublistid\\\" [(ngModel)]=\\\"subscriberListName\\\" (ngModelChange)=\\\"selected($event)\\\" [multiple]=\\\"true\\\"></ngx-select-dropdown>\\r\\n                              <!-- <select class=\\\"form-control\\\" id=\\\"sublistid\\\" name=\\\"sublistid\\\" [(ngModel)]=\\\"listSubid.sublistid\\\">\\r\\n                                           <option selected value=\\\"\\\">Select List</option>\\r\\n                                           <option *ngFor=\\\"let list of listDetails\\\" value=\\\"{{list.id}}\\\">{{list.name}}</option>\\r\\n                                           </select> -->\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"col-sm-6\\\">\\r\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-success btn-raised\\\" (click)=\\\"subscribeUsers()\\\" [disabled]=\\\"listSubid.sublistid == ''\\\">Subscriber User</button>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"card\\\">\\r\\n                          <div class=\\\"card-body\\\">\\r\\n                            <div class=\\\"card-block\\\">\\r\\n                              <!-- <form (ngSubmit)=\\\"editSubscription()\\\"> -->\\r\\n                              <div class=\\\"row\\\" *ngFor=\\\"let list of listSub\\\">\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                  <div class=\\\"form-group\\\">\\r\\n                                    <label>Subscribed To {{list.list}}</label>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                  <div class=\\\"form-group\\\">\\r\\n                                    <ui-switch [(ngModel)]=\\\"list.subscribe\\\" (ngModelChange)=\\\"unsubscribe($event, list.subid, list.id)\\\"></ui-switch>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n                </ngb-tab>\\r\\n                <ngb-tab title=\\\"Loyalty Points\\\">\\r\\n                  <ng-template ngbTabContent>\\r\\n                    <p class=\\\"content-header\\\">Loyaty Points Redeemed By {{user.name}}</p>\\r\\n                    <div class=\\\"card\\\">\\r\\n                      <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"card-block\\\">\\r\\n                          <ngx-datatable class=\\\"material\\\" class=\\\"bootstrap\\\" [rows]=\\\"loyaltyPointDisplay\\\" [columns]=\\\"loyaltyPointsColumns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"50\\\"\\r\\n                            [sorts]=\\\"[{prop: ['loyalty', 'points_redeemed', 'remaining_points', 'redeemed_on'], dir: 'desc'}]\\\" [limit]=\\\"10\\\">\\r\\n                            <ngx-datatable-column name=\\\"Loyalty\\\">\\r\\n                              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                {{row.loyalty}}\\r\\n                              </ng-template>\\r\\n                            </ngx-datatable-column>\\r\\n                            <ngx-datatable-column name=\\\"Redeemed Points\\\">\\r\\n                              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                {{row.points_redeemed}}\\r\\n                              </ng-template>\\r\\n                            </ngx-datatable-column>\\r\\n                            <ngx-datatable-column name=\\\"Remaining Points\\\">\\r\\n                              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                {{row.remaining_points}}\\r\\n                              </ng-template>\\r\\n                            </ngx-datatable-column>\\r\\n                            <ngx-datatable-column name=\\\"Redeemed On\\\">\\r\\n                              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                {{row.redeemed_on | date: 'MM/dd/yyyy'}}\\r\\n                              </ng-template>\\r\\n                            </ngx-datatable-column>\\r\\n                          </ngx-datatable>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card\\\">\\r\\n                      <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"card-block\\\">\\r\\n                          <p class=\\\"content-header\\\">Loyaty Points Earned By {{user.name}}</p>\\r\\n                          <ngx-datatable class=\\\"material\\\" class=\\\"bootstrap\\\" [rows]=\\\"loyaltyPointEarned\\\" [columns]=\\\"loyaltyPointsEarnedColumns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"50\\\"\\r\\n                            [sorts]=\\\"[{prop: ['loyalty', 'points_redeemed', 'remaining_points', 'redeemed_on'], dir: 'desc'}]\\\" [limit]=\\\"10\\\">\\r\\n                            <ngx-datatable-column name=\\\"Loyalty\\\">\\r\\n                              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                {{row.loyalty}}\\r\\n                              </ng-template>\\r\\n                            </ngx-datatable-column>\\r\\n                            <ngx-datatable-column name=\\\"Points Earned\\\">\\r\\n                              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                {{row.points}}\\r\\n                              </ng-template>\\r\\n                            </ngx-datatable-column>\\r\\n                            <ngx-datatable-column name=\\\"Transaction Id\\\">\\r\\n                              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                {{row.points}}\\r\\n                              </ng-template>\\r\\n                            </ngx-datatable-column>\\r\\n                          </ngx-datatable>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n                </ngb-tab>\\r\\n                <ngb-tab title=\\\"Transactions\\\">\\r\\n                  <ng-template ngbTabContent>\\r\\n                    <p class=\\\"content-header\\\">Transaction Of {{user.name}}</p>\\r\\n                    <div class=\\\"text-right\\\">\\r\\n                      <!-- <a class=\\\"btn btn-social btn-round btn-min-width mr-2 mb-2 btn-outline-bitbucket float-right\\\" (click)=\\\"addTransaction = !addTransaction\\\"><span class=\\\"ft-plus\\\"></span> Add Transaction</a> -->\\r\\n                    </div>\\r\\n                    <div class=\\\"card\\\">\\r\\n                      <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"card-block\\\">\\r\\n                          <div class=\\\"row\\\" *ngIf=\\\"addTransaction\\\">\\r\\n                            <form [formGroup]=\\\"transactionForm\\\" (ngSubmit)=\\\"onTransactionFormSubmit(this.value)\\\" novalidate>\\r\\n                              <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                  <div class=\\\"form-group\\\">\\r\\n                                    <label>Transaction Id</label>\\r\\n                                    <input class=\\\"form-control\\\" id=\\\"transactionId\\\" formControlName=\\\"paymentDetails\\\" placeholder=\\\"Enter Transaction Id\\\" type=\\\"text\\\">\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                  <div class=\\\"form-group\\\">\\r\\n                                    <label>Price</label>\\r\\n                                    <input class=\\\"form-control\\\" id=\\\"price\\\" formControlName=\\\"amount\\\" placeholder=\\\"Enter the Price of membership\\\" required type=\\\"text\\\">\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                  <div class=\\\"form-group\\\">\\r\\n                                    <input class=\\\"form-control\\\" id=\\\"membershipId\\\" formControlName=\\\"membership_id\\\" readonly type=\\\"hidden\\\">\\r\\n                                  </div>\\r\\n                                  <div class=\\\"form-group\\\">\\r\\n                                    <input class=\\\"form-control\\\" id=\\\"userId\\\" formControlName=\\\"uid\\\" readonly type=\\\"hidden\\\">\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"row\\\">\\r\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-success btn-raised\\\" [disabled]=\\\"!transactionForm.valid || submitted\\\">Submit <i *ngIf=\\\"submitted\\\" class=\\\"fas fa-spinner fa fa-spin\\\"></i></button>\\r\\n                              </div>\\r\\n                            </form>\\r\\n                          </div>\\r\\n                          <ngx-datatable *ngIf=\\\"!addTransaction\\\" #table class='bootstrap' [rows]=\\\"transactionData\\\" [columns]=\\\"transactionColumns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [limit]=\\\"10\\\">\\r\\n                            <ngx-datatable-column name=\\\"Transaction Id\\\">\\r\\n                              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                {{row.transaction_id}}\\r\\n                              </ng-template>\\r\\n                            </ngx-datatable-column>\\r\\n                            <!-- <ngx-datatable-column name=\\\"User Id\\\">\\r\\n                              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                {{row.user_id}}\\r\\n                              </ng-template>\\r\\n                            </ngx-datatable-column> -->\\r\\n                            <ngx-datatable-column name=\\\"Membership\\\">\\r\\n                              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                {{row.plans}}\\r\\n                              </ng-template>\\r\\n                            </ngx-datatable-column>\\r\\n                            <ngx-datatable-column name=\\\"Amount\\\">\\r\\n                              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                {{row.amount}}\\r\\n                              </ng-template>\\r\\n                            </ngx-datatable-column>\\r\\n                            <ngx-datatable-column name=\\\"Renewal Dtae\\\">\\r\\n                              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                {{row.renewal_date}}\\r\\n                              </ng-template>\\r\\n                            </ngx-datatable-column>\\r\\n                            <ngx-datatable-column name=\\\"Expiry Date\\\">\\r\\n                              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                {{row.expiry_date}}\\r\\n                              </ng-template>\\r\\n                            </ngx-datatable-column>\\r\\n                          </ngx-datatable>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n                </ngb-tab>\\r\\n              </ngb-tabset>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- <section id=\\\"user-area\\\">\\r\\n      <div id=\\\"timeline\\\">\\r\\n         <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header\\\">\\r\\n               <div class=\\\"card-title-wrap bar-primary\\\">\\r\\n                  <div class=\\\"card-title\\\">User Timeline</div>\\r\\n               </div>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n               <div class=\\\"card-block\\\">\\r\\n                  <div class=\\\"timeline\\\">\\r\\n                     <div class=\\\"timeline-title d-inline-block  py-1 mb-4 mx-2\\\">Newsletters</div>\\r\\n                     <ul class=\\\"list-unstyled base-timeline activity-timeline\\\">\\r\\n                        <li class=\\\"\\\" *ngFor=\\\"let timeLine of timeLines\\\">\\r\\n                           <div class=\\\"timeline-icon bg-primary\\\" *ngIf=\\\"timeLine.type == 'newsletter'\\\">\\r\\n                              <i class=\\\"fa fa-envelope\\\"></i>\\r\\n                           </div>\\r\\n                           <div class=\\\"act-time\\\" *ngIf=\\\"timeLine.type == 'newsletter'\\\">{{timeLine.dateTime}}</div>\\r\\n                           <div class=\\\"base-timeline-info\\\" *ngIf=\\\"timeLine.type == 'newsletter'\\\">\\r\\n                              <a class=\\\"text-uppercase text-primary\\\">{{timeLine.name}}</a>\\r\\n                              <span class=\\\"d-block\\\">{{timeLine.description}}</span>\\r\\n                           </div>\\r\\n                        </li>\\r\\n                     </ul>\\r\\n                     <br>\\r\\n                     <div class=\\\"timeline-title d-inline-block  py-1 mb-4 mx-2\\\">Loyalty Points Redeemed</div>\\r\\n                     <ul class=\\\"list-unstyled base-timeline activity-timeline\\\">\\r\\n                        <li class=\\\"\\\" *ngFor=\\\"let timeLine of timeLines\\\">\\r\\n                           <div class=\\\"timeline-icon bg-primary\\\" *ngIf=\\\"timeLine.type == 'loyalty'\\\">\\r\\n                              <i class=\\\"fa fa-gift\\\"></i>\\r\\n                           </div>\\r\\n                           <div class=\\\"act-time\\\" *ngIf=\\\"timeLine.type == 'loyalty'\\\">{{timeLine.dateTime}}</div>\\r\\n                           <div class=\\\"base-timeline-info\\\" *ngIf=\\\"timeLine.type == 'loyalty'\\\">\\r\\n                              <a class=\\\"text-uppercase text-primary\\\">{{timeLine.name}}</a>\\r\\n                              <span class=\\\"d-block\\\">{{timeLine.description}}</span>\\r\\n                           </div>\\r\\n                        </li>\\r\\n                     </ul>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </section> -->\\r\\n</div>\\r\\n<!-- <div class=\\\"row\\\" style=\\\"display: none;\\\">\\r\\n   <div class=\\\"col-sm-12\\\">\\r\\n       <div class=\\\"card\\\">\\r\\n           <div class=\\\"card-body\\\">\\r\\n               <div class=\\\"card-block\\\">\\r\\n                   <form [formGroup]=\\\"regularForm\\\" (ngSubmit)=\\\"onReactiveFormSubmit()\\\" novalidate>\\r\\n                       <div class=\\\"form-group\\\">\\r\\n                           <label>Username</label>\\r\\n                           <input class=\\\"form-control\\\" id=\\\"username\\\" name=\\\"username\\\" placeholder=\\\"Enter Username\\\" type=\\\"text\\\">\\r\\n                           <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('username').valid && (regularForm.get('username').dirty || regularForm.get('username').touched)\\\">Please enter a valid username!</small>\\r\\n                       </div>\\r\\n\\r\\n                       <div class=\\\"form-group\\\">\\r\\n                           <label>Password</label>\\r\\n                           <input class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Enter Password\\\" type=\\\"password\\\">\\r\\n                           <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('password').valid && (regularForm.get('password').dirty || regularForm.get('password').touched)\\\">Please enter a valid password!</small>\\r\\n                       </div>\\r\\n\\r\\n                       <div class=\\\"form-group\\\">\\r\\n                           <label>First Name</label>\\r\\n                           <input class=\\\"form-control\\\" id=\\\"firstName\\\" name=\\\"firstName\\\" placeholder=\\\"Enter First Name\\\" type=\\\"text\\\">\\r\\n                           <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('firstName').valid && (regularForm.get('firstName').dirty || regularForm.get('firstName').touched)\\\">Please enter a valid firstName!</small>\\r\\n                       </div>\\r\\n\\r\\n                       <div class=\\\"form-group\\\">\\r\\n                           <label>Last Name</label>\\r\\n                           <input class=\\\"form-control\\\" id=\\\"lastName\\\" name=\\\"lastName\\\" placeholder=\\\"Enter Last Name\\\" type=\\\"text\\\">\\r\\n                           <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('lastName').valid && (regularForm.get('lastName').dirty || regularForm.get('lastName').touched)\\\">Please enter a valid lastName!</small>\\r\\n                       </div>\\r\\n\\r\\n                       <div class=\\\"form-group\\\">\\r\\n                           <label>Email</label>\\r\\n                           <input class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Enter Email\\\" type=\\\"email\\\">\\r\\n                           <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('email').valid && (regularForm.get('email').dirty || regularForm.get('email').touched)\\\">Please enter a valid email!</small>\\r\\n                       </div>\\r\\n\\r\\n                       <div class=\\\"form-group\\\">\\r\\n                           <label>DOB</label>\\r\\n                           <input class=\\\"form-control\\\" id=\\\"dob\\\" name=\\\"dob\\\" type=\\\"date\\\">\\r\\n                           <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('dob').valid && (regularForm.get('dob').dirty || regularForm.get('dob').touched)\\\">Please enter a valid dob!</small>\\r\\n                       </div>\\r\\n\\r\\n                       <div class=\\\"form-group\\\">\\r\\n                           <label class>Gender</label>\\r\\n                           <div class=\\\"custom-control custom-radio display-block\\\">\\r\\n                               <input type=\\\"radio\\\" id=\\\"genderRadios1\\\" checked=\\\"{{gender == 'F'}}\\\" value=\\\"Female\\\" name=\\\"genderRadios\\\" class=\\\"custom-control-input\\\">\\r\\n                               <label class=\\\"custom-control-label\\\" for=\\\"genderRadios1\\\">Female</label>\\r\\n                           </div>\\r\\n                           <div class=\\\"custom-control custom-radio display-block\\\">\\r\\n                               <input type=\\\"radio\\\" id=\\\"genderRadios2\\\" checked=\\\"{{gender == 'M'}}\\\" value=\\\"Male\\\" name=\\\"genderRadios\\\" class=\\\"custom-control-input\\\">\\r\\n                               <label class=\\\"custom-control-label\\\" for=\\\"genderRadios2\\\">Male</label>\\r\\n                           </div>\\r\\n                           <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('genderRadios').valid && (regularForm.get('genderRadios').dirty || regularForm.get('genderRadios').touched)\\\">Please choose Gender!</small>\\r\\n                       </div>\\r\\n\\r\\n                       <div class=\\\"form-group\\\">\\r\\n                           <label>Address</label>\\r\\n                           <input class=\\\"form-control\\\" id=\\\"address\\\" name=\\\"address\\\" ngx-google-places-autocomplete [options]='options' #placesRef=\\\"ngx-places\\\" (onAddressChange)=\\\"handleAddressChange($event)\\\"/>\\r\\n                           <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('address').valid && (regularForm.get('address').dirty || regularForm.get('address').touched)\\\">Please enter a valid address!</small>\\r\\n                       </div>\\r\\n                       <div class=\\\"form-group\\\">\\r\\n                           <button type=\\\"button\\\" class=\\\"btn btn-danger btn-raised  mr-1\\\" (click)=\\\"cancelEdit()\\\">Cancel</button>\\r\\n                           <button type=\\\"submit\\\" class=\\\"btn btn-success btn-raised\\\" [disabled]=\\\"!regularForm.valid || submitted\\\">Submit <i *ngIf=\\\"submitted\\\" class=\\\"fas fa-spinner fa fa-spin\\\"></i></button>\\r\\n                       </div>\\r\\n                   </form>\\r\\n               </div>\\r\\n           </div>\\r\\n       </div>\\r\\n   </div>\\r\\n   </div> -->\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL2VkaXQtdXNlci9lZGl0LXVzZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators, NgForm } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { GooglePlaceDirective } from \"ngx-google-places-autocomplete\";\r\nimport { DatatableComponent } from \"@swimlane/ngx-datatable/release\";\r\nimport { loyaltypointService } from '../../shared/data/loyaltypoint.service';\r\nimport { SnotifyService, SnotifyPosition, SnotifyToastConfig } from 'ng-snotify';\r\n\r\nimport { UserService } from '../../shared/data/user.service';\r\nimport { AddFieldsService } from '../../shared/data/addFields.service';\r\nimport { StatisticsService } from '../../shared/data/statistics.service';\r\nimport { ListsService } from '../../shared/data/lists.service';\r\nimport { MembershipService } from '../../shared/data/membership.service';\r\nimport { AuthenticationService } from '../../shared/data/authentication.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-edit-user',\r\n  templateUrl: './edit-user.component.html',\r\n  styleUrls: ['./edit-user.component.scss']\r\n})\r\nexport class EditUserComponent implements OnInit {\r\n  @ViewChild('edituser') edituserForm: NgForm;\r\n  @ViewChild('vform') validationForm: FormGroup;\r\n  @ViewChild(\"placesRef\") placesRef : GooglePlaceDirective;\r\n  regularForm: FormGroup;\r\n  userId;\r\n  gender;\r\n  options = {\r\n    types: ['geocode'],\r\n    componentRestrictions: { country: 'AU' }\r\n  };\r\n  newaddress = '';\r\n  submitted = false;\r\n  user;\r\n  listSubscription = false;\r\n  userImage;\r\n  listSubCount = 0;\r\n  addTransaction = false;\r\n\r\n  loyaltyPointsColumns = [\r\n    { name: 'Name' },\r\n    { name: 'Redeemed Points' },\r\n    { name: 'Remaining Points' },\r\n    { name: 'Redeemed On' }\r\n  ];\r\n  loyaltyPointDisplay;\r\n\r\n  transactionColumns = [\r\n    { name: 'Transaction ID' },\r\n    { name: 'User ID' },\r\n    { name: 'Membership ID' },\r\n    { name: 'Amount' },\r\n    { name: 'Renewal Date' },\r\n    { name: 'Expiry Date' }\r\n  ];\r\n  listSub = '';\r\n  loyaltyPointEarned;\r\n  loyaltyPointsEarnedColumns = [\r\n    { name: 'Loyalty' },\r\n    { name: 'Points Earned' },\r\n    { name: 'Transaction ID' }\r\n  ]\r\n\r\n  timeout = 3000;\r\n  position: SnotifyPosition = SnotifyPosition.centerTop;\r\n  progressBar = true;\r\n  closeClick = true;\r\n  newTop = true;\r\n  backdrop = -1;\r\n  dockMax = 8;\r\n  blockMax = 6;\r\n  pauseHover = true;\r\n  titleMaxLength = 15;\r\n  bodyMaxLength = 80;\r\n  extraFields = false;\r\n  addFields = [];\r\n  toggleValue = false;\r\n  textValue;\r\n  dateValue;\r\n  numberValue;\r\n  floatValue;\r\n  FieldsValue = [];\r\n  dynamicFieldValue = [];\r\n  details;\r\n  timeLines;\r\n  newsLetterDetails = [];\r\n  listSubid = {\r\n    'sublistid': [],\r\n    'userId': ''\r\n  };\r\n  listDetails = [];\r\n  config = {\r\n    displayKey:\"description\",\r\n    search:true,\r\n    height: 'auto',\r\n    placeholder:'Select',\r\n    customComparator: ()=>{},\r\n    limitTo: this.listDetails.length,\r\n    moreText: 'more',\r\n    noResultsFound: 'No results found!',\r\n    searchPlaceholder:'Search',\r\n    searchOnKey: 'name'\r\n  }\r\n\r\n  dateerror = false;\r\n\r\n  userModel = {\r\n    'username': '',\r\n    'firstName': '',\r\n    'email': '',\r\n    'dob': '',\r\n    'password': '',\r\n    'lastName': '',\r\n    'genderRadios': '',\r\n    'address': '',\r\n    'phone': '',\r\n    'textValue': '',\r\n    'dateValue': '',\r\n    'numberValue': '',\r\n    'floatValue': '',\r\n    'toggleValue': '',\r\n    'fields': '',\r\n    'id': '',\r\n    'address1':'',\r\n    'city':'',\r\n    'state':'',\r\n    'postcode':'',\r\n    'country':'',\r\n    'membership': '',\r\n    'roleId':'',\r\n    'subId': '',\r\n    'changeMembership': false,\r\n    'newpaymentRadios': false,\r\n    'paymentRadios': '',\r\n    'receiptNumber': ''\r\n  };\r\n  usersModel_extra = {};\r\n  members;\r\n  subscriberListName = '';\r\n  onlyUserEdit = false;\r\n  transactionForm: FormGroup;\r\n  transactionData = [];\r\n  paymentRadiosOld: any;\r\n\r\n  constructor(public authenticationService: AuthenticationService, public statisticsService: StatisticsService, public membershipService: MembershipService, public addFieldsService: AddFieldsService, private snotifyService: SnotifyService, public loyaltyPointService: loyaltypointService, public userservice: UserService, private router: Router, private route: ActivatedRoute, public listsservice: ListsService) {\r\n    // this.regularForm = new FormGroup({\r\n    //   'username': new FormControl(null, [Validators.required]),\r\n    //   'firstName': new FormControl(null, [Validators.required]),\r\n    //   'email': new FormControl(null, [Validators.required, Validators.email]),\r\n    //   'dob': new FormControl(null, [Validators.required]),\r\n    //   'password': new FormControl(null, [Validators.required, Validators.minLength(4), Validators.maxLength(24)]),\r\n    //   'lastName': new FormControl(null, [Validators.required]),\r\n    //   'genderRadios': new FormControl(null, [Validators.required]),\r\n    //   'address': new FormControl(null, [Validators.required]),\r\n    //   'phone': new FormControl(null, [Validators.required]),\r\n    //   'textValue': new FormControl(null, null),\r\n    //   'dateValue': new FormControl(null, null),\r\n    //   'numberValue': new FormControl(null, null),\r\n    //   'floatValue': new FormControl(null, null),\r\n    //   'toggleValue': new FormControl(null, null),\r\n    //   //'sublist': new FormControl(null, null),\r\n    //     // 'password': new FormControl(null, [Validators.required, Validators.minLength(4), Validators.maxLength(24)]),\r\n    //     // 'textArea': new FormControl(null, [Validators.required]),\r\n    //     // 'radioOption': new FormControl('Option one is this')\r\n    // }, {updateOn: 'blur'});\r\n    this.route.queryParams.subscribe(params => {\r\n      this.userId = window.atob(params['id']);\r\n      if(params['source'] == 'user'){\r\n        this.onlyUserEdit = true;\r\n      }\r\n      else{\r\n        this.onlyUserEdit = false;\r\n      }\r\n    });\r\n    this.userId = ((this.userId * 12345) / 5362);\r\n    //encodeURIComponent(window.btoa(id+\"$userEdit\"))\r\n    this.addFieldsService.getFieldsByTable('users').then(data=>{\r\n      if(data['status'] == 'success'){\r\n        //addFields\r\n        for(let i=0; i< data['fields'].length; i++){\r\n          let fields = JSON.parse(data['fields'][i]['fields']);\r\n            this.addFields.push({\r\n              'label': fields['label'],\r\n              'datatype':fields['datatype'],\r\n              'length':fields['length'],\r\n              'mandatory':fields['mandatory'],\r\n              'validation':fields['validation'],\r\n              'validationMsg':fields['validationMsg'],\r\n              'fieldType':fields['fieldType'],\r\n              'fieldName':fields['fieldName'],\r\n              'id':data['fields'][i]['id']\r\n            });\r\n        }\r\n        this.extraFields = true;\r\n      }\r\n      else{\r\n        this.extraFields = false;\r\n      }\r\n    });\r\n    this.loadData();    \r\n  }\r\n\r\n  loadData(){\r\n    this.membershipService.getMembership().then(data => {\r\n      if(data['membership']){\r\n        this.members = data['membership'];\r\n      }\r\n    },\r\n    error => {\r\n    });\r\n\r\n    this.userservice.getUserDetails(this.userId).then(data => {\r\n      if(data['status'] == 'success'){\r\n        this.details = data['details'];\r\n        this.listSubid.sublistid = data['details']['listId'];\r\n        this.subscriberListName = data['details']['listName']\r\n      }\r\n      else{\r\n        this.details = '';\r\n        this.listSubid.sublistid = [];\r\n      }\r\n    });\r\n\r\n    this.listsservice.getlist(new Date().getTime()).then(data => {\r\n      if(data['status'] == 'success'){\r\n        for(let i = 0; i < data['lists'].length; i++){\r\n          this.listDetails = [...this.listDetails, {id: parseInt(data['lists'][i].id), description: data['lists'][i].name}];\r\n        }\r\n      }\r\n    });\r\n\r\n    this.userservice.getTimeLine(this.userId).then(data => {\r\n      if(data['status'] == 'success'){\r\n        this.timeLines = data['timeLine'];\r\n      }\r\n      else{\r\n        this.timeLines = '';\r\n      }\r\n    });\r\n\r\n    this.userservice.getTransactionData(this.userId, new Date().getTime()).then(data => {\r\n      if(data['status'] == 'success'){\r\n        this.transactionData = data['data'];\r\n      }\r\n      else{\r\n        this.transactionData = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  selected(event){\r\n    //console.log('event - '+ JSON.stringify(event));\r\n    this.listSubid.sublistid = event;\r\n    //this.selectedMemType = event;\r\n  }\r\n\r\n  subscribeUsers(){\r\n    this.listSubid.userId = this.userId;\r\n    this.userservice.subscribeUserThroughEdit(this.listSubid).then(data => {\r\n      if(data['status'] == 'success'){\r\n        this.snotifyService.success('User Subscription Was Successfully', '', this.getConfig());\r\n        this.userservice.getUserSubscription(this.userId, new Date().getTime()).then(data=>{\r\n          if(data['status'] == 'success'){\r\n            this.listSub = data['rows'];\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  fieldValueChange(id, value, fieldName){\r\n    if(this.FieldsValue.length > 0){\r\n      let checkValue = false;\r\n      for(let i = 0; i < this.FieldsValue.length; i++){\r\n        if(this.FieldsValue[i].id == id){\r\n          this.FieldsValue[i].value = value;\r\n          this.FieldsValue[i].fieldName = fieldName;\r\n          checkValue = true;\r\n        }\r\n      }\r\n      if(!checkValue){\r\n        this.FieldsValue.push({\"id\": id, \"value\": value, \"fieldName\": fieldName});\r\n      }\r\n    }\r\n    else{\r\n      this.FieldsValue.push({\"id\": id, \"value\": value, \"fieldName\": fieldName});\r\n    }\r\n    console.log('val -' +this.FieldsValue);\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.transactionForm = new FormGroup({\r\n      'paymentDetails': new FormControl(null, null),\r\n      'uid': new FormControl(null, null),\r\n      'membership_id': new FormControl(null, null),\r\n      'amount': new FormControl(null, [Validators.required])\r\n    });\r\n    this.userservice.getUser(this.userId, new Date().getTime()).then(data => {\r\n      if(data['status'] == 'success'){\r\n        this.user = data['user'][0];\r\n        this.userModel.username = data['user'][0].username;\r\n        this.userModel.firstName = data['user'][0].firstName;\r\n        this.userModel.email = data['user'][0].email;\r\n        this.userModel.dob = data['user'][0].dob;\r\n        this.userModel.password = data['user'][0].password;\r\n        this.userModel.lastName = data['user'][0].lastName;\r\n        this.userModel.address = data['user'][0].address;\r\n        this.userModel.subId = data['user'][0].subId;\r\n        if(data['user'][0].gender == 'F' || data['user'][0].gender == 'Female'){\r\n          this.userModel.genderRadios = 'Female';\r\n        }\r\n        else{\r\n          this.userModel.genderRadios = 'Male';\r\n        }\r\n        if(data['user'][0].paid == 'paid'){\r\n          this.userModel.paymentRadios = 'y';\r\n          this.paymentRadiosOld = 'y';\r\n          this.userModel.receiptNumber = data['user'][0].receiptNumber;\r\n        }\r\n        else{\r\n          this.userModel.paymentRadios = 'n';\r\n          this.paymentRadiosOld = 'y';\r\n        }\r\n\r\n        this.userModel.phone = data['user'][0].phone;\r\n        this.userModel.city = data['user'][0].city;\r\n        this.userModel.state = data['user'][0].state;\r\n        this.userModel.postcode = data['user'][0].postcode;\r\n        this.userModel.country = data['user'][0].country;\r\n        this.gender = data['user'][0].gender;\r\n        if(this.user.listName != ''){\r\n          this.listSubscription = true;\r\n        }\r\n        if(data['user'][0].profileImage != undefined && data['user'][0].profileImage != null && data['user'][0].profileImage != ''){\r\n          this.userImage = data['user'][0].profileImage;\r\n        }\r\n        else{\r\n          this.userImage = 'assets/img/default_image.png';\r\n        }\r\n        this.userModel.membership = data['user'][0].membership_id;\r\n        this.userModel.roleId = data['user'][0].role_id;\r\n        this.transactionForm.controls['membership_id'].setValue(data['user'][0].membership_id);\r\n        this.transactionForm.controls['uid'].setValue(this.userId);\r\n      }\r\n    });\r\n    this.userservice.getUserSubscription(this.userId, new Date().getTime()).then(data=>{\r\n      if(data['status'] == 'success'){\r\n        console.log(data);\r\n        let allLists = [];\r\n        this.listSub = data['rows'];\r\n        this.listSubCount = data['rows'].length;\r\n        for(let i=0; i<this.listSubCount; i++){\r\n          allLists.push(this.listSub[i]['list']);\r\n        }\r\n        this.listSubid.sublistid = allLists;\r\n      }\r\n      else{\r\n        this.listSub = '';\r\n        this.listSubCount = 0;\r\n        this.listSubid.sublistid = [];\r\n      }\r\n    });\r\n    this.loyaltyPointService.getUserLoyaltyPoints(this.userId).then(data=>{\r\n      if(data['status'] == 'success'){\r\n        this.loyaltyPointDisplay = data['loyalPoints'];\r\n      }\r\n    });\r\n    this.statisticsService.getStatsByUser(this.userId, new Date().getTime()).then(data=>{\r\n      if(data['status'] == 'success'){\r\n        this.newsLetterDetails = data['reports'];\r\n      }\r\n    });\r\n    this.loyaltyPointEarned = [];\r\n  }\r\n\r\n  onTransactionFormSubmit(formValue){\r\n    let userData = this.transactionForm.value;\r\n    userData.status = 'success';\r\n    this.authenticationService.addtransaction(userData).then(data => {\r\n      this.snotifyService.success('Payment details was added successfully.', '', this.getConfig());\r\n      this.addTransaction = false;\r\n      this.userservice.getTransactionData(this.userId, new Date().getTime()).then(data => {\r\n        if(data['status'] == 'success'){\r\n          this.transactionData = data['data'];\r\n        }\r\n        else{\r\n          this.transactionData = [];\r\n        }\r\n      });\r\n    });\r\n  }\r\n  changeMembership = false;\r\n  setMembership(event){\r\n    if(event.target.value != ''){\r\n      if(this.userModel.membership == event.target.value){\r\n        this.changeMembership = true;\r\n      }\r\n      else{\r\n        this.changeMembership = false;\r\n      }\r\n    }\r\n    else{\r\n      this.changeMembership = false;\r\n    }\r\n  }\r\n\r\n  onReactiveFormSubmit(){\r\n    if(this.ageCheck()){\r\n      this.dateerror = false;\r\n      this.submitted = true;\r\n      let editAddress = '';\r\n      if(this.newaddress !== '' ){\r\n        this.userModel.address = this.newaddress;\r\n      }\r\n      this.userModel.fields = JSON.stringify(this.FieldsValue);\r\n      this.userModel.id = this.userId;\r\n      this.userModel.changeMembership = this.changeMembership;\r\n      this.userModel.newpaymentRadios = (this.paymentRadiosOld != this.userModel.paymentRadios) ? true : false;\r\n      //console.log(this.regularForm.controls['genderRadios'].value);\r\n      // let userDetail = {\r\n      //   username: this.regularForm.controls['username'].value,\r\n      //   password: this.regularForm.controls['password'].value,\r\n      //   firstName: this.regularForm.controls['firstName'].value,\r\n      //   lastName: this.regularForm.controls['lastName'].value,\r\n      //   email: this.regularForm.controls['email'].value,\r\n      //   dob: this.regularForm.controls['dob'].value,\r\n      //   genderRadios: this.regularForm.controls['genderRadios'].value,\r\n      //   address: editAddress,\r\n      //   phone: this.regularForm.controls['phone'].value,\r\n      //   profileImage: this.user['profileImage'].split('/').pop().split('#')[0].split('?')[0],\r\n      //   id: this.userId,\r\n      //   fields: this.FieldsValue\r\n      // }\r\n      this.userservice.editUser(this.userModel).then(data => {\r\n        if(data['status'] == 'success'){\r\n          this.snotifyService.success('User Details Updated Successfully', '', this.getConfig());\r\n          this.submitted = false;\r\n          this.userservice.getUser(this.userId, new Date().getTime()).then(data => {\r\n            if(data['status'] == 'success'){\r\n              this.user = data['user'][0];\r\n              // this.regularForm.controls['username'].setValue(data['user'][0].username);\r\n              // this.regularForm.controls['firstName'].setValue(data['user'][0].firstName);\r\n              // this.regularForm.controls['email'].setValue(data['user'][0].email);\r\n              // this.regularForm.controls['dob'].setValue(data['user'][0].dob);\r\n              // this.regularForm.controls['password'].setValue(data['user'][0].password);\r\n              // this.regularForm.controls['lastName'].setValue(data['user'][0].lastName);\r\n              // this.regularForm.controls['address'].setValue(data['user'][0].address);\r\n              // this.regularForm.controls['genderRadios'].setValue(data['user'][0].gender);\r\n              // this.regularForm.controls['phone'].setValue(data['user'][0].phone);\r\n              // this.gender = data['user'][0].gender;\r\n              this.loadData();\r\n              if(this.user.listName != ''){\r\n                this.listSubscription = true;\r\n              }\r\n\r\n            }\r\n          });\r\n        }\r\n        else{\r\n          this.snotifyService.success('Error While Updating User Details. Please Try again.', '', this.getConfig());\r\n          this.submitted = false;\r\n        }\r\n      });\r\n    }\r\n    else{\r\n      this.submitted = false;\r\n      this.dateerror = true;\r\n      this.userModel.dob = '';\r\n    }\r\n  }\r\n\r\n  cancelEdit(id){\r\n    this.edituserForm.reset();\r\n    if(this.onlyUserEdit){\r\n      this.router.navigate(['/users/profile']);\r\n    }\r\n    else{\r\n      this.router.navigate(['/users/users']);\r\n    }\r\n\r\n    /*let val = ((id*5362)/12345);\r\n    this.router.navigate(['/users/user'],{queryParams:{id:window.btoa(val.toString())}});*/\r\n  }\r\n\r\n  public handleAddressChange(address){\r\n    // Do some stuff\r\n    this.newaddress = address.formatted_address;\r\n    if(this.getComponentByType(address,\"street_number\") != ''){\r\n      this.userModel.address1 = this.getComponentByType(address,\"street_number\") +', ';\r\n    }\r\n    if(this.getComponentByType(address,\"route\") != ''){\r\n      this.userModel.address1 += this.getComponentByType(address,\"route\");\r\n    }\r\n    this.userModel.city = this.getComponentByType(address,\"locality\");\r\n    this.userModel.state = this.getComponentByType(address,\"administrative_area_level_1\");\r\n    this.userModel.postcode = this.getComponentByType(address,\"postal_code\");\r\n    this.userModel.country = this.getComponentByType(address,\"country\");\r\n  }\r\n  public getComponentByType(address, type) {\r\n    if(!type)\r\n        return null;\r\n\r\n    if (!address || !address.address_components || address.address_components.length == 0)\r\n        return null;\r\n\r\n    type = type.toLowerCase();\r\n\r\n    for (let comp of address.address_components) {\r\n        if(!comp.types || comp.types.length == 0)\r\n            continue;\r\n\r\n        if(comp.types.findIndex(x => x.toLowerCase() == type) > -1)\r\n            return comp['long_name'];\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  unsubscribe(event, id, subscriptionId){\r\n    console.log(event);\r\n    let SubscriptionDetail = {\r\n      id:this.userId,\r\n      listId: subscriptionId\r\n    }\r\n    if(event){\r\n      this.userservice.addSubscriptionUser(SubscriptionDetail).then(data => {\r\n        if(data['status'] == 'success'){\r\n          this.snotifyService.success('User Subscription Was Successfully', '', this.getConfig());\r\n          this.userservice.getUserSubscription(this.userId, new Date().getTime()).then(data=>{\r\n            if(data['status'] == 'success'){\r\n              this.listSub = data['rows'];\r\n            }\r\n          });\r\n          this.statisticsService.getStatsByUser(this.userId, new Date().getTime()).then(data=>{\r\n            if(data['status'] == 'success'){\r\n              this.newsLetterDetails = data['reports'];\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n    else{\r\n      this.userservice.unSubscriptionUser(SubscriptionDetail).then(data => {\r\n        if(data['status'] == 'success'){\r\n          this.snotifyService.success('User Was Successfully Unsubscribed', '', this.getConfig());\r\n          this.userservice.getUserSubscription(this.userId, new Date().getTime()).then(data=>{\r\n            if(data['status'] == 'success'){\r\n              this.listSub = data['rows'];\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  ageCheck(){\r\n    let today = new Date();\r\n    let birthDate = new Date(this.userModel.dob);\r\n    let age = today.getFullYear() - birthDate.getFullYear();\r\n    let m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age--;\r\n    }\r\n    if(age < 18){\r\n      return false;\r\n    }\r\n    else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n  isNumberKey(evt) {\r\n    let charCode = (evt.which) ? evt.which : evt.keyCode;\r\n    if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)){\r\n        return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  getConfig(): SnotifyToastConfig {\r\n    this.snotifyService.setDefaults({\r\n        global: {\r\n            newOnTop: this.newTop,\r\n            maxAtPosition: this.blockMax,\r\n            maxOnScreen: this.dockMax,\r\n        }\r\n    });\r\n    return {\r\n        bodyMaxLength: this.bodyMaxLength,\r\n        titleMaxLength: this.titleMaxLength,\r\n        backdrop: this.backdrop,\r\n        position: this.position,\r\n        timeout: this.timeout,\r\n        showProgressBar: this.progressBar,\r\n        closeOnClick: this.closeClick,\r\n        pauseOnHover: this.pauseHover\r\n    };\r\n   }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n        <div class=\\\"content-header\\\">Move Users</div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-12 col-md-6 col-md-6\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"card-block\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Move Users From</label>\\r\\n              <select class=\\\"form-control\\\" [(ngModel)]=\\\"val\\\" (change)=\\\"removeToList($event.target.value, $event)\\\">\\r\\n                  <option selected value=\\\"\\\">Select List</option>\\r\\n                  <option *ngFor=\\\"let list of listDetails\\\" value=\\\"{{list.id}}\\\" [disabled]=\\\"selectedToList == list.id\\\">{{list.name}}</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"card\\\">\\r\\n                  <div class=\\\"card-header\\\">\\r\\n                    <div class=\\\"card-title-wrap bar-success\\\">\\r\\n                      <h4 class=\\\"card-title\\\">Users in {{moveFrom}}</h4>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                      <div class=\\\"card-block\\\">\\r\\n                        <table class=\\\"table table-responsive-md\\\">\\r\\n                          <tbody>\\r\\n                            <tr *ngFor=\\\"let user of users\\\">\\r\\n                              <td>\\r\\n                                <div class=\\\"custom-control custom-checkbox m-0\\\">\\r\\n                                    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"user{{user.id}}\\\" value=\\\"{{user.id}}\\\" (change)=\\\"chooseUser($event.target.value, $event.target.checked, $event.target)\\\">\\r\\n                                    <label class=\\\"custom-control-label\\\" for=\\\"user{{user.id}}\\\"></label>\\r\\n                                </div>\\r\\n                              </td>\\r\\n                              <td>\\r\\n                                {{user.FirstName}} {{user.LastName}}, {{user.email}}\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                          </tbody>\\r\\n                        </table>\\r\\n                      </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-success btn-raised  mr-1\\\" (click)=\\\"moveUser()\\\" [disabled]=\\\"(selectedToList == '' ||  submitted || selectedFromList == '' || moveSelectedUser == '')\\\">Move User <i *ngIf=\\\"submitted\\\" class=\\\"fas fa-spinner fa fa-spin\\\"></i></button>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-danger btn-raised  mr-1\\\" (click)=\\\"cancelReset()\\\">Reset</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-12 col-md-6 \\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"card-block\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Move Users To</label>\\r\\n              <select class=\\\"form-control\\\" [(ngModel)]=\\\"val1\\\" (change)=\\\"removeFromList($event.target.value, $event)\\\">\\r\\n                  <option selected value=\\\"\\\">Select List</option>\\r\\n                  <option *ngFor=\\\"let list of listDetails\\\" value=\\\"{{list.id}}\\\" [disabled]=\\\"selectedFromList == list.id\\\">{{list.name}}</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"card\\\">\\r\\n                  <div class=\\\"card-header\\\">\\r\\n                    <div class=\\\"card-title-wrap bar-success\\\">\\r\\n                      <h4 class=\\\"card-title\\\">Users in {{moveTo}}</h4>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                      <div class=\\\"card-block\\\">\\r\\n                          <ul class=\\\"list-group\\\">\\r\\n                              <li class=\\\"list-group-item\\\" *ngFor=\\\"let user of fromUsers\\\">{{user.FirstName}} {{user.LastName}}, {{user.email}}</li>\\r\\n                          </ul>\\r\\n                      </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL21vdmUtdXNlcnMvbW92ZS11c2Vycy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { SnotifyService, SnotifyPosition, SnotifyToastConfig } from 'ng-snotify';\r\n\r\nimport { UserService } from '../../shared/data/user.service';\r\nimport { ListsService } from '../../shared/data/lists.service';\r\n\r\n@Component({\r\n  selector: 'app-move-users',\r\n  templateUrl: './move-users.component.html',\r\n  styleUrls: ['./move-users.component.scss']\r\n})\r\nexport class MoveUsersComponent implements OnInit {\r\n\r\n  constructor(public userservice: UserService, private snotifyService: SnotifyService, public listsservice: ListsService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  listDetails;\r\n  moveFrom;\r\n  moveTo;\r\n  selectedToList = '';\r\n  selectedFromList = '';\r\n  users = [];\r\n  fromUsers = [];\r\n  moveSelectedUser = [];\r\n  submitted = false;\r\n\r\n  timeout = 3000;\r\n  position: SnotifyPosition = SnotifyPosition.centerTop;\r\n  progressBar = true;\r\n  closeClick = true;\r\n  newTop = true;\r\n  backdrop = -1;\r\n  dockMax = 8;\r\n  blockMax = 6;\r\n  pauseHover = true;\r\n  titleMaxLength = 15;\r\n  bodyMaxLength = 80;\r\n  val = '';\r\n  val1 = '';\r\n\r\n  ngOnInit() {\r\n    this.listsservice.getlist(new Date().getTime()).then(data => {\r\n        console.log(data['lists']);\r\n        this.listDetails = data['lists'];\r\n    },\r\n    error => {\r\n    });\r\n    // this.userservice.getUsersSubscribtion().then(data => {\r\n    //     console.log(data['users']);\r\n    //     this.users = data['users'];\r\n    // },\r\n    // error => {\r\n    // });\r\n  }\r\n\r\n  removeToList(value, event){\r\n    this.selectedFromList = value;\r\n    console.log(this.selectedFromList);\r\n    this.moveFrom = event.target.options[event.target.options.selectedIndex].text;\r\n    if(value != ''){\r\n      this.userservice.getUsersSubscriptionList(value, new Date().getTime()).then(data => {\r\n          console.log(data['users']);\r\n          if(data['status'] == \"success\"){\r\n            this.users = data['users'];\r\n          }          \r\n          else{\r\n            this.users = [];\r\n          }\r\n      });\r\n    }\r\n    else{\r\n      this.users = [];\r\n      // this.userservice.getUsersSubscribtion().then(data => {\r\n      //     console.log(data['users']);\r\n      //     this.users = data['users'];\r\n      // },\r\n      // error => {\r\n      // });\r\n    }\r\n  }\r\n\r\n  removeFromList(value, event){\r\n    this.selectedToList = value;\r\n    this.moveTo = event.target.options[event.target.options.selectedIndex].text;\r\n    if(value != ''){\r\n      this.userservice.getUsersSubscriptionList(value, new Date().getTime()).then(data => {\r\n          console.log(data['users']);\r\n          if(data['status'] == \"success\"){\r\n            this.fromUsers = data['users'];\r\n          }          \r\n          else{\r\n            this.fromUsers = [];\r\n          }\r\n      });\r\n    }\r\n    else{\r\n      this.fromUsers = [];\r\n      // this.userservice.getUsersSubscribtion().then(data => {\r\n      //     console.log(data['users']);\r\n      //     this.fromUsers = data['users'];\r\n      // },\r\n      // error => {\r\n      // });\r\n    }\r\n  }\r\n\r\n  moveUser(){\r\n    this.submitted = true;\r\n    if(this.moveSelectedUser != []){\r\n      this.userservice.moveSelectedUser(this.selectedToList, this.selectedFromList, this.moveSelectedUser).then(data => {\r\n          if(data['status'] == 'success'){\r\n              this.snotifyService.success('Users moved to selected list Successfully.', '', this.getConfig());\r\n              this.users = [];\r\n              this.moveSelectedUser = [];\r\n              this.fromUsers = [];\r\n              this.val = '';\r\n              this.val1 = '';\r\n              this.selectedToList = '';\r\n              this.selectedFromList = '';\r\n              this.moveFrom = '';\r\n              this.moveTo = '';\r\n              this.submitted = false;\r\n          }\r\n      },\r\n      error => {\r\n      });\r\n    }\r\n    else{\r\n      this.userservice.moveUser(this.selectedToList, this.selectedFromList).then(data => {\r\n          if(data['status'] == 'success'){\r\n              this.snotifyService.success('Users moved to selected list Successfully.', '', this.getConfig());\r\n              this.users = [];\r\n              this.moveSelectedUser = [];\r\n              this.fromUsers = [];\r\n              this.submitted = false;\r\n          }\r\n      },\r\n      error => {\r\n      });\r\n    }\r\n  }\r\n\r\n  chooseUser(uid,checked,val){\r\n    //console.log(event);\r\n    if(!checked){\r\n      let arr = this.moveSelectedUser;\r\n      for( var i = 0; i < this.moveSelectedUser.length; i++){\r\n         if ( this.moveSelectedUser[i] == uid) {\r\n           arr.splice(i, 1);\r\n         }\r\n      }\r\n    }\r\n    else{\r\n      let userExsits = false;\r\n      if(this.fromUsers.length > 0){\r\n        for(var k=0; k<this.fromUsers.length; k++){\r\n          if(uid == this.fromUsers[k].id){\r\n            val.checked = false;\r\n            this.snotifyService.success('Users already exsits in list, try other user.', '', this.getConfig());\r\n            userExsits = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if(!userExsits){\r\n        this.moveSelectedUser.push(uid);\r\n      }\r\n    }\r\n    //console.log(arr);\r\n    console.log(this.moveSelectedUser);\r\n  }\r\n\r\n  getConfig(): SnotifyToastConfig {\r\n    this.snotifyService.setDefaults({\r\n        global: {\r\n            newOnTop: this.newTop,\r\n            maxAtPosition: this.blockMax,\r\n            maxOnScreen: this.dockMax,\r\n        }\r\n    });\r\n    return {\r\n        bodyMaxLength: this.bodyMaxLength,\r\n        titleMaxLength: this.titleMaxLength,\r\n        backdrop: this.backdrop,\r\n        position: this.position,\r\n        timeout: this.timeout,\r\n        showProgressBar: this.progressBar,\r\n        closeOnClick: this.closeClick,\r\n        pauseOnHover: this.pauseHover\r\n    };\r\n  }\r\n\r\n  cancelReset(){\r\n    this.users = [];\r\n    this.moveSelectedUser = [];\r\n    this.fromUsers = [];\r\n    this.val = '';\r\n    this.val1 = '';\r\n    this.selectedToList = '';\r\n    this.selectedFromList = '';\r\n    this.moveFrom = '';\r\n    this.moveTo = '';\r\n    this.submitted = false;\r\n  }\r\n}\r\n","module.exports = \"  <section id=\\\"user-area\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-12\\\">\\r\\n        <p class=\\\"bg-danger text-highlight white text-center font-medium-1 text-bold-600\\\" *ngIf=\\\"['142','143','144','153'].indexOf(user?.membership_id) > -1\\\"><a class=\\\"text-uppercase\\\" (click)=\\\"renew()\\\">Please Renew Your Account By Clicking Here</a>\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-xl-3 col-lg-12\\\">\\r\\n        <div class=\\\"card mb-4\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n            <div class=\\\"card-title-wrap bar-primary\\\">\\r\\n              <div class=\\\"card-title\\\">Personal Information</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"card-block\\\">\\r\\n              <div class=\\\"align-self-center halfway-fab text-center\\\">\\r\\n                <a class=\\\"profile-image\\\">\\r\\n                  <img src=\\\"{{userImage}}\\\" class=\\\"rounded-circle img-border gradient-summer width-100\\\" alt=\\\"Card image\\\">\\r\\n                </a>\\r\\n              </div>\\r\\n              <div class=\\\"text-center\\\">\\r\\n                <span class=\\\"font-medium-2 text-uppercase\\\">{{ user?.name }}</span>\\r\\n                <a class=\\\"success p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"edituser(user?.id)\\\">\\r\\n                  <i class=\\\"fas fa-pencil-alt font-medium-3 mr-2\\\"></i>\\r\\n                </a>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-12 col-sm-6\\\">\\r\\n                  <ul class=\\\"no-list-style pl-0 text-center\\\">\\r\\n                    <li class=\\\"mb-2\\\">\\r\\n                      <span class=\\\"text-bold-500 primary\\\"><a><i class=\\\"icon-present font-small-3\\\"></i> Birthday:</a></span>\\r\\n                      <span class=\\\"display-block overflow-hidden\\\">{{user?.dob}}</span>\\r\\n                    </li>\\r\\n                    <li class=\\\"mb-2\\\">\\r\\n                      <span class=\\\"text-bold-500 primary\\\"><a><i class=\\\"ft-globe font-small-3\\\"></i> Lives in:</a></span>\\r\\n                      <span class=\\\"display-block overflow-hidden\\\">{{user?.address}}</span>\\r\\n                    </li>\\r\\n                    <li class=\\\"mb-2\\\">\\r\\n                      <span class=\\\"text-bold-500 primary\\\"><a><i class=\\\"ft-user font-small-3\\\"></i> Gender:</a></span>\\r\\n                      <span class=\\\"display-block overflow-hidden\\\">{{user?.gender}}</span>\\r\\n                    </li>\\r\\n                    <li class=\\\"mb-2\\\">\\r\\n                      <span class=\\\"text-bold-500 primary\\\"><a><i class=\\\"ft-mail font-small-3\\\"></i> Email:</a></span>\\r\\n                      <a class=\\\"display-block overflow-hidden\\\">{{user?.email}}</a>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n                </div>\\r\\n                <div class=\\\"col-12 col-sm-6\\\">\\r\\n                  <ul class=\\\"no-list-style pl-0 text-center\\\">\\r\\n                    <li class=\\\"mb-2\\\">\\r\\n                      <span class=\\\"text-bold-500 primary\\\"><a><i class=\\\"ft-smartphone font-small-3\\\"></i> Phone Number:</a></span>\\r\\n                      <span class=\\\"display-block overflow-hidden\\\">{{user?.phone}}</span>\\r\\n                    </li>\\r\\n                    <li class=\\\"mb-2\\\">\\r\\n                      <span class=\\\"text-bold-500 primary\\\"><a><i class=\\\"ft-monitor font-small-3\\\"></i> List Subscription:</a></span>\\r\\n                      <a class=\\\"display-block overflow-hidden\\\">{{user?.listName}}</a>\\r\\n                    </li>\\r\\n                    <li class=\\\"mb-2\\\">\\r\\n                      <span class=\\\"text-bold-500 primary\\\"><a><i class=\\\"ft-briefcase font-small-3\\\"></i> Membership Tire:</a></span>\\r\\n                      <span class=\\\"display-block overflow-hidden\\\">{{user?.membership}}</span>\\r\\n                    </li>\\r\\n                    <li class=\\\"mb-2\\\">\\r\\n                      <span class=\\\"text-bold-500 primary\\\"><a><i class=\\\"ft-book font-small-3\\\"></i> Joined:</a></span>\\r\\n                      <span class=\\\"display-block overflow-hidden\\\">{{user?.joined | date}}</span>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!--<div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <div class=\\\"card-title-wrap bar-danger\\\">\\r\\n                        <div class=\\\"card-title\\\">Hobbies</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"card-block\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-12\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <span class=\\\"col-6 col-md-4 col-xl-6 mt-2 float-left text-center\\\" *ngFor=\\\"let hobbie of hobbies\\\"> <i class=\\\"danger font-medium-3\\\" [ngClass]=\\\"hobbie.icon\\\"></i> <div class=\\\"mt-1\\\">{{hobbie.name}}</div></span>\\r\\n                                    <span class=\\\"col-6 col-md-4 col-xl-6 mt-2 float-left text-center\\\"> <i class=\\\"icon-speedometer danger font-medium-3\\\"></i> <div class=\\\"mt-1\\\">Driving</div></span>\\r\\n                                    <span class=\\\"col-6 col-md-4 col-xl-6 mt-2 float-left text-center\\\"> <i class=\\\"icon-camera danger font-medium-3\\\"></i> <div class=\\\"mt-1\\\">Photography</div></span>\\r\\n                                    <span class=\\\"col-6 col-md-4 col-xl-6 mt-2 float-left text-center\\\"> <i class=\\\"icon-game-controller danger font-medium-3\\\"></i> <div class=\\\"mt-1\\\">Gaming</div></span>\\r\\n                                    <span class=\\\"col-6 col-md-4 col-xl-6 mt-2 float-left text-center\\\"> <i class=\\\"icon-music-tone-alt danger font-medium-3\\\"></i> <div class=\\\"mt-1\\\">Music</div></span>\\r\\n                                    <span class=\\\"col-6 col-md-4 col-xl-6 mt-2 float-left text-center\\\"> <i class=\\\"ft-monitor danger font-medium-3\\\"></i> <div class=\\\"mt-1\\\">Surfing</div></span>\\r\\n                                    <span class=\\\"col-6 col-md-4 col-xl-6 mt-2 float-left text-center\\\"> <i class=\\\"ft-pie-chart danger font-medium-3\\\"></i> <div class=\\\"mt-1\\\">Foodie</div></span>\\r\\n                                    <span class=\\\"col-6 col-md-4 col-xl-6 mt-2 float-left text-center\\\"> <i class=\\\"ft-tv danger font-medium-3\\\"></i> <div class=\\\"mt-1\\\">TV</div></span>\\r\\n                                    <span class=\\\"col-6 col-md-4 col-xl-6 mt-2 float-left text-center\\\"> <i class=\\\"icon-basket-loaded danger font-medium-3\\\"></i> <div class=\\\"mt-1\\\">Shopping</div></span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>-->\\r\\n      </div>\\r\\n      <div class=\\\"col-xl-9 col-lg-12\\\">\\r\\n        <!--About div starts-->\\r\\n        <div id=\\\"about\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-xl-3 col-lg-6 col-12\\\">\\r\\n              <div class=\\\"card gradient-orange-amber\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                  <div class=\\\"px-3 py-3\\\">\\r\\n                    <div class=\\\"media\\\">\\r\\n                      <div class=\\\"align-center\\\">\\r\\n                        <i class=\\\"icon-users text-white font-large-2 float-left\\\"></i>\\r\\n                      </div>\\r\\n                      <div class=\\\"media-body text-white text-right\\\">\\r\\n                        <h3 class=\\\"text-white\\\">${{details?.price}}</h3>\\r\\n                        <span>{{details?.plans}}</span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-xl-3 col-lg-6 col-12\\\">\\r\\n              <div class=\\\"card gradient-light-blue-cyan\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                  <div class=\\\"px-3 py-3\\\">\\r\\n                    <div class=\\\"media\\\">\\r\\n                      <div class=\\\"align-center\\\">\\r\\n                        <i class=\\\"icon-present text-white font-large-2 float-left\\\"></i>\\r\\n                      </div>\\r\\n                      <div class=\\\"media-body text-white text-right\\\">\\r\\n                        <h3 class=\\\"text-white\\\">{{details?.points}}</h3>\\r\\n                        <span>Loyalty Points</span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-xl-3 col-lg-6 col-12\\\">\\r\\n              <div class=\\\"card gradient-red-pink\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                  <div class=\\\"px-3 py-3\\\">\\r\\n                    <div class=\\\"media\\\">\\r\\n                      <div class=\\\"align-center\\\">\\r\\n                        <i class=\\\"icon-envelope text-white font-large-2 float-left\\\"></i>\\r\\n                      </div>\\r\\n                      <div class=\\\"media-body text-white text-right\\\">\\r\\n                        <h3 class=\\\"text-white\\\">{{details?.newsletterCount}}</h3>\\r\\n                        <span>Newsletters</span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-xl-3 col-lg-6 col-12\\\">\\r\\n              <div class=\\\"card gradient-mint\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                  <div class=\\\"px-3 py-3\\\">\\r\\n                    <div class=\\\"media\\\">\\r\\n                      <div class=\\\"align-center\\\">\\r\\n                        <i class=\\\"icon-envelope-open text-white font-large-2 float-left\\\"></i>\\r\\n                      </div>\\r\\n                      <div class=\\\"media-body text-white text-right\\\">\\r\\n                        <h3 class=\\\"text-white\\\">{{details.newsletterCount}}</h3>\\r\\n                        <span>Latest Newsletter</span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"col-sm-12\\\">\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-header\\\">\\r\\n                                <div class=\\\"card-title-wrap bar-warning\\\">\\r\\n                                    <div class=\\\"card-title\\\">Latest Newsletter - {{details.name}} On {{details.dateTime | date}}</div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"card-body\\\">\\r\\n                                <div class=\\\"card-block\\\">\\r\\n                                    <p>Subject : {{details.subject}}</p>\\r\\n                                    <div class=\\\"card-block newsletter\\\" [innerHTML]=\\\"details.message\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div> -->\\r\\n          </div>\\r\\n        </div>\\r\\n        <!--About div ends-->\\r\\n\\r\\n        <!--User Timeline div starts-->\\r\\n        <div id=\\\"timeline\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header\\\">\\r\\n              <div class=\\\"card-title-wrap bar-primary\\\">\\r\\n                <div class=\\\"card-title\\\">User Timeline</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <div class=\\\"card-block\\\">\\r\\n                <div class=\\\"timeline\\\">\\r\\n                  <div class=\\\"timeline-title badge-pill badge-info d-inline-block px-3 py-1 mb-4 mx-5\\\">Newsletters</div>\\r\\n                  <ul class=\\\"list-unstyled base-timeline activity-timeline\\\">\\r\\n\\r\\n                    <li class=\\\"\\\" *ngFor=\\\"let timeLine of timeLines\\\">\\r\\n                      <div class=\\\"timeline-icon bg-primary\\\" *ngIf=\\\"timeLine.type == 'newsletter'\\\">\\r\\n                        <i class=\\\"fa fa-envelope\\\"></i>\\r\\n                      </div>\\r\\n                      <div class=\\\"act-time\\\" *ngIf=\\\"timeLine.type == 'newsletter'\\\">{{timeLine.dateTime}}</div>\\r\\n                      <div class=\\\"base-timeline-info\\\" *ngIf=\\\"timeLine.type == 'newsletter'\\\">\\r\\n                        <a href=\\\"#\\\" class=\\\"text-uppercase text-primary\\\">{{timeLine.name}}</a>\\r\\n                        <span class=\\\"d-block\\\">{{timeLine.description}}</span>\\r\\n                      </div>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n\\r\\n                  <br>\\r\\n\\r\\n                  <div class=\\\"timeline-title badge-pill badge-info d-inline-block px-3 py-1 mb-4 mx-5\\\">Loyalty Points Redeemed</div>\\r\\n                  <ul class=\\\"list-unstyled base-timeline activity-timeline\\\">\\r\\n\\r\\n                    <li class=\\\"\\\" *ngFor=\\\"let timeLine of timeLines\\\">\\r\\n                      <div class=\\\"timeline-icon bg-primary\\\" *ngIf=\\\"timeLine.type == 'loyalty'\\\">\\r\\n                        <i class=\\\"fa fa-gift\\\"></i>\\r\\n                      </div>\\r\\n                      <div class=\\\"act-time\\\" *ngIf=\\\"timeLine.type == 'loyalty'\\\">{{timeLine.dateTime}}</div>\\r\\n                      <div class=\\\"base-timeline-info\\\" *ngIf=\\\"timeLine.type == 'loyalty'\\\">\\r\\n                        <a href=\\\"#\\\" class=\\\"text-uppercase text-primary\\\">{{timeLine.name}}</a>\\r\\n                        <span class=\\\"d-block\\\">{{timeLine.description}}</span>\\r\\n                      </div>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n\\r\\n                  <!--<br>\\r\\n\\r\\n                                <div class=\\\"timeline-title badge-pill badge-info d-inline-block px-3 py-1 mb-4 mx-5\\\">February 2018</div>\\r\\n                                <ul class=\\\"list-unstyled base-timeline activity-timeline\\\">\\r\\n\\r\\n                                    <li class=\\\"\\\">\\r\\n                                        <div class=\\\"timeline-icon bg-purple\\\">\\r\\n                                            <i class=\\\"fa fa-tasks\\\"></i>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"act-time\\\">15 February</div>\\r\\n                                        <div class=\\\"base-timeline-info\\\">\\r\\n                                            <a href=\\\"#\\\" class=\\\"text-uppercase text-purple\\\">Task Added</a>\\r\\n                                            <span class=\\\"d-block\\\">You have added task #06 Successfully to the project �Convex�</span>\\r\\n                                        </div>\\r\\n                                        <small class=\\\"text-muted\\\">\\r\\n                                            1 month ago\\r\\n                                        </small>\\r\\n                                    </li>\\r\\n                                    <li class=\\\"\\\">\\r\\n                                        <div class=\\\"timeline-icon bg-danger\\\">\\r\\n                                            <i class=\\\"fa fa-calendar-o\\\"></i>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"act-time\\\">06 February</div>\\r\\n                                        <div class=\\\"base-timeline-info\\\">\\r\\n                                            <a href=\\\"#\\\" class=\\\"text-uppercase text-danger\\\">Event Created</a>\\r\\n                                            <span class=\\\"d-block\\\">Final deal with Geekslabs Company is done and added to the �New deal� list</span>\\r\\n                                        </div>\\r\\n                                        <small class=\\\"text-muted\\\">\\r\\n                                            1 month ago\\r\\n                                        </small>\\r\\n                                    </li>\\r\\n                                </ul>\\r\\n                                <br> -->\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!--User Timeline div ends-->\\r\\n      </div>\\r\\n    </div>\\r\\n  </section>\"","module.exports = \".newsletter {\\n  width: 100%;\\n  overflow: auto;\\n  border: 1px solid; }\\n\\n.media-body.text-white span {\\n  white-space: nowrap !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlcnMvcHJvZmlsZS9DOlxcVXNlcnNcXE1SVDIwXFxEZXNrdG9wXFxVTVxcdXNlcm1hbmFnZW1lbnQvc3JjXFxhcHBcXHVzZXJzXFxwcm9maWxlXFxwcm9maWxlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBVztFQUNYLGVBQWM7RUFDZCxrQkFBaUIsRUFDbEI7O0FBQ0Q7RUFDSSwrQkFBOEIsRUFDakMiLCJmaWxlIjoic3JjL2FwcC91c2Vycy9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmV3c2xldHRlcntcclxuICB3aWR0aDogMTAwJTtcclxuICBvdmVyZmxvdzogYXV0bztcclxuICBib3JkZXI6IDFweCBzb2xpZDtcclxufVxyXG4ubWVkaWEtYm9keS50ZXh0LXdoaXRlIHNwYW4ge1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcCAhaW1wb3J0YW50O1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../shared/data/user.service';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  userId = '';\r\n  user;\r\n  details;\r\n  timeLines;\r\n  hobbies;\r\n  userImage = '';\r\n\r\n  constructor(public userService: UserService, private router: Router, private route: ActivatedRoute){\r\n    //this.route.queryParams.subscribe(params => {this.userId = params['id'];});\r\n    if(this.userId == ''){ this.userId = localStorage.getItem('currentUserId')};\r\n    this.userService.getUser(this.userId, new Date().getTime()).then(data => {\r\n      if(data['status'] == 'success'){\r\n        this.user = data['user'][0];\r\n        if(data['user'][0].profileImage != undefined && data['user'][0].profileImage != null && data['user'][0].profileImage != ''){\r\n          this.userImage = data['user'][0].profileImage;\r\n        }\r\n        else{\r\n          this.userImage = 'assets/img/default_image.png';\r\n        }\r\n        console.log(this.user);\r\n      }\r\n    });\r\n\r\n    this.userService.getUserDetails(this.userId).then(data => {\r\n      if(data['status'] == 'success'){\r\n        this.details = data['details'];\r\n        console.log(this.details);\r\n      }\r\n    });\r\n\r\n    this.userService.getTimeLine(this.userId).then(data => {\r\n      if(data['status'] == 'success'){\r\n        this.timeLines = data['timeLine'];\r\n        console.log(this.timeLines);\r\n      }\r\n    });\r\n  }\r\n\r\n  edituser(id){\r\n    let val = ((id*5362)/12345);\r\n    this.router.navigate(['/users/edit-user'],{queryParams:{id:window.btoa(val.toString()), source:'user'}});\r\n  }\r\n\r\n  renew(){\r\n    this.router.navigate(['/pages/renewal']);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","module.exports = \"<section class=\\\"basic-elements\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"content-header\\\">Segments</div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!showSegment\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-6\\\">\\r\\n                            <p>Segments</p>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-6\\\" style=\\\"text-align: right;\\\">\\r\\n                            <p>\\r\\n                                <a class=\\\"btn btn-social btn-round btn-min-width mr-2 mb-2 btn-outline-bitbucket right\\\" (click)=\\\"memToggle()\\\"><span class=\\\"ft-plus\\\"></span>Create Segment</a>\\r\\n                            </p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"card-block\\\">\\r\\n                            <ngx-datatable class=\\\"material\\\" class=\\\"bootstrap\\\" [rows]=\\\"segments\\\" [columns]=\\\"columns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"50\\\" [sorts]=\\\"[{prop: ['name'], dir: 'desc'}]\\\" [limit]=\\\"10\\\">\\r\\n                                <ngx-datatable-column name=\\\"Segment Name\\\">\\r\\n                                    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                        {{row.name}}\\r\\n                                    </ng-template>\\r\\n                                </ngx-datatable-column>\\r\\n\\r\\n                                <ngx-datatable-column name=\\\"Created\\\">\\r\\n                                    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                        {{row.created}}\\r\\n                                    </ng-template>\\r\\n                                </ngx-datatable-column>\\r\\n                                <ngx-datatable-column name=\\\"Action\\\">\\r\\n                                    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                        <a class=\\\"info p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"editsegment(row.id)\\\">\\r\\n                                        <i class=\\\"fas fa-pencil-alt font-medium-3 mr-2\\\"></i>\\r\\n                                        </a>\\r\\n                                        <a class=\\\"danger p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"deletesegment(row.id)\\\">\\r\\n\\r\\n                                            <i class=\\\"fas fa-trash font-medium-3 mr-2\\\"></i>\\r\\n                                        </a>\\r\\n                                    </ng-template>\\r\\n                                </ngx-datatable-column>\\r\\n                            </ngx-datatable>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"showSegment\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"card-block\\\">\\r\\n                        <form [formGroup]=\\\"segmentForm\\\" (ngSubmit)=\\\"onReactiveFormSubmit(segmentForm.value)\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"name\\\">Segment Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" formControlName=\\\"name\\\" required>\\r\\n                                <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!segmentForm.get('name').valid && (segmentForm.get('name').dirty || segmentForm.get('name').touched)\\\">This field is required!</small>\\r\\n                            </div>\\r\\n                            <h2>Actions</h2>\\r\\n                            <p>Subscribers performs any of the following actions</p>\\r\\n\\r\\n                            <div formArrayName=\\\"actionset\\\">\\r\\n                                <div  [formGroupName]=\\\"i\\\" *ngFor=\\\"let tech of segmentForm.controls.actionset.controls; let i = index\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-xl-3 col-lg-6 col-md-12 mb-1\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                                <select  class=\\\"form-control custom-select mb-2\\\" formControlName=\\\"act1\\\" placeholder=\\\"Select an option\\\" required>\\r\\n                                                    <option value=\\\"visitedpage\\\">Visited page</option>\\r\\n                                                    <!-- <option value=\\\"clickedelement\\\">Clicked Element</option> -->\\r\\n                                                </select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"row\\\" >\\r\\n                                        <div class=\\\"col-xl-3 col-lg-6 col-md-12 mb-1\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <select  class=\\\"form-control custom-select mb-2\\\" formControlName=\\\"act2\\\" placeholder=\\\"Select an option\\\" required>\\r\\n                                                    <option value=\\\"pageurl\\\">Page URL</option>\\r\\n                                                    <option value=\\\"refferingurl\\\">Reffering URL</option>\\r\\n                                                </select>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-xl-4 col-lg-6 col-md-12 mb-1\\\" >\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <select  class=\\\"form-control custom-select mb-2\\\" formControlName=\\\"act3\\\" placeholder=\\\"Select an option\\\" required>\\r\\n                                                    <option value=\\\"isequalto\\\">Is equal to</option>\\r\\n                                                    <option value=\\\"isnotequalto\\\">Is not equal to</option>\\r\\n                                                    <option value=\\\"contains\\\">Contains</option>\\r\\n                                                </select>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-xl-4 col-lg-6 col-md-12 mb-1\\\">\\r\\n                                                <div class=\\\"form-group\\\">\\r\\n                                                    <input  type=\\\"text\\\" name=\\\"act4\\\" formControlName=\\\"act4\\\" class=\\\"form-control\\\" required>\\r\\n                                                </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-xl-1 col-lg-6 col-md-12 mb-1\\\" >\\r\\n                                            <div class=\\\"col-xl-2 col-lg-6 col-md-12 mb-1\\\">\\r\\n                                                <button class=\\\"btn btn-danger mr-1 btn-fab\\\"\\r\\n                                                (click)=\\\"removeSetCondition1(i)\\\"><i class=\\\"fa fa-times\\\"></i></button>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-block btn-raised\\\" (click)=\\\"addSetCondition1()\\\" >Add Condition</button>\\r\\n\\r\\n                            <h2>Properties</h2>\\r\\n                            <p>Subscribers has the following properties</p>\\r\\n\\r\\n                            <div formArrayName=\\\"propertyset\\\">\\r\\n                                <div class=\\\"row\\\" [formGroupName]=\\\"i\\\" *ngFor=\\\"let tech of segmentForm.controls.propertyset.controls; let i = index\\\">\\r\\n                                    <div class=\\\"col-xl-4 col-lg-6 col-md-12 mb-1\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <select class=\\\"form-control custom-select mb-2\\\"  formControlName=\\\"ddl1\\\"  placeholder=\\\"Rule Type\\\"  (change)=\\\"ddl1change($event.target.value,i)\\\" required>\\r\\n                                                <option *ngFor=\\\"let value of propertyList; let j = index\\\"  value=\\\"{{value.name}}\\\" >{{value.name}}</option>\\r\\n                                            </select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xl-3 col-lg-6 col-md-12 mb-1\\\" >\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <select  class=\\\"form-control custom-select mb-2\\\" formControlName=\\\"seloperator\\\" placeholder=\\\"Rule Type\\\" required>\\r\\n                                                    <option value=\\\"isequalto\\\">Is equal to</option>\\r\\n                                                    <option value=\\\"isnotequalto\\\">Is not equal to</option>\\r\\n                                            </select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xl-4 col-lg-6 col-md-12 mb-1\\\" *ngIf=\\\"valuesArray.length >0\\\">\\r\\n\\r\\n                                        <div  *ngIf=\\\"propertyList[valuesArray[i]].values.length == 0\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <input  type=\\\"text\\\" name=\\\"txtfilterval\\\" formControlName=\\\"txtfilterval\\\" class=\\\"form-control\\\" required>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div  *ngIf=\\\"propertyList[valuesArray[i]].values.length > 0\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <select class=\\\"form-control custom-select mb-2\\\" formControlName=\\\"txtfilterval\\\" placeholder=\\\"Rule Type\\\" required>\\r\\n                                                    <option value=\\\"\\\">-- Select --</option>\\r\\n                                                    <option  *ngFor=\\\"let opt of propertyList[valuesArray[i]].values\\\" value=\\\"{{opt}}\\\">{{opt}}</option>\\r\\n                                                </select>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"col-xl-1 col-lg-6 col-md-12 mb-1\\\" >\\r\\n                                        <div class=\\\"col-xl-2 col-lg-6 col-md-12 mb-1\\\">\\r\\n                                            <button class=\\\"btn btn-danger mr-1 btn-fab\\\"\\r\\n                                            (click)=\\\"removeSetCondition(i)\\\"><i class=\\\"fa fa-times\\\"></i></button>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-block btn-raised\\\" (click)=\\\"addSetCondition()\\\" >Add Condition</button>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-raised mr-1\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-success btn-raised\\\" [disabled]=\\\"!segmentForm.valid\\\">Create Segment</button>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3NlZ21lbnRzL3NlZ21lbnRzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormControl,FormGroup, FormArray, FormBuilder, Validators } from '@angular/forms';\r\nimport { MembershipSegmentsService } from '../../shared/data/membershipSegments.service';\r\nimport { SnotifyService, SnotifyPosition, SnotifyToastConfig } from 'ng-snotify';\r\n\r\n@Component({\r\n  selector: 'app-segments',\r\n  templateUrl: './segments.component.html',\r\n  styleUrls: ['./segments.component.scss']\r\n})\r\nexport class SegmentsComponent implements OnInit {\r\n\r\n  segmentForm: FormGroup;\r\n  segments;\r\n  totalList;\r\n  showSegment;\r\n\r\n  timeout = 3000;\r\n  position: SnotifyPosition = SnotifyPosition.centerTop;\r\n  progressBar = true;\r\n  closeClick = true;\r\n  newTop = true;\r\n  backdrop = -1;\r\n  dockMax = 8;\r\n  blockMax = 6;\r\n  pauseHover = true;\r\n  titleMaxLength = 15;\r\n  bodyMaxLength = 80;\r\n\r\n  propertyList: Array<any> = [\r\n   { name: 'Address',operator:['Is equal to','Is not equal to'], values: [] },\r\n   { name: 'City', operator:['Is equal to','Is not equal to'], values: [] },\r\n   { name: 'State', operator:['Is equal to','Is not equal to'], values: [] },\r\n   { name: 'Postcode', operator:['Is equal to','Is not equal to'], values: [] }\r\n ];\r\n\r\n  constructor(public membershipSegmentsService: MembershipSegmentsService,private _FB: FormBuilder,private snotifyService: SnotifyService) { }\r\n\r\n  ngOnInit() {\r\n    this.segmentForm = new FormGroup({\r\n        'name': new FormControl(null, [Validators.required]),\r\n        'actionset' : this._FB.array([\r\n        ]),\r\n        'propertyset' : this._FB.array([\r\n        ])\r\n    });\r\n\r\n    this.membershipSegmentsService.getSegmentByOrg().then(data => {\r\n      if(data['status'] == 'success'){\r\n        this.segments = data['segments'];\r\n        //this.collectionSize = data['segments'].length;\r\n        this.totalList = data['segments'].length;\r\n      }\r\n    },\r\n    error => {\r\n    });\r\n  }\r\n  get f() { return this.segmentForm.controls; }\r\n\r\n   memToggle(){\r\n     this.showSegment = true;\r\n   }\r\n    cancel(){\r\n      //window.location.reload();\r\n      this.showSegment = false;\r\n      this.segmentForm.reset();this.segmentForm = new FormGroup({\r\n          'name': new FormControl(null, [Validators.required]),\r\n          'actionset' : this._FB.array([\r\n          ]),\r\n          'propertyset' : this._FB.array([\r\n          ])\r\n      });\r\n\r\n    }\r\n\r\n    deletesegment(id){\r\n      this.membershipSegmentsService.deleteSegment(id).then(data => {\r\n        if(data['status']){\r\n          this.snotifyService.success('Deleted Successfully', '', this.getConfig());\r\n          this.segments = this.segments.filter(h => h.id != id);\r\n        }\r\n      });\r\n    }\r\n    /*action dynamic code*/\r\n    initMapFields1() : FormGroup{\r\n      return this._FB.group({\r\n        act1   : [],\r\n        act2   : [],\r\n        act3   : [],\r\n        act4   : []\r\n      });\r\n    }\r\n\r\n   // valuesArray1 =[];\r\n\r\n   //  ddl1change1(val,index){\r\n   //    this.valuesArray[index] = val;\r\n   //  }\r\n\r\n    addSetCondition1(){\r\n     const control = <FormArray>this.segmentForm.controls.actionset;\r\n     control.push(this.initMapFields1());\r\n    }\r\n\r\n    removeSetCondition1(i : number) : void{\r\n      const control = <FormArray>this.segmentForm.controls.actionset;\r\n      control.removeAt(i);\r\n      //this.valuesArray.splice(i, 1);\r\n    //this.operatorArray.splice(i, 1);\r\n    }\r\n    /*action dynamic code end*/\r\n    /*property dynamic*/\r\n    initMapFields() : FormGroup{\r\n      return this._FB.group({\r\n         ddl1     : [],\r\n         seloperator   : [],\r\n         txtfilterval   : []\r\n      });\r\n   }\r\n\r\n   valuesArray =[];\r\n\r\n\r\n    ddl1change(val,index){\r\n      //alert(val);\r\n\r\n\r\n      let nameary=[\"Address\",\"City\",\"State\",\"Postcode\"];\r\n      let indexsel = nameary.indexOf(val);\r\n\r\n      //alert(\"indexsel\"+indexsel);\r\n      //this.valuesArray.push(indexsel);\r\n\r\n      this.valuesArray[index] = indexsel;\r\n    }\r\n\r\n    addSetCondition(){\r\n      this.valuesArray.push(0);\r\n     const control = <FormArray>this.segmentForm.controls.propertyset;\r\n     control.push(this.initMapFields());\r\n    }\r\n\r\n    removeSetCondition(i : number) : void{\r\n      const control = <FormArray>this.segmentForm.controls.propertyset;\r\n      control.removeAt(i);\r\n      this.valuesArray.splice(i, 1);\r\n    //this.operatorArray.splice(i, 1);\r\n    }\r\n    /*property dynamic end*/\r\n\r\n    onReactiveFormSubmit(val : any) : void{\r\n      //console.log(JSON.stringify(val));\r\n      let obj= {'name':'','condition':{'propertyset':'','actionset':''}};\r\n      //let obj= {'name':'','condition':'','subscribers':0};\r\n      obj['name'] = val.name;\r\n      obj['condition']['propertyset'] = val.propertyset;\r\n      obj['condition']['actionset'] = val.actionset;\r\n\r\n      //console.log('segments - '+JSON.stringify(obj));\r\n\r\n      //let mydata = JSON.stringify(obj);\r\n\r\n      this.membershipSegmentsService.addSegment(obj).then(data => {\r\n        if(data['status'] == 'true'){\r\n           this.snotifyService.success('Added Successfully', '', this.getConfig());\r\n           this.membershipSegmentsService.getSegmentByOrg().then(data => {\r\n             if(data['status'] == 'success'){\r\n               this.segments = data['segments'];\r\n               this.totalList = data['segments'].length;\r\n               this.showSegment = false;\r\n               this.segmentForm.reset();\r\n             }\r\n           },\r\n           error => {\r\n           });\r\n        }\r\n      })\r\n    }\r\n\r\n    editsegment(id){\r\n      let editSegment = this.segments.filter(h => h.id == id);\r\n      this.segmentForm.controls['name'].setValue(editSegment[0]['name']);\r\n      let condition = JSON.parse(editSegment[0]['condition']);\r\n      for(let i= 0; i< condition['propertyset'].length; i++){\r\n        this.addSetConditionEdit(condition['propertyset'][i]);\r\n      }\r\n      for(let i= 0; i< condition['actionset'].length; i++){\r\n        this.addSetCondition1Edit(condition['actionset'][i]);\r\n      }\r\n      this.showSegment = true;\r\n    }\r\n\r\n    addSetConditionEdit(myobj){\r\n      this.valuesArray.push(0);\r\n      const control = <FormArray>this.segmentForm.controls.propertyset;\r\n      control.push(this.initMapFieldsEdit(myobj));\r\n    }\r\n\r\n    initMapFieldsEdit(myobj) : FormGroup{\r\n     return this._FB.group({\r\n        ddl1     : [myobj['ddl1']],\r\n        seloperator   : [myobj['seloperator']],\r\n        txtfilterval   : [myobj['txtfilterval']]\r\n     });\r\n    }\r\n\r\n    addSetCondition1Edit(myobj){\r\n    const control = <FormArray>this.segmentForm.controls.actionset;\r\n    control.push(this.initMapFields1Edit(myobj));\r\n    }\r\n\r\n    initMapFields1Edit(myobj) : FormGroup{\r\n     return this._FB.group({\r\n       act1   : [myobj['act1']],\r\n       act2   : [myobj['act2']],\r\n       act3   : [myobj['act3']],\r\n       act4   : [myobj['act4']]\r\n     });\r\n    }\r\n\r\n    getConfig(): SnotifyToastConfig {\r\n      this.snotifyService.setDefaults({\r\n          global: {\r\n              newOnTop: this.newTop,\r\n              maxAtPosition: this.blockMax,\r\n              maxOnScreen: this.dockMax,\r\n          }\r\n      });\r\n      return {\r\n          bodyMaxLength: this.bodyMaxLength,\r\n          titleMaxLength: this.titleMaxLength,\r\n          backdrop: this.backdrop,\r\n          position: this.position,\r\n          timeout: this.timeout,\r\n          showProgressBar: this.progressBar,\r\n          closeOnClick: this.closeClick,\r\n          pauseOnHover: this.pauseHover\r\n      };\r\n    }\r\n}\r\n","module.exports = \"<section id=\\\"paging\\\" class=\\\"mb-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n            <div class=\\\"content-header\\\">Users Subscription</div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                  <div class=\\\"card-title-wrap bar-info\\\">\\r\\n                    <select class=\\\"form-control\\\" (change)=\\\"selectUser($event.target.value)\\\">\\r\\n                        <option selected value=\\\"\\\">Select List</option>\\r\\n                        <option *ngFor=\\\"let list of listDetails\\\" value=\\\"{{list.id}}\\\">{{list.name}}</option>\\r\\n                    </select>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"card-block\\\">\\r\\n                    \\t<table class=\\\"table table-responsive-md text-center\\\">\\r\\n                    \\t\\t<thead>\\r\\n                    \\t\\t\\t<tr>\\r\\n                            <th>First Name</th>\\r\\n                            <th>Last Name</th>\\r\\n                            <th>Email</th>\\r\\n                            <th>Address</th>\\r\\n                            <th>List Name</th>\\r\\n                            <th>Subscribed On</th>\\r\\n                            <th>Subscribed Status</th>\\r\\n                    \\t\\t\\t</tr>\\r\\n                       \\t\\t</thead>\\r\\n                       \\t\\t<tbody>\\r\\n                            <tr *ngFor=\\\"let user of users | paginate: { itemsPerPage: 10, currentPage: p }\\\">\\r\\n                                <td>{{user.FirstName}}</td>\\r\\n                                <td>{{user.LastName}}</td>\\r\\n                                <td>{{user.email}}</td>\\r\\n                                <td>{{user.address}}</td>\\r\\n                                <td>{{user.listname}}</td>\\r\\n                                <td>{{user.date}}</td>\\r\\n                                <td *ngIf=\\\"user.status == true\\\"><span class=\\\"badge badge-primary\\\">Subscribed</span></td>\\r\\n                                <td *ngIf=\\\"user.status == false\\\"><span class=\\\"badge badge-primary\\\">Unsubscribed</span></td>\\r\\n                            </tr>\\r\\n                       \\t\\t</tbody>\\r\\n                    \\t</table>\\r\\n                        <div class=\\\"col-12 paginationonAction\\\">\\r\\n                            <span class=\\\"total\\\">{{collectionSize}} Total</span>\\r\\n                            <ngb-pagination *ngIf=\\\"users && users.length > 5\\\" [pageSize]=\\\"pageSize\\\" [(page)]=\\\"p\\\" [maxSize]=\\\"5\\\" [rotate]=\\\"true\\\" [collectionSize]=\\\"collectionSize\\\" [boundaryLinks]=\\\"true\\\" style=\\\"float: right;\\\"></ngb-pagination>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3N1YnNjcmliZXJzL3N1YnNjcmliZXJzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\n\r\nimport { UserService } from '../../shared/data/user.service';\r\nimport { ListsService } from '../../shared/data/lists.service';\r\n\r\n@Component({\r\n  selector: 'app-subscribers',\r\n  templateUrl: './subscribers.component.html',\r\n  styleUrls: ['./subscribers.component.scss']\r\n})\r\nexport class SubscribersComponent implements OnInit {\r\n  users = [];\r\n  isListAdmin = false;\r\n  listDetails;\r\n  p: number = 1;\r\n  pageSize: number = 5;\r\n  collectionSize;\r\n\r\n  \tconstructor(public userservice: UserService, private listsservice: ListsService, private router: Router, private route: ActivatedRoute) {\r\n      if(localStorage.getItem('isListAdmin') == 'true'){\r\n          this.isListAdmin = true;\r\n      }\r\n    }\r\n\r\n\tngOnInit() {\r\n    this.listsservice.getlist(new Date().getTime()).then(data => {\r\n          console.log(data['lists']);\r\n          this.listDetails = data['lists'];\r\n      },\r\n      error => {\r\n      });\r\n      if(this.isListAdmin){\r\n          let listId = JSON.parse(localStorage.getItem('currentUser'));\r\n          this.userservice.getUsersSubscriptionList(listId['admin_listid'], new Date().getTime()).then(data => {\r\n              console.log(data['users']);\r\n              this.users = data['users'];\r\n              this.collectionSize = data['users'].length;\r\n          });\r\n      }\r\n      else{\r\n          this.userservice.getUsersSubscribtion(new Date().getTime()).then(data => {\r\n              console.log(data['users']);\r\n              this.users = data['users'];\r\n              this.collectionSize = data['users'].length;\r\n          },\r\n          error => {\r\n          });\r\n      }\r\n\t}\r\n\r\n  selectUser(value){\r\n      this.p = 1;\r\n      if(value != ''){\r\n          this.userservice.getUsersSubscriptionList(value, new Date().getTime()).then(data => {\r\n              console.log(data['users']);\r\n              this.users = data['users'];\r\n              if(data['users']){\r\n                this.collectionSize = data['users'].length;\r\n              }\r\n              else{\r\n                this.collectionSize = 0;\r\n              }\r\n          });\r\n      }\r\n      else{\r\n          this.userservice.getUsersSubscribtion(new Date().getTime()).then(data => {\r\n              console.log(data['users']);\r\n              this.users = data['users'];\r\n              this.collectionSize = data['users'].length;\r\n          },\r\n          error => {\r\n          });\r\n      }\r\n  }\r\n\r\n}\r\n","module.exports = \"<section id=\\\"paging\\\" class=\\\"mb-3\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <div class=\\\"content-header\\\">Members</div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"showTable\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <!-- <div class=\\\"card-header\\\">\\r\\n                  <div class=\\\"card-title-wrap bar-info\\\">\\r\\n                    <h4 class=\\\"card-title\\\">Table Paging</h4>\\r\\n                  </div>\\r\\n                </div> -->\\r\\n        <div class=\\\"card-header\\\">\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <ngb-tabset (tabChange)=\\\"selectUser($event)\\\">\\r\\n                <ngb-tab title=\\\"Members\\\" id=\\\"all\\\" active=\\\"SelectedTab == 'all'\\\">\\r\\n                  <ng-template ngbTabContent>\\r\\n                  </ng-template>\\r\\n                </ngb-tab>\\r\\n                <!-- <ngb-tab title=\\\"Recently Renewed Members\\\" id=\\\"y\\\" active=\\\"SelectedTab == 'newRenewal'\\\">\\r\\n                              <ng-template ngbTabContent>\\r\\n                              </ng-template>\\r\\n                            </ngb-tab>\\r\\n                            <ngb-tab title=\\\"Renewal Pending Members\\\" id=\\\"n\\\" active=\\\"SelectedTab == 'renewalPending'\\\">\\r\\n                              <ng-template ngbTabContent>\\r\\n                              </ng-template>\\r\\n                            </ngb-tab> -->\\r\\n              </ngb-tabset>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"search.text\\\"  placeholder=\\\"Search...\\\">\\r\\n                <!-- (keyup)='updateFilter($event)' -->\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <select class=\\\"form-control\\\" [(ngModel)]=\\\"search.membership\\\">\\r\\n                  <!-- (change)=\\\"membershipFilter($event)\\\" -->\\r\\n                  <option value=''>Filter Membership</option>\\r\\n                  <option *ngFor=\\\"let member of members\\\" value=\\\"{{member.id}}\\\">{{member.plans}} {{member.duration}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <!-- <ui-switch [(ngModel)]=\\\"active\\\" (change)=\\\"onChange()\\\"></ui-switch> -->\\r\\n                <select class=\\\"form-control\\\" [(ngModel)]=\\\"search.status\\\">\\r\\n                  <!-- (change)=\\\"UserFilter($event)\\\" -->\\r\\n                  <option value=''>User Status</option>\\r\\n                  <option value=\\\"\\\">All</option>\\r\\n                  <option value=\\\"y\\\">Active</option>\\r\\n                  <option value=\\\"n\\\">Inactive</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-3\\\">\\r\\n              <div class=\\\"form-group\\\" style=\\\"display: inline-flex;\\\">\\r\\n                <a class=\\\"btn btn-info btn-round btn-raised mr-2\\\" (click)=\\\"searchusers()\\\">Filter Users</a>               \\r\\n                <a class=\\\"btn btn-primary btn-round btn-raised\\\" (click)=\\\"CleasrSearch()\\\">Clear Filter</a>\\r\\n              </div>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"col-2\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"isCollapsed = !isCollapsed\\\" [attr.aria-expanded]=\\\"!isCollapsed\\\" aria-controls=\\\"collapseExample\\\">\\r\\n                  Select Columns\\r\\n                </button>\\r\\n                <div id=\\\"collapseExample\\\" class=\\\"selected-column\\\" [ngbCollapse]=\\\"!isCollapsed\\\">\\r\\n                  <ul>\\r\\n                    <li *ngFor='let col of allColumns'>\\r\\n                      <input type='checkbox' [id]=\\\"col.name\\\" (click)='toggle(col)' [checked]='isChecked(col)' />\\r\\n                      <label [attr.for]=\\\"col.name\\\">{{col.name}}</label>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div> -->\\r\\n            <div class=\\\"col-2\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <a class=\\\"btn btn-social btn-round btn-min-width mr-2 mb-2 btn-outline-bitbucket float-right\\\" (click)=\\\"addUser()\\\"><span class=\\\"ft-plus\\\"></span> Add Member</a>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <div>\\r\\n            <ngx-datatable #table class='material' class='bootstrap' [rows]='dataSource' [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [limit]=\\\"10\\\" [loadingIndicator]=\\\"isLoading\\\">\\r\\n              <ngx-datatable-column *ngFor=\\\"let col of columns\\\" [name]=\\\"col.name\\\">\\r\\n              </ngx-datatable-column>\\r\\n              <ngx-datatable-column name=\\\"Role\\\">\\r\\n                <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                  <span class=\\\"badge badge-primary\\\">{{row.role}}</span>\\r\\n                </ng-template>\\r\\n              </ngx-datatable-column>\\r\\n              <ngx-datatable-column name=\\\"Action\\\">\\r\\n                <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                  <a class=\\\"success p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" *ngIf=\\\"SelectedTab != 'b'\\\" (click)=\\\"edituser(row.id)\\\">\\r\\n                    <i class=\\\"fas fa-pencil-alt font-medium-3 mr-2\\\"></i>\\r\\n                  </a>\\r\\n                  <a class=\\\"danger p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" *ngIf=\\\"SelectedTab != 'b'\\\" (click)=\\\"userdelete(row.id, row.email)\\\">\\r\\n                    <i class=\\\"fas fa-trash font-medium-3 mr-2\\\"></i>\\r\\n                  </a>\\r\\n                  <a class=\\\"danger p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" *ngIf=\\\"SelectedTab == 'b'\\\" (click)=\\\"removeblacklisteduser(row.id)\\\">\\r\\n                    <i class=\\\"fas fa-trash font-medium-3 mr-2\\\"></i>\\r\\n                  </a>\\r\\n                  <a class=\\\"success p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" *ngIf=\\\"row.status == 'y' && SelectedTab != 'b'\\\" (click)=\\\"userdeactivate('n', row.id, row.email)\\\" style=\\\"color: #f74961 !important;\\\">\\r\\n                    <i class=\\\"fas fa-ban font-medium-3 mr-2\\\" title=\\\"Deactivate\\\"></i>\\r\\n                  </a>\\r\\n                  <a class=\\\"success p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" *ngIf=\\\"SelectedTab != 'b' && (row.status == 'n' || row.status == '')\\\"\\r\\n                    (click)=\\\"useractivate('y', row.id, row.email, row.FirstName, row.LastName, row.address, row.phone, row.city, row.state)\\\" style=\\\"color: #666EE8 !important;\\\">\\r\\n                    <i class=\\\"fas fa-power-off font-3 mr-2\\\" title=\\\"Activate\\\"></i>\\r\\n                  </a>\\r\\n                </ng-template>\\r\\n              </ngx-datatable-column>\\r\\n            </ngx-datatable>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"!showTable && !showInvite\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <!-- <div class=\\\"card-header\\\">\\r\\n                    <div class=\\\"card-title-wrap bar-success\\\">\\r\\n                        <h4 class=\\\"card-title\\\">Regular Form (Reactive Form)</h4>\\r\\n                    </div>\\r\\n                </div> -->\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"card-block\\\">\\r\\n            <form #adduser=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\r\\n              <!-- <form #adduser=\\\"ngForm\\\" class=\\\"editForm\\\" *ngIf=\\\"!isSuperAdmin\\\" novalidate> -->\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Username</label>\\r\\n                    <input required [(ngModel)]=\\\"users.username\\\" name=\\\"username\\\" [ngClass]=\\\"{ 'is-invalid': adduser.submitted && username.invalid }\\\" class=\\\"form-control\\\" id=\\\"username\\\" #username=\\\"ngModel\\\" placeholder=\\\"Enter Username\\\" type=\\\"text\\\">\\r\\n                    <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"adduser.submitted && username.invalid\\\">Please enter a valid username!</small>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Password</label>\\r\\n                    <input required [(ngModel)]=\\\"users.password\\\" [ngClass]=\\\"{ 'is-invalid': adduser.submitted && password.invalid }\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" placeholder=\\\"Enter Password\\\" minlength=\\\"4\\\"\\r\\n                      maxlength=\\\"24\\\" type=\\\"password\\\">\\r\\n                    <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"password.errors?.minlength\\\">Password characters length must be between 4 and 24 !</small>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>First Name</label>\\r\\n                    <input required [(ngModel)]=\\\"users.firstName\\\" [ngClass]=\\\"{ 'is-invalid': adduser.submitted && firstName.invalid }\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" #firstName=\\\"ngModel\\\" name=\\\"firstName\\\" placeholder=\\\"Enter First Name\\\"\\r\\n                      type=\\\"text\\\">\\r\\n                    <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"adduser.submitted && firstName.invalid\\\">Please enter a valid firstName!</small>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Last Name</label>\\r\\n                    <input required [(ngModel)]=\\\"users.lastName\\\" [ngClass]=\\\"{ 'is-invalid': adduser.submitted && lastName.invalid }\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" #lastName=\\\"ngModel\\\" name=\\\"lastName\\\" placeholder=\\\"Enter Last Name\\\" type=\\\"text\\\">\\r\\n                    <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"adduser.submitted && lastName.invalid\\\">Please enter a valid lastName!</small>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Email</label>\\r\\n                    <input required [(ngModel)]=\\\"users.email\\\" [ngClass]=\\\"{ 'is-invalid': adduser.submitted && email.invalid }\\\" class=\\\"form-control\\\" id=\\\"email\\\" #email=\\\"ngModel\\\" name=\\\"email\\\" email placeholder=\\\"Enter Email\\\" type=\\\"email\\\">\\r\\n                    <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"adduser.submitted && email.invalid\\\">Please enter a valid email!</small>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>DOB</label>\\r\\n                    <input required [(ngModel)]=\\\"users.dob\\\" [ngClass]=\\\"{ 'is-invalid': adduser.submitted && dob.invalid }\\\" class=\\\"form-control\\\" id=\\\"dob\\\" #dob=\\\"ngModel\\\" name=\\\"dob\\\" type=\\\"date\\\">\\r\\n                    <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"adduser.submitted && dob.invalid\\\">Please enter a valid dob!</small>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class>Gender</label>\\r\\n                    <div class=\\\"custom-control custom-radio display-block\\\">\\r\\n                      <input type=\\\"radio\\\" id=\\\"F\\\" value=\\\"F\\\" name=\\\"genderRadios\\\" class=\\\"custom-control-input\\\" required [(ngModel)]=\\\"users.genderRadios\\\" #genderRadios=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': adduser.submitted && genderRadios.invalid }\\\">\\r\\n                      <label class=\\\"custom-control-label\\\" for=\\\"F\\\">Female</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"custom-control custom-radio display-block\\\">\\r\\n                      <input type=\\\"radio\\\" id=\\\"M\\\" value=\\\"M\\\" name=\\\"genderRadios\\\" class=\\\"custom-control-input\\\" required [(ngModel)]=\\\"users.genderRadios\\\" #genderRadios=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': adduser.submitted && genderRadios.invalid }\\\">\\r\\n                      <label class=\\\"custom-control-label\\\" for=\\\"M\\\">Male</label>\\r\\n                    </div>\\r\\n                    <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"adduser.submitted && genderRadios.invalid\\\">Please choose Gender!</small>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Phone</label>\\r\\n                    <input required [(ngModel)]=\\\"users.phone\\\" [ngClass]=\\\"{ 'is-invalid': adduser.submitted && phone.invalid }\\\" class=\\\"form-control\\\" id=\\\"phone\\\" #phone=\\\"ngModel\\\" name=\\\"phone\\\" type=\\\"text\\\" maxlength=\\\"10\\\" (keypress)=\\\"isNumberKey($event)\\\">\\r\\n                    <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"adduser.submitted && phone.invalid\\\">Please enter valid phone number!</small>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Subscriber List</label>\\r\\n                    <select required [(ngModel)]=\\\"users.sublist\\\" [ngClass]=\\\"{ 'is-invalid': adduser.submitted && sublist.invalid }\\\" class=\\\"form-control\\\" id=\\\"sublist\\\" #sublist=\\\"ngModel\\\" name=\\\"sublist\\\">\\r\\n                      <option value=''>Select List</option>\\r\\n                      <option *ngFor=\\\"let list of listDetails\\\" value=\\\"{{list.id}}\\\">{{list.name}}</option>\\r\\n                    </select>\\r\\n                    <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"(adduser.submitted && sublist.invalid && sublist.value == '')\\\">Please select a subscriber.</small>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Address</label>\\r\\n                    <input required [(ngModel)]=\\\"users.address\\\" [ngClass]=\\\"{ 'is-invalid': adduser.submitted && address.invalid }\\\" class=\\\"form-control\\\" id=\\\"address\\\" #address=\\\"ngModel\\\" name=\\\"address\\\" ngx-google-places-autocomplete [options]='options'\\r\\n                      #placesRef=\\\"ngx-places\\\" (onAddressChange)=\\\"handleAddressChange($event)\\\" />\\r\\n                    <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"adduser.submitted && address.invalid\\\">Please enter a valid address!</small>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Select Membership</label>\\r\\n                    <select required [(ngModel)]=\\\"users.membership\\\" [ngClass]=\\\"{ 'is-invalid': adduser.submitted && membership.invalid }\\\" class=\\\"form-control\\\" id=\\\"membership\\\" #membership=\\\"ngModel\\\" name=\\\"membership\\\">\\r\\n                      <option value=''>Select List</option>\\r\\n                      <option *ngFor=\\\"let member of members\\\" value=\\\"{{member.id}}\\\">{{member.plans}} {{member.duration}}</option>\\r\\n                    </select>\\r\\n                    <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"(adduser.submitted && membership.invalid && membership.value == '')\\\">Please select a Membership.</small>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3\\\" *ngIf=\\\"users.membership != ''\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Confirm Membership Fees Paid</label>\\r\\n                    <div class=\\\"custom-control custom-radio display-block\\\">\\r\\n                      <input type=\\\"radio\\\" id=\\\"y\\\" value=\\\"y\\\" name=\\\"paymentRadios\\\" class=\\\"custom-control-input\\\" required [(ngModel)]=\\\"users.paymentRadios\\\" #paymentRadios=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': adduser.submitted && paymentRadios.invalid }\\\">\\r\\n                      <label class=\\\"custom-control-label\\\" for=\\\"y\\\">Yes</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"custom-control custom-radio display-block\\\">\\r\\n                      <input type=\\\"radio\\\" id=\\\"n\\\" value=\\\"n\\\" name=\\\"paymentRadios\\\" class=\\\"custom-control-input\\\" required [(ngModel)]=\\\"users.paymentRadios\\\" #paymentRadios=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': adduser.submitted && paymentRadios.invalid }\\\">\\r\\n                      <label class=\\\"custom-control-label\\\" for=\\\"n\\\">No</label>\\r\\n                    </div>\\r\\n                    <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"adduser.submitted && users.membership != '' && paymentRadios.invalid\\\">Please Select!</small>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3\\\" *ngIf=\\\"users.membership != '' && users.paymentRadios == 'y'\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Add Receipt Number</label>\\r\\n                    <div class=\\\"custom-control custom-radio display-block\\\">\\r\\n                      <input type=\\\"text\\\" name=\\\"receiptNumber\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Receipt Number\\\" required [(ngModel)]=\\\"users.receiptNumber\\\" [ngClass]=\\\"{ 'is-invalid': adduser.submitted && receiptNumber.invalid }\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Membership Card</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Membership Card\\\" required [(ngModel)]=\\\"users.subId\\\" id=\\\"subId\\\" #subId=\\\"ngModel\\\" name=\\\"subId\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\" *ngIf=\\\"isSuperAdmin\\\">\\r\\n                <label for=\\\"role\\\">Role</label>\\r\\n                <select class=\\\"form-control\\\" name=\\\"role\\\" [(ngModel)]=\\\"users.role\\\" #role=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': adduser.submitted && role.invalid }\\\" required>\\r\\n                  <option value=\\\"\\\">Select Role</option>\\r\\n                  <option *ngFor=\\\"let role of roles\\\" value=\\\"{{role.id}}\\\">{{role.name}}</option>\\r\\n                </select>\\r\\n                <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"adduser.submitted && role.invalid && users.role == ''\\\">Please select a role!</small>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\" *ngIf=\\\"isSuperAdmin\\\">\\r\\n                <label for=\\\"organization\\\">Organization</label>\\r\\n                <select class=\\\"form-control\\\" name=\\\"organization\\\" [(ngModel)]=\\\"users.organization\\\" #organization=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': adduser.submitted && organization.invalid }\\\" required>\\r\\n                  <option value=\\\"\\\">Select Organization</option>\\r\\n                  <option *ngFor=\\\"let organization of organizations\\\" value=\\\"{{organization.id}}\\\">{{organization.name}}</option>\\r\\n                </select>\\r\\n                <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"adduser.submitted && organization.invalid && users.organization == ''\\\">Please select an organization!</small>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\" *ngIf=\\\"extraFields\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                  <h4 class=\\\"form-section\\\">\\r\\n                    <i class=\\\"fa-th-list\\\"></i> Extra Fields</h4>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-6\\\" *ngFor=\\\"let field of addFields;let i = index\\\">\\r\\n                      <div class=\\\"form-group\\\" *ngIf=\\\"field.fieldType == 'text'\\\">\\r\\n                        <label>{{field.label}}</label>\\r\\n                        <input class=\\\"form-control\\\" name=\\\"{{field.fieldName}}\\\" [(ngModel)]=\\\"field.fieldName_extra\\\" #textValue=\\\"ngModel\\\" minlength=\\\"1\\\" maxlength=\\\"{{field.length}}\\\" type=\\\"text\\\" [required]=\\\"field.mandatory\\\"\\r\\n                          (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\">\\r\\n                        <small *ngIf=\\\"field.validation && (adduser.submitted && textValue.invalid)\\\" class=\\\"form-text text-muted danger\\\">{{field.validationMsg}}</small>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\" *ngIf=\\\"field.fieldType == 'date'\\\">\\r\\n                        <label>{{field.label}}</label>\\r\\n                        <input class=\\\"form-control\\\" name=\\\"{{field.fieldName}}\\\" [(ngModel)]=\\\"field.fieldName_extra\\\" #dateerrorValue=\\\"ngModel\\\" type=\\\"date\\\" [required]=\\\"field.mandatory\\\"\\r\\n                          (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\">\\r\\n                        <small *ngIf=\\\"field.validation && (adduser.submitted && dateerrorValue.invalid)\\\" class=\\\"form-text text-muted danger\\\">{{field.validationMsg}}</small>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\" *ngIf=\\\"field.fieldType == 'number'\\\">\\r\\n                        <label>{{field.label}}</label>\\r\\n                        <input class=\\\"form-control\\\" name=\\\"{{field.fieldName}}\\\" [(ngModel)]=\\\"field.fieldName_extra\\\" minlength=\\\"0\\\" maxlength=\\\"{{field.length}}\\\" #numbererrorValue=\\\"ngModel\\\" [required]=\\\"field.mandatory\\\"\\r\\n                          (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\" (keypress)=\\\"isNumberKey($event)\\\">\\r\\n                        <!-- <input class=\\\"form-control\\\" name=\\\"numberValue\\\" [(ngModel)]=\\\"numberValue_i\\\" *ngIf=\\\"field.length == '' && field.length <= 0\\\" type=\\\"text\\\" pattern=\\\"[0-9]\\\" [required]=\\\"field.mandatory\\\" (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\"> -->\\r\\n                        <small *ngIf=\\\"field.length != '' && field.length > 0\\\" class=\\\"form-text text-muted danger\\\">Field Length Should not exceed {{field.length}}</small>\\r\\n                        <small *ngIf=\\\"field.validation && (adduser.submitted && numbererrorValue.invalid)\\\" class=\\\"form-text text-muted danger\\\">{{field.validationMsg}}</small>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\" *ngIf=\\\"field.fieldType == 'float'\\\">\\r\\n                        <label>{{field.label}}</label>\\r\\n                        <input class=\\\"form-control\\\" name=\\\"{{field.fieldName}}\\\" [(ngModel)]=\\\"field.fieldName_extra\\\" minlength=\\\"0\\\" maxlength=\\\"{{field.length}}\\\" #floaterrorValue=\\\"ngModel\\\" [required]=\\\"field.mandatory\\\"\\r\\n                          (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\" (keypress)=\\\"isNumberKey($event)\\\">\\r\\n                        <!-- <input class=\\\"form-control\\\" name=\\\"floatValue\\\" [(ngModel)]=\\\"floatValue_i\\\" maxlength=\\\"{{field.length}}\\\" *ngIf=\\\"field.length != '' && field.length > 0\\\" pattern=\\\"/^[0-9]+(\\\\.[0-9]{1,2})?$/\\\" (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\" type=\\\"text\\\" [required]=\\\"field.mandatory\\\">\\r\\n                                    <input class=\\\"form-control\\\" name=\\\"floatValue\\\" [(ngModel)]=\\\"floatValue_i\\\" *ngIf=\\\"field.length == '' && field.length <= 0\\\" pattern=\\\"/^[0-9]+(\\\\.[0-9]{1,2})?$/\\\" (change)=\\\"fieldValueChange(field.id,$event.target.value, field.fieldName)\\\" type=\\\"text\\\" [required]=\\\"field.mandatory\\\"> -->\\r\\n                        <small *ngIf=\\\"field.length != '' && field.length > 0\\\" class=\\\"form-text text-muted danger\\\">Field Length Should not exceed {{field.length}}</small>\\r\\n                        <small *ngIf=\\\"field.validation && (adduser.submitted && floaterrorValue.invalid)\\\" class=\\\"form-text text-muted danger\\\">{{field.validationMsg}}</small>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\" *ngIf=\\\"field.fieldType == 'toggle'\\\">\\r\\n                        <label>{{field.label}}</label>\\r\\n                        <ui-switch name=\\\"{{field.fieldName}}\\\" [(ngModel)]=\\\"field.fieldName_extra\\\" #toggleValue=\\\"ngModel\\\" (change)=\\\"fieldValueChange(field.id,$event, field.fieldName)\\\" [required]=\\\"field.mandatory\\\"></ui-switch>\\r\\n                        <small *ngIf=\\\"field.validation && (adduser.submitted && toggleValue.invalid)\\\" class=\\\"form-text text-muted danger\\\">{{field.validationMsg}}</small>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"usernameerror\\\">Username Already Exists.<br /><br /></small>\\r\\n              <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"emailerror\\\">Email Already Exists.<br /><br /></small>\\r\\n              <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"dateerror\\\">Your age must be 18 or older.<br /><br /></small>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-raised  mr-1\\\" (click)=\\\"cancelEdit()\\\">Cancel</button>\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success btn-raised\\\" [disabled]=\\\"!adduser.valid\\\" (click)=\\\"onReactiveFormSubmit()\\\">Submit <i *ngIf=\\\"submitted\\\" class=\\\"fas fa-spinner fa fa-spin\\\"></i></button>\\r\\n              </div>\\r\\n            </form>\\r\\n\\r\\n            <!-- <form [formGroup]=\\\"regularForm\\\" (ngSubmit)=\\\"onReactiveFormSubmit()\\\" novalidate *ngIf=\\\"isSuperAdmin\\\">\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"usernameerror\\\">Username Already Exits.<br/><br/></small>\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"emailerror\\\">Email Already Exits.<br/><br/></small>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Username</label>\\r\\n                                <input class=\\\"form-control\\\" id=\\\"username\\\" formControlName=\\\"username\\\" placeholder=\\\"Enter Username\\\" type=\\\"text\\\">\\r\\n                                <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('username').valid && (regularForm.get('username').dirty || regularForm.get('username').touched)\\\">Please enter a valid username!</small>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Password</label>\\r\\n                                <input class=\\\"form-control\\\" id=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Enter Password\\\" type=\\\"password\\\">\\r\\n                                <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('password').valid && (regularForm.get('password').dirty || regularForm.get('password').touched)\\\">Please enter a valid password!</small>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>First Name</label>\\r\\n                                <input class=\\\"form-control\\\" id=\\\"firstName\\\" formControlName=\\\"firstName\\\" placeholder=\\\"Enter First Name\\\" type=\\\"text\\\">\\r\\n                                <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('firstName').valid && (regularForm.get('firstName').dirty || regularForm.get('firstName').touched)\\\">Please enter a valid firstName!</small>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Last Name</label>\\r\\n                                <input class=\\\"form-control\\\" id=\\\"lastName\\\" formControlName=\\\"lastName\\\" placeholder=\\\"Enter Last Name\\\" type=\\\"text\\\">\\r\\n                                <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('lastName').valid && (regularForm.get('lastName').dirty || regularForm.get('lastName').touched)\\\">Please enter a valid lastName!</small>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Email</label>\\r\\n                                <input class=\\\"form-control\\\" id=\\\"email\\\" formControlName=\\\"email\\\" placeholder=\\\"Enter Email\\\" type=\\\"email\\\">\\r\\n                                <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('email').valid && (regularForm.get('email').dirty || regularForm.get('email').touched)\\\">Please enter a valid email!</small>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>DOB</label>\\r\\n                                <input class=\\\"form-control\\\" id=\\\"dob\\\" formControlName=\\\"dob\\\" type=\\\"date\\\">\\r\\n                                <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('dob').valid && (regularForm.get('dob').dirty || regularForm.get('dob').touched)\\\">Please enter a valid dob!</small>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class>Gender</label>\\r\\n                                <div class=\\\"custom-control custom-radio display-block\\\">\\r\\n                                    <input type=\\\"radio\\\" id=\\\"genderRadios1\\\"  value=\\\"F\\\" name=\\\"genderRadios\\\" class=\\\"custom-control-input\\\">\\r\\n                                    <label class=\\\"custom-control-label\\\" for=\\\"genderRadios1\\\">Female</label>\\r\\n                                </div>\\r\\n                                <div class=\\\"custom-control custom-radio display-block\\\">\\r\\n                                    <input type=\\\"radio\\\" id=\\\"genderRadios2\\\" value=\\\"M\\\" name=\\\"genderRadios\\\" class=\\\"custom-control-input\\\">\\r\\n                                    <label class=\\\"custom-control-label\\\" for=\\\"genderRadios2\\\">Male</label>\\r\\n                                </div>\\r\\n                                <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('genderRadios').valid && (regularForm.get('genderRadios').dirty || regularForm.get('genderRadios').touched)\\\">Please choose Gender!</small>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Phone</label>\\r\\n                                <input class=\\\"form-control\\\" id=\\\"phone\\\" formControlName=\\\"phone\\\" type=\\\"text\\\">\\r\\n                                <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('phone').valid && (regularForm.get('phone').dirty || regularForm.get('phone').touched)\\\">Please enter valid phone number!</small>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Subscriber List</label>\\r\\n                                <select class=\\\"form-control\\\" id=\\\"sublist\\\" formControlName=\\\"sublist\\\">\\r\\n                                    <option disabled=\\\"true\\\">Select Subscriber</option>\\r\\n                                    <option *ngFor=\\\"let list of listDetails\\\" value=\\\"{{list.id}}\\\">{{list.name}}</option>\\r\\n                                </select>\\r\\n                                <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('sublist').valid && (regularForm.get('sublist').dirty || regularForm.get('sublist').touched)\\\">Please select a Subscriber!</small>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Address</label>\\r\\n                                <input class=\\\"form-control\\\" id=\\\"address\\\" formControlName=\\\"address\\\" ngx-google-places-autocomplete [options]='options' #placesRef=\\\"ngx-places\\\" (onAddressChange)=\\\"handleAddressChange($event)\\\"/>\\r\\n                                <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('address').valid && (regularForm.get('address').dirty || regularForm.get('address').touched)\\\">Please enter a valid address!</small>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"role\\\">Role</label>\\r\\n                                <select class=\\\"form-control\\\" id=\\\"role\\\" formControlName=\\\"role\\\">\\r\\n                                    <option disabled=\\\"true\\\">Select Role</option>\\r\\n                                    <option *ngFor=\\\"let role of roles\\\" value=\\\"{{role.id}}\\\">{{role.name}}</option>\\r\\n                                </select>\\r\\n                                <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('role').valid && (regularForm.get('role').dirty || regularForm.get('role').touched)\\\">Please select a role!</small>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"organization\\\">Organization</label>\\r\\n                                <select class=\\\"form-control\\\" id=\\\"organization\\\" formControlName=\\\"organization\\\">\\r\\n                                    <option disabled=\\\"true\\\">Select Organization</option>\\r\\n                                    <option *ngFor=\\\"let organization of organizations\\\" value=\\\"{{organization.id}}\\\">{{organization.name}}</option>\\r\\n                                </select>\\r\\n                                <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!regularForm.get('organization').valid && (regularForm.get('organization').dirty || regularForm.get('organization').touched)\\\">Please select an organization!</small>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-raised  mr-1\\\" (click)=\\\"cancelEdit()\\\">Cancel</button>\\r\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-success btn-raised\\\" [disabled]=\\\"!regularForm.valid\\\">Submit</button>\\r\\n                            </div>\\r\\n                        </form> -->\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"!showTable && showInvite\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"card-block\\\">\\r\\n            <form [formGroup]=\\\"inviteForm\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Email</label>\\r\\n                <input class=\\\"form-control\\\" formControlName=\\\"inviteEmail\\\" [(ngModel)]=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"Enter Email\\\" type=\\\"email\\\">\\r\\n                <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!inviteForm.get('inviteEmail').valid && (inviteForm.get('inviteEmail').dirty || inviteForm.get('inviteEmail').touched)\\\">Please enter a valid email!</small>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"role\\\">Role</label>\\r\\n                <select class=\\\"form-control\\\" id=\\\"roleId\\\" formControlName=\\\"role\\\" [(ngModel)]=\\\"roleId\\\">\\r\\n                  <option disabled=\\\"true\\\">Select Role</option>\\r\\n                  <option *ngFor=\\\"let role of roles\\\" value=\\\"{{role.id}}\\\">{{role.name}}</option>\\r\\n                </select>\\r\\n                <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!inviteForm.get('role').valid && (inviteForm.get('role').dirty || inviteForm.get('role').touched)\\\">Role is required!</small>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-raised  mr-1\\\" (click)=\\\"cancelEdit()\\\">Cancel</button>\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success btn-raised\\\" [disabled]=\\\"!inviteForm.valid\\\" (click)=\\\"sendInvite(roleId,email)\\\">Send Invite<i *ngIf=\\\"submitted\\\" class=\\\"fas fa-spinner fa fa-spin\\\"></i></button>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\"","module.exports = \".selected-column {\\n  width: 140%;\\n  /*margin-right: 20px;\\r\\n   float: right;*/\\n  text-align: left;\\n  background: #FFF;\\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.12), 0 1px 2px 0 rgba(0, 0, 0, 0.24); }\\n\\nli {\\n  list-style: none; }\\n\\nul.tablealgn {\\n  float: right;\\n  text-align: -webkit-auto; }\\n\\nngx-datatable.bootstrap.ngx-datatable.fixed-header.virtualized {\\n  float: left; }\\n\\n.btnalgn {\\n  text-align: -webkit-right; }\\n\\n.text-right {\\n  text-align: right !important;\\n  right: -50%; }\\n\\ndiv#collapseExample ul {\\n  display: inline-flex;\\n  margin-bottom: 0;\\n  margin-left: 0;\\n  padding-left: 0; }\\n\\ndiv#collapseExample ul li {\\n  margin-right: 9px; }\\n\\ndiv#collapseExample ul li label {\\n  padding-left: 2px; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlcnMvdXNlcnMtbGlzdC9DOlxcVXNlcnNcXE1SVDIwXFxEZXNrdG9wXFxVTVxcdXNlcm1hbmFnZW1lbnQvc3JjXFxhcHBcXHVzZXJzXFx1c2Vycy1saXN0XFx1c2Vycy1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0csWUFBVztFQUNYO2tCQUNlO0VBQ2YsaUJBQWdCO0VBQ2hCLGlCQUFnQjtFQUNoQiw2RUFBNEUsRUFDOUU7O0FBQ0Q7RUFDSSxpQkFBZ0IsRUFDbkI7O0FBQ0Q7RUFDSSxhQUFZO0VBQ1oseUJBQXdCLEVBQzNCOztBQUNEO0VBQ0ksWUFBVyxFQUNkOztBQUNEO0VBQ0ssMEJBQ0wsRUFBQzs7QUFDRDtFQUNFLDZCQUE0QjtFQUM1QixZQUFXLEVBQ1o7O0FBQ0Q7RUFDSSxxQkFBb0I7RUFDcEIsaUJBQWdCO0VBQ2hCLGVBQWM7RUFDZCxnQkFBZSxFQUNsQjs7QUFDRDtFQUNJLGtCQUFpQixFQUNwQjs7QUFDRDtFQUNJLGtCQUFpQixFQUNwQiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXJzLWxpc3QvdXNlcnMtbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zZWxlY3RlZC1jb2x1bW57XHJcbiAgIHdpZHRoOiAxNDAlO1xyXG4gICAvKm1hcmdpbi1yaWdodDogMjBweDtcclxuICAgZmxvYXQ6IHJpZ2h0OyovXHJcbiAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgIGJhY2tncm91bmQ6ICNGRkY7XHJcbiAgIGJveC1zaGFkb3c6IDAgMXB4IDNweCAwIHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMXB4IDJweCAwIHJnYmEoMCwgMCwgMCwgMC4yNCk7XHJcbn1cclxubGl7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG59XHJcbnVsLnRhYmxlYWxnbiB7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICB0ZXh0LWFsaWduOiAtd2Via2l0LWF1dG87XHJcbn1cclxubmd4LWRhdGF0YWJsZS5ib290c3RyYXAubmd4LWRhdGF0YWJsZS5maXhlZC1oZWFkZXIudmlydHVhbGl6ZWQge1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbn1cclxuLmJ0bmFsZ24ge1xyXG5cdCAgICB0ZXh0LWFsaWduOiAtd2Via2l0LXJpZ2h0XHJcbn1cclxuLnRleHQtcmlnaHQge1xyXG4gIHRleHQtYWxpZ246IHJpZ2h0ICFpbXBvcnRhbnQ7XHJcbiAgcmlnaHQ6IC01MCU7XHJcbn1cclxuZGl2I2NvbGxhcHNlRXhhbXBsZSB1bCB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxuICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICBtYXJnaW4tbGVmdDogMDtcclxuICAgIHBhZGRpbmctbGVmdDogMDtcclxufVxyXG5kaXYjY29sbGFwc2VFeGFtcGxlIHVsIGxpIHtcclxuICAgIG1hcmdpbi1yaWdodDogOXB4O1xyXG59XHJcbmRpdiNjb2xsYXBzZUV4YW1wbGUgdWwgbGkgbGFiZWwge1xyXG4gICAgcGFkZGluZy1sZWZ0OiAycHg7XHJcbn0iXX0= */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { FormControl, FormGroup, Validators, NgForm } from '@angular/forms';\r\nimport { SnotifyService, SnotifyPosition, SnotifyToastConfig } from 'ng-snotify';\r\nimport { GooglePlaceDirective } from \"ngx-google-places-autocomplete\";\r\nimport { NgbDateStruct, NgbDatepickerI18n, NgbCalendar} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { UserService } from '../../shared/data/user.service';\r\nimport { ListsService } from '../../shared/data/lists.service';\r\nimport { OrganizationService } from '../../shared/data/organization.service';\r\nimport { AddFieldsService } from '../../shared/data/addFields.service';\r\nimport { MembershipService } from '../../shared/data/membership.service';\r\nimport swal from 'sweetalert2';\r\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\r\n\r\n@Component({\r\n  selector: 'app-users-list',\r\n  templateUrl: './users-list.component.html',\r\n  styleUrls: ['./users-list.component.scss']\r\n})\r\nexport class UsersListComponent implements OnInit {\r\n\r\n  @ViewChild('adduser') adduserForm: NgForm;\r\n  @ViewChild(DatatableComponent) table: DatatableComponent;\r\n  private isLoading: boolean = false;\r\n  dataSource = [];\r\n  p: number = 1;\r\n  pageSize: number = 10;\r\n  style = 'material';\r\n  title = 'Snotify title!';\r\n  body = 'Lorem ipsum dolor sit amet!';\r\n  timeout = 3000;\r\n  position: SnotifyPosition = SnotifyPosition.centerTop;\r\n  progressBar = true;\r\n  closeClick = true;\r\n  newTop = true;\r\n  backdrop = -1;\r\n  dockMax = 8;\r\n  blockMax = 6;\r\n  pauseHover = true;\r\n  titleMaxLength = 15;\r\n  bodyMaxLength = 80;\r\n  collectionSize;\r\n  userId;\r\n  listDetails;\r\n  roles;\r\n  organizations;\r\n  showlistadmin;\r\n  usernameerror = false;\r\n  emailerror = false;\r\n  newaddress;listadmin;\r\n  public showTable: boolean = true;\r\n  public isSuperAdmin: boolean = false;\r\n  public isAdmin: boolean = false;\r\n  public showInvite: boolean = false;\r\n  public submitted: boolean = false;\r\n  public selectedTab: any;\r\n  options = {\r\n    types: ['geocode'],\r\n    componentRestrictions: { country: 'AU' }\r\n  }\r\n  search = {\r\n    'text': '',\r\n    'membership' :'',\r\n    'status': ''\r\n  }\r\n\r\n  @ViewChild(\"placesRef\") placesRef : GooglePlaceDirective;\r\n  inviteForm: FormGroup;\r\n  extraFields = false;\r\n  addFields = [];\r\n  toggleValue = false;\r\n  textValue;\r\n  dateValue;\r\n  numberValue;\r\n  floatValue;\r\n  FieldsValue = [];\r\n  dateerror = false;\r\n\r\n  users = {\r\n    'username': '',\r\n    'password': '',\r\n    'firstName': '',\r\n    'lastName': '',\r\n    'email': '',\r\n    'dob': '',\r\n    'genderRadios': '',\r\n    'address': '',\r\n    'phone': '',\r\n    'profileImage': '',\r\n    'sublist':'',\r\n    'type': '',\r\n    'role': '',\r\n    'organization': '',\r\n    'fields': '',\r\n    'id':'',\r\n    'address1':'',\r\n    'city':'',\r\n    'state':'',\r\n    'country':'',\r\n    'membership': '',\r\n    'status': 'y',\r\n    'postcode': '',\r\n    'paymentRadios':'',\r\n    'subId':'',\r\n    'receiptNumber': ''\r\n  }\r\n  usersModel_extra = {};\r\n  members;\r\n  columns = [\r\n    { name: 'First Name', width: 40 },\r\n    { name: 'Last Name', width: 40 },\r\n    { name: 'Email', width: 80},\r\n    { name: 'Address', width: 80},\r\n    { name: 'Phone', width: 30},\r\n    { name: 'Next Renewal Due Date', width: 20}\r\n    ];\r\n\r\n  allColumns = [\r\n    { name: 'First Name' },\r\n    { name: 'Last Name' },\r\n    { name: 'Email'},\r\n    { name: 'Address'},\r\n    { name: 'Phone'},\r\n    { name: 'City'},\r\n    { name: 'State'},\r\n    { name: 'Next Renewal Due Date'}\r\n  ];\r\n\r\n   isCollapsed = false;\r\n   public storeName;\r\n   filteredData = [];\r\n   originalDataSource = [];\r\n   activeUL = true;\r\n\r\n  constructor(public addFieldsService: AddFieldsService, public membershipService: MembershipService, private snotifyService: SnotifyService, public organizationservice: OrganizationService, public listsservice: ListsService, public userservice: UserService, private router: Router, private route: ActivatedRoute) {\r\n    let users = JSON.parse(localStorage.getItem('currentUser'));\r\n    if(users){\r\n      if(users['role_id'] == '2'){\r\n        this.isSuperAdmin = true;\r\n      }\r\n      if(users['role_id'] == '1'){\r\n        this.isAdmin = true;\r\n      }\r\n      this.storeName = users['name'];\r\n    }\r\n    this.userId = users;\r\n    this.SelectedTab = 'all';\r\n    this.membershipService.getMembership().then(data => {\r\n      if(data['membership']){\r\n        this.members = data['membership'];\r\n      }\r\n    },\r\n    error => {\r\n    });\r\n    this.isLoading = true;\r\n    console.log('Selected - ' + this.selectedTab);\r\n  }\r\n\r\n  ngOnInit() {\r\n      this.inviteForm = new FormGroup({\r\n          'inviteEmail': new FormControl(null, [Validators.required, Validators.email]),\r\n          'role': new FormControl(null, [Validators.required])\r\n      });\r\n      let store;\r\n      if(this.storeName.startsWith(\"Auto One\")){\r\n        store = this.storeName;\r\n      }\r\n      else{\r\n        store = '';\r\n      }\r\n      this.userservice.getUsers(store,new Date().getTime()).then(data => {\r\n        console.log(data['user']);\r\n        if(data['status'] == 'success'){\r\n          this.dataSource = data['user'];\r\n          this.originalDataSource = data['user'];\r\n          this.filteredData = data['user'];\r\n          this.collectionSize = data['user'].length;\r\n          this.isLoading = false;\r\n        }\r\n      },\r\n      error => {\r\n      });\r\n      this.addFieldsService.getFieldsByTable('users').then(data=>{\r\n        if(data['status'] == 'success'){\r\n          for(let i=0; i< data['fields'].length; i++){\r\n            let fields = JSON.parse(data['fields'][i]['fields']);\r\n              this.addFields.push({\r\n                'label': fields['label'],\r\n          \t\t\t'datatype':fields['datatype'],\r\n          \t\t\t'length':fields['length'],\r\n          \t\t\t'mandatory':fields['mandatory'],\r\n          \t\t\t'validation':fields['validation'],\r\n          \t\t\t'validationMsg':fields['validationMsg'],\r\n          \t\t\t'fieldType':fields['fieldType'],\r\n                'id':data['fields'][i]['id'],\r\n                'fieldName':fields['fieldName']\r\n              });\r\n          }\r\n          this.extraFields = true;\r\n        }\r\n        else{\r\n          this.extraFields = false;\r\n        }\r\n      });\r\n    this.listsservice.getlist(new Date().getTime()).then(data => {\r\n      this.listDetails = data['lists'];\r\n    });\r\n    this.userservice.getGroups().then(data => {\r\n      this.roles = data['groups'];\r\n    });\r\n    this.organizationservice.getOrganization(new Date().getTime()).then(data => {\r\n      this.organizations = data['organization'];\r\n    });\r\n    if(localStorage.getItem('listadmin') == '1'){\r\n      this.showlistadmin = true;\r\n    }\r\n  }\r\n\r\n  UserFilter(event){\r\n    if(event.target.value != ''){\r\n      let val = event.target.value.toLowerCase();\r\n      console.log(this.dataSource.length);\r\n      this.dataSource = this.filteredData.filter(c => {\r\n        return c.status === val;\r\n      });\r\n      this.filteredData = this.dataSource;\r\n      console.log(this.dataSource.length);\r\n    }\r\n    else{\r\n      this.dataSource = this.originalDataSource;\r\n      this.filteredData = this.originalDataSource;\r\n    }\r\n    this.table.offset = 0;\r\n  }\r\n\r\n  updateFilter(event){\r\n    if(event.target.value != ''){\r\n      let val = event.target.value.toLowerCase();\r\n      let keys = Object.keys(this.dataSource[0]);\r\n      let colsAmt = keys.length;\r\n      this.dataSource = this.filteredData.filter(function(item){\r\n        for (let i=0; i<colsAmt; i++){\r\n          if (item[keys[i]].toString().toLowerCase().indexOf(val) !== -1 || !val){\r\n            return true;\r\n          }\r\n        }\r\n      });\r\n      this.filteredData = this.dataSource;\r\n    }\r\n    else{\r\n      this.dataSource = this.originalDataSource;\r\n      this.filteredData = this.originalDataSource;\r\n    }\r\n    this.table.offset = 0;\r\n  }\r\n\r\n  membershipFilter(event){\r\n    if(event.target.value != ''){\r\n      let val = event.target.value.toLowerCase();\r\n      this.dataSource = this.originalDataSource.filter(user => user.mId === val);\r\n      this.filteredData = this.dataSource;\r\n    }\r\n    else{\r\n      this.dataSource = this.originalDataSource;\r\n      this.filteredData = this.originalDataSource;\r\n    }\r\n    this.table.offset = 0;\r\n  }\r\n\r\n  searchusers(){\r\n    this.dataSource = this.originalDataSource;\r\n    if(this.search.membership != ''){\r\n      let val = this.search.membership.toLowerCase();\r\n      this.dataSource = this.dataSource.filter(user => user.mId === val);\r\n    }\r\n    if(this.search.text != ''){\r\n      let val = this.search.text.toLowerCase();\r\n      let keys = Object.keys(this.dataSource[0]);\r\n      let colsAmt = keys.length;\r\n      this.dataSource = this.dataSource.filter(function(item){\r\n        for (let i=0; i<colsAmt; i++){\r\n          if (item[keys[i]].toString().toLowerCase().indexOf(val) !== -1 || !val){\r\n            return true;\r\n          }\r\n        }\r\n      });\r\n    }\r\n    if(this.search.status != ''){\r\n      let val = this.search.status.toLowerCase();\r\n      console.log(this.dataSource.length);\r\n      this.dataSource = this.dataSource.filter(c => {\r\n        return c.status === val;\r\n      });\r\n      console.log(this.dataSource.length);\r\n    }\r\n\r\n    if(this.search.membership == '' && this.search.text == '' && this.search.status == ''){\r\n      this.dataSource = this.originalDataSource;\r\n    }\r\n    this.table.offset = 0;\r\n  }\r\n\r\n  fieldValueChange(id, value, fieldName){\r\n    if(this.FieldsValue.length > 0){\r\n      let checkValue = false;\r\n      for(let i = 0; i < this.FieldsValue.length; i++){\r\n        if(this.FieldsValue[i].id == id){\r\n          this.FieldsValue[i].value = value;\r\n          checkValue = true;\r\n        }\r\n      }\r\n      if(!checkValue){\r\n        this.FieldsValue.push({\"id\": id, \"value\": value, \"fieldName\": fieldName});\r\n      }\r\n    }\r\n    else{\r\n      this.FieldsValue.push({\"id\": id, \"value\": value, \"fieldName\": fieldName});\r\n    }\r\n    console.log('val -' +this.FieldsValue);\r\n  }\r\n\r\n  public handleAddressChange(address) {\r\n    this.newaddress = address.formatted_address;\r\n    console.log(this.getComponentByType(address,\"street_number\"));\r\n    console.log(this.getComponentByType(address,\"route\"));\r\n    console.log(this.getComponentByType(address,\"locality\"));\r\n    console.log(this.getComponentByType(address,\"administrative_area_level_1\"));\r\n    console.log(this.getComponentByType(address,\"postal_code\"));\r\n    console.log(this.getComponentByType(address,\"country\"));\r\n    if(this.getComponentByType(address,\"street_number\") != ''){\r\n      this.users.address1 = this.getComponentByType(address,\"street_number\") +', ';\r\n    }\r\n    if(this.getComponentByType(address,\"route\") != ''){\r\n      this.users.address1 += this.getComponentByType(address,\"route\");\r\n    }\r\n    this.users.city = this.getComponentByType(address,\"locality\");\r\n    this.users.state = this.getComponentByType(address,\"administrative_area_level_1\");\r\n    this.users.postcode = this.getComponentByType(address,\"postal_code\");\r\n    this.users.country = this.getComponentByType(address,\"country\");\r\n    console.log('this.users - '+JSON.stringify(this.users));\r\n  }\r\n\r\n  public getComponentByType(address, type) {\r\n    if(!type)\r\n        return null;\r\n\r\n    if (!address || !address.address_components || address.address_components.length == 0)\r\n        return null;\r\n\r\n    type = type.toLowerCase();\r\n\r\n    for (let comp of address.address_components) {\r\n        if(!comp.types || comp.types.length == 0)\r\n            continue;\r\n\r\n        if(comp.types.findIndex(x => x.toLowerCase() == type) > -1)\r\n            return comp['long_name'];\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  edituser(id){\r\n    let val = ((id*5362)/12345);\r\n    this.router.navigate(['/users/edit-user'],{queryParams:{id:window.btoa(val.toString()), source:'admin'}});\r\n  }\r\n\r\n  removeblacklisteduser(id){\r\n    this.userservice.removeblacklisteduser(id).then(data => {\r\n      if(data['status'] == 'success'){\r\n       this.snotifyService.error('User Removed From Blacklisted.', '', this.getConfig());\r\n        let store;\r\n        if(this.storeName.startsWith(\"Auto One\")){\r\n          store = this.storeName;\r\n        }\r\n        else{\r\n          store = '';\r\n        }\r\n        this.userservice.getUsersByStatus(\"b\", store, new Date().getTime()).then(data => {\r\n          this.dataSource = [];\r\n          this.collectionSize = [];\r\n          if(data['status'] == \"success\"){\r\n            this.dataSource = data['user'];\r\n            this.collectionSize = data['user'].length;\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  toggle(col) {\r\n    const isChecked = this.isChecked(col);\r\n    console.log('isChecked value - ' + isChecked);\r\n    if(isChecked) {\r\n      this.columns = this.columns.filter(c => {\r\n        console.log('Name - ' + c.name);\r\n        return c.name !== col.name;\r\n      });\r\n    } else {\r\n      this.columns = [...this.columns, col];\r\n      console.log('columns - ' + this.columns);\r\n    }\r\n  }\r\n\r\n  isChecked(col) {\r\n    return this.columns.find(c => {\r\n      return c.name === col.name;\r\n    });\r\n  }\r\n\r\n  getConfig(): SnotifyToastConfig {\r\n      this.snotifyService.setDefaults({\r\n          global: {\r\n              newOnTop: this.newTop,\r\n              maxAtPosition: this.blockMax,\r\n              maxOnScreen: this.dockMax,\r\n          }\r\n      });\r\n      return {\r\n          bodyMaxLength: this.bodyMaxLength,\r\n          titleMaxLength: this.titleMaxLength,\r\n          backdrop: this.backdrop,\r\n          position: this.position,\r\n          timeout: this.timeout,\r\n          showProgressBar: this.progressBar,\r\n          closeOnClick: this.closeClick,\r\n          pauseOnHover: this.pauseHover\r\n      };\r\n  }\r\n\r\n  addUser(){\r\n    this.showTable = false;\r\n    this.showInvite = false;\r\n  }\r\n\r\n  inviteUser(){\r\n    this.showTable = false;\r\n    this.showInvite = true;\r\n  }\r\n\r\n  sendInvite(id,email){\r\n    this.submitted = true;\r\n    this.userservice.sendEmail(id,email,this.userId['organization_id']).then(data => {\r\n      if(data['status'] == 'Failed'){\r\n        this.snotifyService.error('User Already Exists', '', this.getConfig());\r\n        this.submitted = false;\r\n      }\r\n      else if(data['status'] == 'success'){\r\n        this.getActiveUsers();\r\n        this.showInvite = false;\r\n        this.showTable = true;\r\n        this.submitted = false;\r\n        this.inviteForm.reset();\r\n        const { timeout, closeOnClick, ...config } = this.getConfig();\r\n        this.snotifyService.confirm('Email Sent successfully!', 'Success', {\r\n\t            ...config,\r\n\t            buttons: [\r\n\t                { text: 'Ok', action: (toast) => {\r\n\t                \tthis.snotifyService.remove(toast.id);\r\n\t                } }\r\n\t            ]\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public SelectedTab;\r\n  selectUser(value){\r\n    console.log('Selected - ' + this.selectedTab);\r\n    this.SelectedTab = value.nextId;\r\n    console.log('Selected id - ' + this.SelectedTab);\r\n    let store;\r\n    if(this.storeName.startsWith(\"Auto One\")){\r\n      store = this.storeName;\r\n    }\r\n    else{\r\n      store = '';\r\n    }\r\n    this.userservice.getUsersByStatus(value.nextId, store, new Date().getTime()).then(data => {\r\n      this.dataSource = [];\r\n      this.collectionSize = [];\r\n      if(data['status'] == \"success\"){\r\n        this.dataSource = data['user'];\r\n        this.collectionSize = data['user'].length;\r\n      }\r\n    });\r\n  }\r\n\r\n  getActiveUsers(){\r\n    let store;\r\n    if(this.storeName.startsWith(\"Auto One\") || this.storeName.startsWith(\"National Office\")){\r\n      store = this.storeName;\r\n    }\r\n    else{\r\n      store = '';\r\n    }\r\n    this.userservice.getUsers(store,new Date().getTime()).then(data => {\r\n      console.log(data['user']);\r\n      if(data['status'] == 'success'){\r\n        this.dataSource = data['user'];\r\n        this.originalDataSource = data['user'];\r\n        this.filteredData = data['user'];\r\n        this.collectionSize = data['user'].length;\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    error => {\r\n    });\r\n    \r\n    // this.userservice.getUsersByStatus('all', store, new Date().getTime()).then(data => {\r\n    //   this.dataSource = [];\r\n    //   this.collectionSize = [];\r\n    //   if(data['status'] == \"success\"){\r\n    //     this.dataSource = data['user'];\r\n    //     this.collectionSize = data['user'].length;\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  cancelEdit(){\r\n    this.adduserForm.reset();\r\n    this.submitted = false;\r\n    this.showTable = true;\r\n    this.getActiveUsers();\r\n    //this.SelectedTab = 'y';\r\n    //this.selectUser(this.SelectedTab);\r\n  }\r\n\r\n  onReactiveFormSubmit(){\r\n    if(this.ageCheck()){\r\n      this.dateerror = false;\r\n      this.submitted = true;\r\n      let role = '';\r\n      let organization = '';\r\n  \t\tif (this.adduserForm.invalid) {\r\n        return;\r\n      }\r\n  \t\tif(!this.showlistadmin){\r\n  \t\t\tthis.listadmin = 3; // users groupid\r\n  \t\t}\r\n      if(!this.isSuperAdmin){\r\n        this.users.role = '3';\r\n        this.users.organization = localStorage.getItem('oi');\r\n      }\r\n      let dynamicfields = '';\r\n      if(this.extraFields){\r\n        this.users.fields = JSON.stringify(this.FieldsValue);\r\n      }\r\n      else{\r\n        this.users.fields = '';\r\n      }\r\n      this.users.address = this.newaddress;\r\n\t    this.userservice.addUser(this.users).then(data => {\r\n\t\t\tif(data['status'] == \"success\"){\r\n            this.snotifyService.success('User Added Successfully', '', this.getConfig());\r\n        this.showTable = true;\r\n        this.showInvite = false;\r\n        this.getActiveUsers();\r\n        this.adduserForm.reset();\r\n        this.submitted = false;\r\n\t\t\t\t//this.router.navigate(['/users/users']);\r\n\t\t\t}\r\n\t\t\telse if(data['status'] == \"Failed\"){\r\n        this.submitted = false;\r\n\t\t\t}\r\n\t\t\telse if(data['status'] == \"User Exits\"){\r\n\t\t\t\tif(data['value'] == \"Username Already Exits.\"){\r\n\t\t\t\t\tthis.usernameerror = true;\r\n\t\t\t\t\tthis.emailerror = false;\r\n          this.submitted = false;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tthis.emailerror = true;\r\n\t\t\t\t\tthis.usernameerror = false;\r\n          this.submitted = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n    }\r\n    else{\r\n      this.submitted = false;\r\n      this.dateerror = true;\r\n      this.users.dob = '';\r\n    }\r\n\t}\r\n\r\n  ageCheck(){\r\n      let today = new Date();\r\n      let birthDate = new Date(this.users.dob);\r\n      let age = today.getFullYear() - birthDate.getFullYear();\r\n      let m = today.getMonth() - birthDate.getMonth();\r\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age--;\r\n      }\r\n      if(age < 18){\r\n        return false;\r\n      }\r\n      else{\r\n        return true;\r\n      }\r\n    }\r\n\r\n  isNumberKey(evt) {\r\n    let charCode = (evt.which) ? evt.which : evt.keyCode;\r\n    if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)){\r\n        return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  blacklistUser(){\r\n    let self = this;\r\n    swal({\r\n      title: \"<h5>Email</h5>\",\r\n      input: \"text\",\r\n      showCloseButton: true,\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Save'\r\n    }).then(function(save){\r\n      console.log(JSON.stringify(save));\r\n      if(save.value){\r\n        self.saveBlacklistUser(save.value);\r\n      }\r\n    })\r\n  }\r\n\r\n  saveBlacklistUser(value){\r\n    this.userservice.getSubscribedListsFromEmail(value).then(data => {\r\n        console.log('response from service in template', data);\r\n      if(data['status'] == 'success'){\r\n        this.snotifyService.success('Blacklisted User Successfully', '', this.getConfig());\r\n      }\r\n      else if(data['status'] == \"user blacklisted\"){\r\n        this.snotifyService.success('User is already blacklisted', '', this.getConfig());\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteuser(id, email){\r\n    this.userservice.deleteUser(id).then(data => {\r\n      let store;\r\n      if(this.storeName.startsWith(\"Auto One\")){\r\n        store = this.storeName;\r\n      }\r\n      else{\r\n        store = '';\r\n      }\r\n      this.userservice.getUsertime(store,new Date().getTime()).then(data => {\r\n        if(data['status'] == 'success'){\r\n          this.dataSource = data['user'];\r\n          this.collectionSize = data['user'].length;\r\n        }\r\n      });\r\n      this.snotifyService.error('Deleted Successfully', '', this.getConfig());\r\n    },\r\n    error => {\r\n    });\r\n  }\r\n\r\n  userdelete(id, email) {\r\n    let self = this;\r\n    swal({\r\n        title: 'Are you sure want to delete?',\r\n        text: \"You won't be able to revert this!\",\r\n        type: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#0CC27E',\r\n        cancelButtonColor: '#FF586B',\r\n        confirmButtonText: 'Yes',\r\n        cancelButtonText: 'No, cancel!',\r\n        confirmButtonClass: 'btn btn-success btn-raised mr-5',\r\n        cancelButtonClass: 'btn btn-danger btn-raised',\r\n        buttonsStyling: false\r\n    }).then(function (yes) {\r\n       console.log(JSON.stringify(yes));\r\n      if(yes.value){\r\n     self.deleteuser(id, email);\r\n      }\r\n\r\n    }, function (dismiss) {\r\n        // dismiss can be 'overlay', 'cancel', 'close', 'esc', 'timer'\r\n       /* if (dismiss === 'cancel') {\r\n            swal(\r\n                'Cancelled',\r\n                'Your imaginary file is safe :)',\r\n                'error'\r\n            )\r\n        }*/\r\n    })\r\n}\r\n\r\n  deactivate(val, id, email, fname, lname){\r\n  console.log('deactivate Ev - ' + this.SelectedTab);\r\n  console.log('deactivate val - ' + val);\r\n  this.userservice.deactivateUsers(val, id).then(data => {\r\n    if(val == 'y'){\r\n      this.userservice.registerSuccessEmail(id,email,(fname+' '+lname)).then(data => {\r\n        //console.log('Email Sent - ' + JSON.stringify(data));\r\n      });\r\n    }\r\n    this.dataSource = [];\r\n    this.collectionSize = [];\r\n    let store;\r\n    if(this.storeName.startsWith(\"Auto One\") || this.storeName.startsWith(\"National Office\")){\r\n      store = this.storeName;\r\n    }\r\n    else{\r\n      store = '';\r\n    }\r\n    this.userservice.getUsersByStatus(this.SelectedTab, store, new Date().getTime()).then(data => {\r\n      this.dataSource = [];\r\n      this.collectionSize = [];\r\n      if(data['status'] == \"success\"){\r\n        this.dataSource = data['user'];\r\n        this.collectionSize = data['user'].length;\r\n      }\r\n    });\r\n    if(val == 'n'){\r\n      this.snotifyService.success('Deactivated Successfully', '', this.getConfig());\r\n    }\r\n    else if(val == 'y'){\r\n      this.snotifyService.success('Activated Successfully', '', this.getConfig());\r\n    }\r\n  });\r\n}\r\n\r\n  userdeactivate(y, id, email, fname, lname) {\r\n    let self = this;\r\n    swal({\r\n        title: 'Are you sure want to?',\r\n        text: \"\",\r\n        type: 'warning',\r\n        showCancelButton: true,\r\n        showCloseButton: true,\r\n        confirmButtonColor: '#0CC27E',\r\n        cancelButtonColor: '#FF586B',\r\n        confirmButtonText: 'Deactivate',\r\n        cancelButtonText: 'Cancel',\r\n        confirmButtonClass: 'btn btn-success btn-raised mr-5',\r\n        cancelButtonClass: 'btn btn-danger btn-raised',\r\n        buttonsStyling: false\r\n    }).then(function (deactivate) {\r\n      console.log(JSON.stringify(deactivate));\r\n      if(deactivate.value){\r\n     self.deactivate(y, id, email, fname, lname);\r\n      }\r\n\r\n    }, function (dismiss) {\r\n      if (dismiss === 'cancel') {\r\n\r\n        }\r\n        // dismiss can be 'overlay', 'cancel', 'close', 'esc', 'timer'\r\n\r\n    })\r\n}\r\n\r\n  useractivate(n, id, email, fname, lname) {\r\n    let self = this;\r\n    swal({\r\n        title: 'Are you sure?',\r\n        text: \"\",\r\n        type: 'warning',\r\n        showCancelButton: true,\r\n        showCloseButton: true,\r\n        confirmButtonColor: '#0CC27E',\r\n        cancelButtonColor: '#FF586B',\r\n        confirmButtonText: 'Activate',\r\n        cancelButtonText: 'Cancel',\r\n        confirmButtonClass: 'btn btn-success btn-raised mr-5',\r\n        cancelButtonClass: 'btn btn-danger btn-raised',\r\n        buttonsStyling: false\r\n    }).then(function (activate) {\r\n      console.log(JSON.stringify(activate));\r\n      if(activate.value){\r\n     self.deactivate(n, id, email, fname, lname);\r\n      }\r\n\r\n    }, function (dismiss) {\r\n      if (dismiss === 'cancel') {\r\n\r\n        }\r\n        // dismiss can be 'overlay', 'cancel', 'close', 'esc', 'timer'\r\n\r\n    })\r\n}\r\n\r\n  CleasrSearch(){\r\n    this.search.text = '';\r\n    this.search.membership = '';\r\n    this.search.status = '';\r\n    this.dataSource = this.originalDataSource;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AddUsersComponent } from \"./add-users/add-users.component\";\r\nimport { SubscribersComponent } from \"./subscribers/subscribers.component\";\r\nimport { UsersListComponent } from \"./users-list/users-list.component\";\r\nimport { EditUserComponent } from \"./edit-user/edit-user.component\";\r\nimport { MoveUsersComponent } from \"./move-users/move-users.component\";\r\nimport { ProfileComponent } from \"./profile/profile.component\";\r\nimport { ListsComponent } from \"../lists/lists.component\";\r\nimport { SegmentsComponent } from './segments/segments.component';\r\nimport { CheckinComponent } from './checkin/checkin.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'add-user',\r\n        component: AddUsersComponent,\r\n        data: {\r\n          title: 'Add User'\r\n        }\r\n      },\r\n      {\r\n        path: 'subscribers',\r\n        component: SubscribersComponent,\r\n        data: {\r\n          title: 'Subscribers'\r\n        }\r\n      },\r\n      {\r\n        path: 'users',\r\n        component: UsersListComponent,\r\n        data: {\r\n          title: 'Users'\r\n        }\r\n      },\r\n      {\r\n        path: 'lists',\r\n        component: ListsComponent,\r\n        data: {\r\n          title: 'Lists'\r\n        }\r\n      },\r\n      {\r\n        path: 'edit-user',\r\n        component: EditUserComponent,\r\n        data: {\r\n          title: 'Edit User'\r\n        }\r\n      },\r\n      {\r\n        path: 'move-users',\r\n        component: MoveUsersComponent,\r\n        data: {\r\n          title: 'Move Users'\r\n        }\r\n      },\r\n      {\r\n        path: 'profile',\r\n        component: ProfileComponent,\r\n        data: {\r\n          title: 'User Profile'\r\n        }\r\n      },\r\n      {\r\n        path: 'segments',\r\n        component: SegmentsComponent,\r\n        data: {\r\n          title: 'Segments'\r\n        }\r\n      },\r\n      {\r\n        path: 'checkin',\r\n        component: CheckinComponent,\r\n        data: {\r\n          title: 'checkin'\r\n        }\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UsersRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CustomFormsModule } from 'ng2-validation';\r\n\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { UsersRoutingModule } from \"./users-routing.module\";\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AddUsersComponent } from \"./add-users/add-users.component\";\r\nimport { SubscribersComponent } from \"./subscribers/subscribers.component\";\r\nimport { UsersListComponent } from \"./users-list/users-list.component\";\r\nimport { ListsComponent } from \"../lists/lists.component\";\r\nimport { EditUserComponent } from \"./edit-user/edit-user.component\";\r\nimport { MoveUsersComponent } from \"./move-users/move-users.component\";\r\nimport { ProfileComponent } from \"./profile/profile.component\";\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { UiSwitchModule } from 'ngx-ui-switch';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\n\r\nimport { GooglePlaceModule } from \"ngx-google-places-autocomplete\";\r\nimport { SelectDropDownModule } from 'ngx-select-dropdown';\r\nimport { SegmentsComponent } from './segments/segments.component';\r\nimport { CheckinComponent } from './checkin/checkin.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        CustomFormsModule,\r\n        UsersRoutingModule,\r\n        Ng2SmartTableModule,\r\n        NgbModule,\r\n        NgxPaginationModule,\r\n        GooglePlaceModule,\r\n        UiSwitchModule,\r\n        NgxDatatableModule,\r\n        SelectDropDownModule\r\n    ],\r\n    declarations: [\r\n        AddUsersComponent,\r\n        SubscribersComponent,\r\n        UsersListComponent,\r\n        ListsComponent,\r\n        EditUserComponent,\r\n        MoveUsersComponent,\r\n        ProfileComponent,\r\n        SegmentsComponent,\r\n        CheckinComponent\r\n    ]\r\n})\r\nexport class UsersModule { }\r\n"],"sourceRoot":""}