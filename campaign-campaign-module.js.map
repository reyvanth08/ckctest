{"version":3,"sources":["webpack:///./src/app/campaign/abtesting-stats/abtesting-stats.component.html","webpack:///./src/app/campaign/abtesting-stats/abtesting-stats.component.scss","webpack:///./src/app/campaign/abtesting-stats/abtesting-stats.component.ts","webpack:///./src/app/campaign/campaign-routing.module.ts","webpack:///./src/app/campaign/campaign.module.ts","webpack:///./src/app/campaign/email-automation/email-automation.component.html","webpack:///./src/app/campaign/email-automation/email-automation.component.scss","webpack:///./src/app/campaign/email-automation/email-automation.component.ts","webpack:///./src/app/campaign/failed-campaign/failed-campaign.component.html","webpack:///./src/app/campaign/failed-campaign/failed-campaign.component.scss","webpack:///./src/app/campaign/failed-campaign/failed-campaign.component.ts","webpack:///./src/app/campaign/keys/keys.component.html","webpack:///./src/app/campaign/keys/keys.component.scss","webpack:///./src/app/campaign/keys/keys.component.ts","webpack:///./src/app/campaign/multiple-campaign/multiple-campaign.component.html","webpack:///./src/app/campaign/multiple-campaign/multiple-campaign.component.scss","webpack:///./src/app/campaign/multiple-campaign/multiple-campaign.component.ts","webpack:///./src/app/campaign/newsletter/newsletter.component.html","webpack:///./src/app/campaign/newsletter/newsletter.component.scss","webpack:///./src/app/campaign/newsletter/newsletter.component.ts","webpack:///./src/app/campaign/reports/reports.component.html","webpack:///./src/app/campaign/reports/reports.component.scss","webpack:///./src/app/campaign/reports/reports.component.ts"],"names":[],"mappings":"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","file":"campaign-campaign-module.js","sourcesContent":["module.exports = \"<section class=\\\"basic-elements\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<!--Tabset Starts-->\\r\\n\\t\\t<div class=\\\"col-md-12 col-lg-12\\\">\\r\\n\\t\\t\\t<ngb-tabset (tabChange)=\\\"selectData($event)\\\">\\r\\n\\t\\t\\t\\t<ngb-tab title=\\\"A/B Testing Result\\\">\\r\\n\\t\\t\\t\\t\\t<ng-template ngbTabContent>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t        <div class=\\\"card-header\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"!successSent\\\">\\r\\n\\t\\t\\t\\t\\t          \\tA/B Test for <b>{{name}}</b> - <strong class=\\\"text-warning\\\">In Progress.</strong>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"successSent\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tA/B Test for <b>{{name}}</b> - <strong class=\\\"text-success\\\">Sent Successfully</strong>.\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"text-right\\\" *ngIf=\\\"showmanualSent\\\">\\r\\n\\t\\t\\t\\t\\t\\t          <button type=\\\"button\\\" class=\\\"btn btn-raised btn-success\\\" (click)=\\\"sendCampaign()\\\">Send</button> the Winner Campaing {{winnerType}} for {{name}}\\r\\n\\t\\t\\t\\t\\t\\t        </div>\\r\\n\\t\\t\\t\\t\\t        </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<lib-highcharts-angular *ngIf=\\\"loadChart\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [Highcharts]=\\\"Highcharts\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  [options]=\\\"chartOptions\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  style=\\\"width: 100%; height: 400px; display: block;\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t></lib-highcharts-angular>\\r\\n\\t\\t\\t\\t\\t        </div>\\r\\n\\t\\t\\t\\t\\t      </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Campaign OverView</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Version A</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Version B</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>Opens</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{campaignOverView?.openARate}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{campaignOverView?.openBRate}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>Total Clicks</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{campaignOverView?.clickARate}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{campaignOverView?.clickBRate}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>Unsubscribes</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{campaignOverView?.unsubscribeCountA}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{campaignOverView?.unsubscribeCountB}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\t        </div>\\r\\n\\t\\t\\t\\t\\t      </div>\\r\\n\\t\\t\\t\\t\\t    </div>\\r\\n\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t</ngb-tab>\\r\\n\\t\\t\\t\\t<ngb-tab title=\\\"Overview\\\" id=\\\"Overview\\\" active=\\\"SelectedTab == 'Overview'\\\" *ngIf=\\\"successSent\\\">\\r\\n\\t\\t\\t\\t\\t<ng-template ngbTabContent>\\r\\n\\t\\t\\t\\t\\t\\t<ng4-loading-spinner> </ng4-loading-spinner>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xl-4 col-lg-6 col-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"px-3 py-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"media\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"media-body text-left align-self-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"icon-envelope-open info font-large-2 float-left\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"media-body text-right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h3>{{openCount}}</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>Opened</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xl-4 col-lg-6 col-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"px-3 py-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"media\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"media-body text-left align-self-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"icon-link warning font-large-2 float-left\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"media-body text-right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h3>{{clickCount}}</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>Clicked</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xl-4 col-lg-6 col-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"px-3 py-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"media\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"media-body text-left align-self-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"icon-envelope success font-large-2 float-left\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"media-body text-right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h3>{{totalSent - openCount}}</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>Unopened</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xl-6 col-lg-12 col-sm-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-header pb-0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-title-wrap bar-primary\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h4 class=\\\"card-title\\\">Report Detail</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br/><br/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"subjecta != ''\\\"><b>Subject A</b>: {{subjecta}}</p><br/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"subjectb != ''\\\"><b>Subject B</b>: {{subjectb}}</p><br/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Sent To</b>: {{list}}<br/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Total Recipients</b>: {{noOfUsers}}<br/><br/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xl-6 col-lg-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-header pb-0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-title-wrap bar-primary\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h4 class=\\\"card-title\\\">Sends <span class=\\\"smallContent\\\">Last sent on </span></h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-6 col-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card gradient-mint\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        <div class=\\\"card-body\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t          <div class=\\\"px-3 py-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t            <div class=\\\"media\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t              <div class=\\\"align-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t                <i class=\\\"fas fa-check-double font-large-2 text-white\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t              </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t              <div class=\\\"media-body text-white text-right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t                <h3 class=\\\"text-white\\\">{{totalSentPerc | number : '1.0-2'}}%</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t                <span>Delivered</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t              </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t          </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t    </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-6 col-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card gradient-red-pink\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        <div class=\\\"card-body\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t          <div class=\\\"px-3 py-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t            <div class=\\\"media\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t              <div class=\\\"align-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t              \\t<i class=\\\"fas fa-exclamation-triangle font-large-2 text-white\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t              </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t              <div class=\\\"media-body text-white text-right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t                <h3 class=\\\"text-white\\\">{{notSentPerc | number : '1.0-2'}}%</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t                <span>Bounced</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t              </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t          </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t    </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t        <div class=\\\"card-header\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t          <div class=\\\"card-title-wrap bar-primary\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t            <h4 class=\\\"card-title\\\">Links</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t          </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t        </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t        <div class=\\\"card-body\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t          \\t<div class=\\\"card-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let link of links\\\">\\r\\n\\t                  \\t\\t\\t\\t<td *ngIf=\\\"(link.clickCount - link.openCount) != 0 && (link.link != null && link.link != '')\\\">\\r\\n\\t                      \\t\\t\\t\\t{{link.link}}\\r\\n\\t                  \\t\\t\\t\\t</td>\\r\\n\\t                  \\t\\t\\t\\t<td style=\\\"width: 100%;\\\" *ngIf=\\\"(link.clickCount - link.openCount) != 0 && (link.link != null && link.link != '')\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ngb-progressbar type=\\\"info\\\" [value]=\\\"(link.clickCount / link.openCount) * 100\\\" [striped]=\\\"true\\\" [animated]=\\\"true\\\" class=\\\"progress-bar-md\\\"></ngb-progressbar> {{link.clickCount}} of {{link.openCount}}\\r\\n\\t                  \\t\\t\\t\\t</td>\\r\\n\\t                  \\t\\t\\t\\t<td style=\\\"width: 100%;\\\" *ngIf=\\\"(link.clickCount - link.openCount) == 0 && (link.link != null && link.link != '')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ngb-progressbar type=\\\"success\\\" [value]=\\\"100\\\" [striped]=\\\"true\\\" class=\\\"progress-bar-md\\\"></ngb-progressbar>{{link.clickCount}} of {{link.openCount}}\\r\\n\\t                  \\t\\t\\t\\t</td>\\r\\n\\t              \\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t            \\t</table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-header\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-title-wrap bar-primary\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h4 class=\\\"card-title\\\">Domains</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let domain of domains\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td *ngIf=\\\"(domain.count) != 0 && (domain.domains != null && domain.domains != '')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{domain.domains}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td style=\\\"width: 100%;\\\" *ngIf=\\\"(domain.count) != 0 && (domain.domains != null && domain.domains != '')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ngb-progressbar type=\\\"success\\\" [value]=\\\"(domain.count / noOfUsers) * 100\\\" [striped]=\\\"true\\\" class=\\\"progress-bar-md\\\"></ngb-progressbar> {{domain.count}} of {{noOfUsers}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t</ngb-tab>\\r\\n\\t\\t\\t\\t<ngb-tab title=\\\"Link\\\" id=\\\"Link\\\" active=\\\"SelectedTab == 'Link'\\\" *ngIf=\\\"successSent\\\">\\r\\n\\t\\t\\t\\t\\t<ng-template ngbTabContent>\\r\\n\\t\\t\\t\\t\\t\\t<ng4-loading-spinner> </ng4-loading-spinner>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t        <div class=\\\"card-header\\\">\\r\\n\\t\\t\\t\\t\\t          <div class=\\\"card-title-wrap bar-primary\\\">\\r\\n\\t\\t\\t\\t\\t            <h4 class=\\\"card-title\\\">Links</h4>\\r\\n\\t\\t\\t\\t\\t          </div>\\r\\n\\t\\t\\t\\t\\t        </div>\\r\\n\\t\\t\\t\\t\\t        <div class=\\\"card-body\\\">\\r\\n\\t\\t\\t\\t\\t         \\t<div class=\\\"card-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let link of links\\\">\\r\\n\\t\\t \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <td *ngIf=\\\"(link.clickCount - link.openCount) != 0 && (link.link != null && link.link != '')\\\">\\r\\n\\t\\t \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t {{link.link}}\\r\\n\\t\\t \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t </td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <td style=\\\"width: 100%;\\\" *ngIf=\\\"(link.clickCount - link.openCount) != 0 && (link.link != null && link.link != '')\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <ngb-progressbar type=\\\"info\\\" [value]=\\\"(link.clickCount / link.openCount) * 100\\\" [striped]=\\\"true\\\" [animated]=\\\"true\\\" class=\\\"progress-bar-md\\\"></ngb-progressbar> {{link.clickCount}} of {{link.openCount}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t </td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <td style=\\\"width: 100%;\\\" *ngIf=\\\"(link.clickCount - link.openCount) == 0 && (link.link != null && link.link != '')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <ngb-progressbar type=\\\"success\\\" [value]=\\\"100\\\" [striped]=\\\"true\\\" class=\\\"progress-bar-md\\\"></ngb-progressbar>{{link.clickCount}} of {{link.openCount}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t </td>\\r\\n\\t\\t \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t </tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t            \\t</table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t</ngb-tab>\\r\\n\\t\\t\\t\\t<ngb-tab title=\\\"Domain\\\" id=\\\"Domain\\\" active=\\\"SelectedTab == 'Domain'\\\" *ngIf=\\\"successSent\\\">\\r\\n\\t\\t\\t\\t\\t<ng-template ngbTabContent>\\r\\n\\t\\t\\t\\t\\t\\t<ng4-loading-spinner> </ng4-loading-spinner>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-header\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-title-wrap bar-primary\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<h4 class=\\\"card-title\\\">Domains</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let domain of domains\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td *ngIf=\\\"(domain.count) != 0 && (domain.domains != null && domain.domains != '')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{domain.domains}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td style=\\\"width: 100%;\\\" *ngIf=\\\"(domain.count) != 0 && (domain.domains != null && domain.domains != '')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ngb-progressbar type=\\\"success\\\" [value]=\\\"(domain.count / noOfUsers) * 100\\\" [striped]=\\\"true\\\" class=\\\"progress-bar-md\\\"></ngb-progressbar> {{domain.count}} of {{noOfUsers}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t</ngb-tab>\\r\\n\\t\\t\\t\\t<ngb-tab title=\\\"Activity\\\" id=\\\"Activity\\\" active=\\\"SelectedTab == 'Activity'\\\" *ngIf=\\\"successSent\\\">\\r\\n\\t\\t\\t\\t\\t<ng-template ngbTabContent>\\r\\n\\t\\t\\t\\t\\t\\t<ng4-loading-spinner> </ng4-loading-spinner>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-header\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-title-wrap bar-success\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-info btn-raised\\\" (click)=\\\"openSubscriberList()\\\" style=\\\"margin-right: 14px;\\\">Opens</button>\\r\\n\\t\\t\\t    \\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary btn-raised\\\" (click)=\\\"clickSubscriberList()\\\" style=\\\"margin-right: 14px;\\\">Clicks</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-warning btn-raised\\\" (click)=\\\"unSubscriberList()\\\" style=\\\"margin-right: 14px;\\\">Unsubscribers</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\" *ngIf=\\\"openCountTable\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table table-responsive-sm\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>First Name</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Last Name</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Email</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>DateTime</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let data of openSubscribers\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{data.firstName}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{data.lastName}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{data.email}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{data.dateTime}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\" *ngIf=\\\"clickCountTable\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table table-responsive-sm\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>LinkCount</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Link</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Name</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let data of clickSubscribers\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{data.linkCount}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{data.link}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{data.name}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\" *ngIf=\\\"unsubscriberTable\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table table-responsive-sm\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>FirstName</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>LastName</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Email</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>UnsubscribeDate</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let data of campaignUnsubscribers\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{data.firstName}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{data.lastName}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{data.email}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{data.unsubscribe_date}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t</ngb-tab>\\r\\n\\t\\t\\t</ngb-tabset>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</section>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhbXBhaWduL2FidGVzdGluZy1zdGF0cy9hYnRlc3Rpbmctc3RhdHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport * as Chartist from 'chartist';\r\nimport { ChartType, ChartEvent } from \"ng-chartist\";\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n//import { interval } from 'rxjs/observable/interval';\r\nimport { interval, Subscription } from 'rxjs';\r\nimport * as Highcharts from 'highcharts';\r\n\r\nimport * as chartsData from '../../shared/configs/ngx-charts.config';\r\nimport * as shape from 'd3-shape';\r\n\r\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\r\n\r\nimport { StatisticsService } from '../../shared/data/statistics.service';\r\nimport { newsLetterService } from '../../shared/data/newsletter.service';\r\nimport { ABTestingStatisticsService } from '../../shared/data/abtestingStats.service';\r\n\r\n@Component({\r\n  selector: 'app-abtesting-stats',\r\n  templateUrl: './abtesting-stats.component.html',\r\n  styleUrls: ['./abtesting-stats.component.scss']\r\n})\r\nexport class AbtestingStatsComponent implements OnInit {\r\n  newsletterId;\r\n  abtestingReport;\r\n  openRates;\r\n  clickRates;\r\n  unsubscribers;\r\n  name;\r\n  subscription: Subscription;\r\n  currentTime = new Date();\r\n  Highcharts = Highcharts;\r\n\r\n  loadChart = false;\r\n  chartOptions;\r\n  stopTime;\r\n\r\n  lineChartXAxisLabel;\r\n  lineChartYAxisLabel;\r\n  lineChartName;\r\n  ChartColorScheme = {\r\n      domain: ['#666EE8', '#FF9149', '#FF4961', '#AAAAAA']\r\n  };\r\n  lineChartMulti;\r\n  winnerRate;\r\n  sendABtestManual = false;\r\n  showmanualSent = false;\r\n  winnerType = '';\r\n  successSent = false;\r\n  stoplooping = false;\r\n  campaignOverView;\r\n\r\n  newsletterDate;\r\n  newsletterDetail;\r\n  subject;\r\n  list;\r\n  totalSent = 0;\r\n  notSent = 0;\r\n  sent;\r\n  totalSentPerc;\r\n  notSentPerc;\r\n  clickCount;\r\n  openCount;\r\n  links;\r\n  domains;\r\n  openSubscribers;\r\n  clickSubscribers;\r\n  campaignUnsubscribers;\r\n  clickCountTable: boolean;\r\n  openCountTable: boolean;\r\n  unsubscriberTable: boolean;\r\n  SelectedTab = '';\r\n  noOfUsers = 0;\r\n\r\n  subjecta='';\r\n  subjectb='';\r\n\r\n  constructor(private spinner: Ng4LoadingSpinnerService, public abtestingStatisticsService: ABTestingStatisticsService, public statisticsService: StatisticsService, private route: ActivatedRoute, public router: Router, public newsLetterService: newsLetterService) {\r\n    this.route.queryParams.subscribe(params => {\r\n      this.newsletterId = window.atob(params['id']);\r\n    });\r\n    this.newsletterId = ((this.newsletterId * 8000 ) / 1080);\r\n    this.newsLetterService.getabtestingResult(this.newsletterId).then(data => {\r\n      if(data['status'] == 'success'){\r\n        this.campaignOverView = data['newsletter'][0];\r\n        console.log(this.campaignOverView);\r\n      }\r\n      else{\r\n        this.campaignOverView = '';\r\n      }\r\n    });\r\n    this.statisticsService.getabtestingReportById(this.newsletterId, new Date().getTime()).then(data => {\r\n      //console.log(data['reports']);\r\n      //console.log('1-'+JSON.stringify(this.chartOptions));\r\n      if(data['status'] == 'success'){\r\n        this.abtestingReport = data['reports'];\r\n        if(this.abtestingReport[0].type == 'manual'){\r\n          this.sendABtestManual = true;\r\n        }\r\n        this.subjecta = this.abtestingReport[0].subjecta;\r\n        this.subjectb = this.abtestingReport[0].subjectb;\r\n        this.winnerRate = this.abtestingReport[0].rateTrack;\r\n        this.name = this.abtestingReport[0].name;\r\n        let senddate = this.abtestingReport[0].sendDate.split('-');\r\n        //console.log(this.abtestingReport[0].endTime);\r\n        let enddate = this.abtestingReport[0].endTime.split(' ')[0].split('-');\r\n        this.stopTime = new Date(this.abtestingReport[0].endTime.split(' ')[0]+' '+this.abtestingReport[0].endTime.split(' ')[1]);\r\n        let timeval = this.abtestingReport[0].sendTime.split(':');\r\n        let month = new Date(this.abtestingReport[0].sendDate).getUTCMonth();\r\n        //console.log('this.stopTime cons - '+ this.stopTime);\r\n        this.statisticsService.getabTestStats(this.newsletterId, new Date().getTime()).then(data => {\r\n          if(data['status'] == 'success'){\r\n            let chartData = [];\r\n\r\n            if(this.abtestingReport[0].rateTrack == 'open'){\r\n              this.openRates = data['reports']['open'];\r\n              if(this.openRates.length > 0){\r\n                let lineChartData = [\r\n                  {\r\n                    \"name\": this.abtestingReport[0].rateTrack + ' Rate',\r\n                    \"series\": []\r\n                  }\r\n                ];\r\n                let lineyAxisTicks = [];\r\n                let dataA = [];\r\n                let dataB = [];\r\n                for(let i=0; i<this.openRates.length;i++){\r\n                  if(this.openRates[i].hasOwnProperty('OpenCounta')){\r\n                    lineChartData[0].series.push({\"name\": this.openRates[i].OpenTimea, \"value\": parseInt(this.openRates[i].OpenCounta)});\r\n                    lineyAxisTicks.push(parseInt(this.openRates[i].OpenCounta));\r\n                  }\r\n                  if(this.openRates[i].hasOwnProperty('OpenCountb')){\r\n                    lineChartData[0].series.push({\"name\": this.openRates[i].OpenTimeb, \"value\": parseInt(this.openRates[i].OpenCountb)});\r\n                    lineyAxisTicks.push(parseInt(this.openRates[i].OpenCountb));\r\n                  }\r\n                  if(this.openRates[i].hasOwnProperty('OpenCounta')){\r\n                    dataA.push([this.openRates[i].OpenTimea, parseInt(this.openRates[i].OpenCounta)]);\r\n                  }\r\n                  else{\r\n                    dataA.push([\"00:00\",0]);\r\n                  }\r\n                  if(this.openRates[i].hasOwnProperty('OpenCountb')){\r\n                    dataB.push([this.openRates[i].OpenTimeb, parseInt(this.openRates[i].OpenCountb)]);\r\n                  }\r\n                  else{\r\n                    dataB.push([\"00:00\",0]);\r\n                  }\r\n                }\r\n                chartData.push({\"layout\": [...lineChartData], \"yAxisTicks\": lineyAxisTicks, \"name\": this.abtestingReport[0].rateTrack + \" Rate For A/B Testing\", \"chartType\": \"'line'\", \"xaxis\": this.abtestingReport[0].rateTrack + \" Rate\", \"yaxis\": \"Time\"});\r\n                // console.log(this.chartOptions.series[0].data);\r\n                // this.chartOptions.series[0].data = dataA;\r\n                // console.log(this.chartOptions.series[0].data);\r\n                // console.log(this.chartOptions.series[1].data);\r\n                // this.chartOptions.series[1].data = dataB;\r\n                // console.log(this.chartOptions.series[1].data);\r\n                // this.chartOptions.xAxis.tickInterval = (10000*60);\r\n                // let senddate = this.abtestingReport[0].sendDate.split('-');\r\n                // let enddate = this.abtestingReport[0].endTime.split('-');\r\n                // this.chartOptions.xAxis.min = Date.UTC(senddate[0], senddate[1], senddate[2], 0, 0, 0);\r\n                // this.chartOptions.xAxis.max = Date.UTC(enddate[0], enddate[1], enddate[2], 0, 0, 0);\r\n                // this.chartOptions.plotOptions['series'].pointInterval = (10000*60);\r\n                // this.chartOptions.plotOptions['series'].pointStart = Date.UTC(senddate[0], senddate[1], senddate[2], 0, 0, 0);\r\n\r\n                //console.log(senddate[0]+','+ parseInt(senddate[1] - 1)+','+ senddate[2]);\r\n                Highcharts.setOptions({\r\n                    time: {\r\n                        timezoneOffset: parseInt(timeval[0]) * 60\r\n                    }\r\n                });\r\n                this.chartOptions = {\r\n                  title: {\r\n                      text: this.abtestingReport[0].rateTrack + ' Rate'\r\n                  },\r\n                  chart: {\r\n                    type: 'spline'\r\n                  },\r\n                  xAxis: {\r\n                      type: 'datetime'\r\n                  },\r\n                  series: [{\r\n                      data: dataA,\r\n                      pointStart: Date.UTC((senddate[0]), month, (senddate[2])),\r\n                      pointInterval: 10000 * 60,\r\n                      name:'version A'\r\n                  },\r\n                  {\r\n                      data: dataB,\r\n                      pointStart: Date.UTC((senddate[0]), month, (senddate[2])),\r\n                      pointInterval: 10000 * 60,\r\n                      name:'version B'\r\n                  }]\r\n                };\r\n              this.loadChart = true;\r\n                //this.chartOptions = {\r\n                  // chart: {\r\n                  //   type: 'spline'\r\n                  // },\r\n                  // xAxis: {\r\n                  //     type: 'datetime'\r\n                  // },\r\n                  // plotOptions: {\r\n                  //   series: {\r\n                  //       pointInterval : timeval[0] * 60\r\n                  //   }\r\n                  // },\r\n                  // series: [{\r\n                  //     data: [dataA],\r\n                  //     //pointStart: Date.UTC(senddate[0], parseInt(senddate[1] - 1), senddate[2]),\r\n                  //     //pointInterval: 60 * 10000,\r\n                  //     name:'version A'\r\n                  // },\r\n                  // {\r\n                  //     data: [dataB],\r\n                  //     //pointStart: Date.UTC(senddate[0], (senddate[1] - 1), senddate[2]),\r\n                  //     //pointInterval: 60 * 10000,\r\n                  //     name:'version B'\r\n                  // }]\r\n                  //   xAxis: {\r\n                  //   type :'datetime',\r\n                  //   tickInterval : 10000 * 60,\r\n                  //   min : Date.UTC(senddate[0], senddate[1], senddate[2]),\r\n                  //   max : Date.UTC(enddate[0], enddate[1], enddate[2]),\r\n                  //   label : {\r\n                  //     align : 'left'\r\n                  //   }\r\n                  // },\r\n                  // yAxis: {\r\n                  //   title: {\r\n                  //       text: this.abtestingReport[0].rateTrack +' Rate'\r\n                  //   },\r\n                  //   lineWidth: 2,\r\n                  //   plotLines: [{\r\n                  //       value: 0,\r\n                  //       width: 1,\r\n                  //       color: '#808080'\r\n                  //   }]\r\n                  // },\r\n                  // plotOptions: {\r\n                  //   series: {\r\n                  //       pointStart: Date.UTC(senddate[0], senddate[1], senddate[2]),\r\n                  //       pointInterval : 10000 * 60\r\n                  //   }\r\n                  // },\r\n                  // series: [{\r\n                  //     data:dataA,\r\n                  //     name:'version A'\r\n                  //     },{\r\n                  //     data:dataB,\r\n                  //     name:'version B'\r\n                  //   }]\r\n              \t//}\r\n              }\r\n              //this.chartOptions = chartData;\r\n              console.log(this.chartOptions);\r\n            }\r\n            if(this.abtestingReport[0].rateTrack == 'click'){\r\n              this.clickRates = data['reports']['click'];\r\n              if(this.clickRates.length > 0){\r\n              let dataA = [];\r\n              let dataB = [];\r\n              for(let i=0; i<this.clickRates.length;i++){\r\n                if(this.clickRates[i].hasOwnProperty('linkCounta')){\r\n                  dataA.push([this.clickRates[i].ClickTimea, parseInt(this.clickRates[i].linkCounta)]);\r\n                }\r\n                else{\r\n                  dataA.push([\"00:00\",0]);\r\n                }\r\n                if(this.clickRates[i].hasOwnProperty('linkCountb')){\r\n                  dataB.push([this.clickRates[i].ClickTimeb, parseInt(this.clickRates[i].linkCountb)]);\r\n                }\r\n                else{\r\n                  dataB.push([\"00:00\",0]);\r\n                }\r\n              }\r\n              this.chartOptions = {\r\n                title: {\r\n                    text: this.abtestingReport[0].rateTrack + ' Rate'\r\n                },\r\n                chart: {\r\n                  type: 'spline'\r\n                },\r\n                xAxis: {\r\n                    type: 'datetime'\r\n                },\r\n                series: [{\r\n                    data: dataA,\r\n                    pointStart: Date.UTC(parseInt(senddate[0]), month, parseInt(senddate[2])),\r\n                    pointInterval: 10000 * 60,\r\n                    name:'version A'\r\n                },\r\n                {\r\n                    data: dataB,\r\n                    pointStart: Date.UTC(parseInt(senddate[0]), month, parseInt(senddate[2])),\r\n                    pointInterval: 10000 * 60,\r\n                    name:'version B'\r\n                }]\r\n              };\r\n              console.log(JSON.stringify(this.chartOptions));\r\n              this.loadChart = true;\r\n              // Highcharts.setOptions({\r\n              //     time: {\r\n              //         timezoneOffset: 5 * 60\r\n              //     }\r\n              // });\r\n              //\r\n              // Highcharts.chart('container', {\r\n              //     chart:{\r\n              //       type: 'line'\r\n              //     },\r\n              //     title: {\r\n              //         text: 'Timezone offset is 5 hours (=EST). The data series starts at midnight UTC, which is 7 PM EST.'\r\n              //     },\r\n              //     xAxis: {\r\n              //         type: 'datetime'\r\n              //     },\r\n              //     series: [{\r\n              //         data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 95.6, 54.4],\r\n              //         pointStart: Date.UTC(2013, 0, 1),\r\n              //         pointInterval: 36e5 // one hour\r\n              //     }]\r\n              // });\r\n\r\n              // this.chartOptions = {\r\n              //   title: {\r\n              //       text: 'Timezone offset is 5 hours (=EST). The data series starts at midnight UTC, which is 7 PM EST.'\r\n              //   },\r\n              //\r\n              //   xAxis: {\r\n              //       type: 'datetime'\r\n              //   },\r\n              //\r\n              //   series: [{\r\n              //       data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 95.6, 54.4],\r\n              //       pointStart: Date.UTC(2013, 0, 1),\r\n              //       pointInterval: 36e5 // one hour\r\n              //   }]\r\n                // chart: {\r\n                //   type: 'spline'\r\n                // },\r\n                // xAxis: {\r\n                //     type: 'datetime'\r\n                // },\r\n                // plotOptions: {\r\n                //   series: {\r\n                //       pointInterval : timeval[0] * 60\r\n                //   }\r\n                // },\r\n                // series: [{\r\n                //     data: [dataA],\r\n                //     //pointStart: Date.UTC(senddate[0], (senddate[1] - 1), senddate[2]),\r\n                //     //pointInterval: 10000 * 60,\r\n                //     name:'version A'\r\n                // },\r\n                // {\r\n                //     data: [dataB],\r\n                //     //pointStart: Date.UTC(senddate[0], (senddate[1] - 1), senddate[2]),\r\n                //     //pointInterval: 10000 * 60,\r\n                //     name:'version B'\r\n                // }]\r\n              //};\r\n            }\r\n            }\r\n            if(this.abtestingReport[0].rateTrack == 'unsubscriber'){\r\n              this.unsubscribers = data['reports']['unsubscribe'];\r\n              if(this.unsubscribers.length > 0){\r\n                  let dataA = [];\r\n                  let dataB = [];\r\n                  for(let i=0; i<this.unsubscribers.length;i++){\r\n                    if(this.unsubscribers[i].hasOwnProperty('unsubscribeCountA')){\r\n                      dataA.push([this.unsubscribers[i].Timea, parseInt(this.unsubscribers[i].unsubscribeCountA)]);\r\n                    }\r\n                    else{\r\n                      dataA.push([\"00:00\",0]);\r\n                    }\r\n                    if(this.unsubscribers[i].hasOwnProperty('unsubscribeCountB')){\r\n                      dataB.push([this.unsubscribers[i].Timeb, parseInt(this.unsubscribers[i].unsubscribeCountB)]);\r\n                    }\r\n                    else{\r\n                      dataB.push([\"00:00\",0]);\r\n                    }\r\n                  }\r\n                  this.chartOptions = {\r\n                    title: {\r\n                        text: this.abtestingReport[0].rateTrack + ' Rate'\r\n                    },\r\n                    chart: {\r\n                      type: 'spline'\r\n                    },\r\n                    xAxis: {\r\n                        type: 'datetime'\r\n                    },\r\n                    series: [{\r\n                        data: dataA,\r\n                        pointStart: Date.UTC(parseInt(senddate[0]), month, parseInt(senddate[2])),\r\n                        pointInterval: 10000 * 60,\r\n                        name:'version A'\r\n                    },\r\n                    {\r\n                        data: dataB,\r\n                        pointStart: Date.UTC(parseInt(senddate[0]), month, parseInt(senddate[2])),\r\n                        pointInterval: 10000 * 60,\r\n                        name:'version B'\r\n                    }]\r\n                  };\r\n                  console.log(JSON.stringify(this.chartOptions));\r\n                  this.loadChart = true;\r\n              }\r\n            }\r\n          }\r\n          console.log('2-'+JSON.stringify(this.chartOptions));\r\n\r\n        });\r\n\r\n        if(this.stopTime.getTime() <= new Date().getTime()){\r\n          this.stoplooping = true;\r\n          if(this.sendABtestManual){\r\n            this.newsLetterService.getABTestingWinner(this.newsletterId, this.winnerRate).then(data => {\r\n              if(data['status'] == 'success'){\r\n                this.showmanualSent = true;\r\n                this.successSent = false;\r\n                this.winnerType = data['newsletter'];\r\n                this.subscription.unsubscribe();\r\n              }\r\n              else{\r\n                this.showmanualSent = false;\r\n                this.successSent = true;\r\n                this.subscription.unsubscribe();\r\n              }\r\n            });\r\n          }\r\n          else{\r\n            this.newsLetterService.sendABTestingNewletterwinner(this.newsletterId, this.winnerRate).then(data => {\r\n              if(data['status']){\r\n                this.successSent = true;\r\n                this.subscription.unsubscribe();\r\n              }\r\n            });\r\n          }\r\n        }\r\n      }\r\n    },\r\n    error => {\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if(!this.stoplooping){\r\n      this.subscription = interval(2000 * 60).subscribe(x => {\r\n        // console.log('this.stopTime - '+this.stopTime);\r\n        // console.log('this.stopTime getTime - '+this.stopTime.getTime());\r\n        // console.log('new date - '+new Date().getTime());\r\n        if(this.stopTime.getTime() <= new Date().getTime()){\r\n          this.stoplooping = true;\r\n          if(this.sendABtestManual){\r\n            this.newsLetterService.getABTestingWinner(this.newsletterId, this.winnerRate).then(data => {\r\n              if(data['status'] == 'success'){\r\n                this.showmanualSent = true;\r\n                this.successSent = false;\r\n                this.winnerType = data['newsletter'];\r\n                this.subscription.unsubscribe();\r\n              }\r\n              else{\r\n                this.showmanualSent = false;\r\n                this.successSent = true;\r\n                this.subscription.unsubscribe();\r\n              }\r\n            });\r\n          }\r\n          else{\r\n            this.newsLetterService.sendABTestingNewletterwinner(this.newsletterId, this.winnerRate).then(data => {\r\n              if(data['status']){\r\n                this.successSent = true;\r\n                this.subscription.unsubscribe();\r\n              }\r\n            });\r\n          }\r\n        }\r\n        else{\r\n          if(this.stopTime.getTime() > new Date().getTime()){\r\n            this.statisticsService.getabtestingReportById(this.newsletterId, new Date().getTime()).then(data => {\r\n              if(data['status'] == 'success'){\r\n                this.abtestingReport = data['reports'];\r\n\r\n                this.winnerRate = this.abtestingReport[0].rateTrack;\r\n                this.name = this.abtestingReport[0].name;\r\n                let senddate = this.abtestingReport[0].sendDate.split('-');\r\n                //console.log(this.abtestingReport[0].endTime);\r\n                let enddate = this.abtestingReport[0].endTime.split(' ')[0].split('-');\r\n                this.stopTime = new Date(this.abtestingReport[0].endTime.split(' ')[0]+' '+this.abtestingReport[0].endTime.split(' ')[1]);\r\n                let timeval = this.abtestingReport[0].sendTime.split(':');\r\n                let month = new Date(this.abtestingReport[0].sendDate).getUTCMonth();\r\n                console.log('date greater - '+ month);\r\n                this.statisticsService.getabTestStats(this.newsletterId, new Date().getTime()).then(data => {\r\n                  if(data['status'] == 'success'){\r\n                    let chartData = [];\r\n                    if(this.abtestingReport[0].rateTrack == 'open'){\r\n                      this.openRates = data['reports']['open'];\r\n                      if(this.openRates.length > 0){\r\n                        let lineChartData = [\r\n                          {\r\n                            \"name\": this.abtestingReport[0].rateTrack + ' Rate',\r\n                            \"series\": []\r\n                          }\r\n                        ];\r\n                        let lineyAxisTicks = [];\r\n                        let dataA = [];\r\n                        let dataB = [];\r\n                        for(let i=0; i<this.openRates.length;i++){\r\n                          if(this.openRates[i].hasOwnProperty('OpenCounta')){\r\n                            lineChartData[0].series.push({\"name\": this.openRates[i].OpenTimea, \"value\": parseInt(this.openRates[i].OpenCounta)});\r\n                            lineyAxisTicks.push(parseInt(this.openRates[i].OpenCounta));\r\n                          }\r\n                          if(this.openRates[i].hasOwnProperty('OpenCountb')){\r\n                            lineChartData[0].series.push({\"name\": this.openRates[i].OpenTimeb, \"value\": parseInt(this.openRates[i].OpenCountb)});\r\n                            lineyAxisTicks.push(parseInt(this.openRates[i].OpenCountb));\r\n                          }\r\n                          if(this.openRates[i].hasOwnProperty('OpenCounta')){\r\n                            dataA.push([this.openRates[i].OpenTimea, parseInt(this.openRates[i].OpenCounta)]);\r\n                          }\r\n                          else{\r\n                            dataA.push([\"00:00\",0]);\r\n                          }\r\n                          if(this.openRates[i].hasOwnProperty('OpenCountb')){\r\n                            dataB.push([this.openRates[i].OpenTimeb, parseInt(this.openRates[i].OpenCountb)]);\r\n                          }\r\n                          else{\r\n                            dataB.push([\"00:00\",0]);\r\n                          }\r\n                        }\r\n                        chartData.push({\"layout\": [...lineChartData], \"yAxisTicks\": lineyAxisTicks, \"name\": this.abtestingReport[0].rateTrack + \" Rate For A/B Testing\", \"chartType\": \"'line'\", \"xaxis\": this.abtestingReport[0].rateTrack + \" Rate\", \"yaxis\": \"Time\"});\r\n                        // console.log(this.chartOptions.series[0].data);\r\n                        // this.chartOptions.series[0].data = dataA;\r\n                        // console.log(this.chartOptions.series[0].data);\r\n                        // console.log(this.chartOptions.series[1].data);\r\n                        // this.chartOptions.series[1].data = dataB;\r\n                        // console.log(this.chartOptions.series[1].data);\r\n                        // this.chartOptions.xAxis.tickInterval = (10000*60);\r\n                        // let senddate = this.abtestingReport[0].sendDate.split('-');\r\n                        // let enddate = this.abtestingReport[0].endTime.split('-');\r\n                        // this.chartOptions.xAxis.min = Date.UTC(senddate[0], senddate[1], senddate[2], 0, 0, 0);\r\n                        // this.chartOptions.xAxis.max = Date.UTC(enddate[0], enddate[1], enddate[2], 0, 0, 0);\r\n                        // this.chartOptions.plotOptions['series'].pointInterval = (10000*60);\r\n                        // this.chartOptions.plotOptions['series'].pointStart = Date.UTC(senddate[0], senddate[1], senddate[2], 0, 0, 0);\r\n\r\n                        //console.log(senddate[0]+','+ parseInt(senddate[1] - 1)+','+ senddate[2]);\r\n                        Highcharts.setOptions({\r\n                            time: {\r\n                                timezoneOffset: parseInt(timeval[0]) * 60\r\n                            }\r\n                        });\r\n                        this.chartOptions = {\r\n                          title: {\r\n                              text: this.abtestingReport[0].rateTrack + ' Rate'\r\n                          },\r\n                          chart: {\r\n                            type: 'spline'\r\n                          },\r\n                          xAxis: {\r\n                              type: 'datetime'\r\n                          },\r\n                          series: [{\r\n                              data: dataA,\r\n                              pointStart: Date.UTC((senddate[0]), month, (senddate[2])),\r\n                              pointInterval: 10000 * 60,\r\n                              name:'version A'\r\n                          },\r\n                          {\r\n                              data: dataB,\r\n                              pointStart: Date.UTC((senddate[0]), month, (senddate[2])),\r\n                              pointInterval: 10000 * 60,\r\n                              name:'version B'\r\n                          }]\r\n                        };\r\n                      this.loadChart = true;\r\n                      }\r\n                      console.log(this.chartOptions);\r\n                    }\r\n                    if(this.abtestingReport[0].rateTrack == 'click'){\r\n                      this.clickRates = data['reports']['click'];\r\n                      if(this.clickRates.length > 0){\r\n                      let dataA = [];\r\n                      let dataB = [];\r\n                      for(let i=0; i<this.clickRates.length;i++){\r\n                        if(this.clickRates[i].hasOwnProperty('linkCounta')){\r\n                          dataA.push([this.clickRates[i].ClickTimea, parseInt(this.clickRates[i].linkCounta)]);\r\n                        }\r\n                        else{\r\n                          dataA.push([\"00:00\",0]);\r\n                        }\r\n                        if(this.clickRates[i].hasOwnProperty('linkCountb')){\r\n                          dataB.push([this.clickRates[i].ClickTimeb, parseInt(this.clickRates[i].linkCountb)]);\r\n                        }\r\n                        else{\r\n                          dataB.push([\"00:00\",0]);\r\n                        }\r\n                      }\r\n                      this.chartOptions = {\r\n                        title: {\r\n                            text: this.abtestingReport[0].rateTrack + ' Rate'\r\n                        },\r\n                        chart: {\r\n                          type: 'spline'\r\n                        },\r\n                        xAxis: {\r\n                            type: 'datetime'\r\n                        },\r\n                        series: [{\r\n                            data: dataA,\r\n                            pointStart: Date.UTC(parseInt(senddate[0]), month, parseInt(senddate[2])),\r\n                            pointInterval: 10000 * 60,\r\n                            name:'version A'\r\n                        },\r\n                        {\r\n                            data: dataB,\r\n                            pointStart: Date.UTC(parseInt(senddate[0]), month, parseInt(senddate[2])),\r\n                            pointInterval: 10000 * 60,\r\n                            name:'version B'\r\n                        }]\r\n                      };\r\n\r\n                      this.loadChart = true;\r\n                    }\r\n                    }\r\n                    if(this.abtestingReport[0].rateTrack == 'unsubscriber'){\r\n                      this.unsubscribers = data['reports']['unsubscribe'];\r\n                      if(this.unsubscribers.length > 0){\r\n                          let dataA = [];\r\n                          let dataB = [];\r\n                          for(let i=0; i<this.unsubscribers.length;i++){\r\n                            if(this.unsubscribers[i].hasOwnProperty('unsubscribeCountA')){\r\n                              dataA.push([this.unsubscribers[i].Timea, parseInt(this.unsubscribers[i].unsubscribeCountA)]);\r\n                            }\r\n                            else{\r\n                              dataA.push([\"00:00\",0]);\r\n                            }\r\n                            if(this.unsubscribers[i].hasOwnProperty('unsubscribeCountB')){\r\n                              dataB.push([this.unsubscribers[i].Timeb, parseInt(this.unsubscribers[i].unsubscribeCountB)]);\r\n                            }\r\n                            else{\r\n                              dataB.push([\"00:00\",0]);\r\n                            }\r\n                          }\r\n                          this.chartOptions = {\r\n                            title: {\r\n                                text: this.abtestingReport[0].rateTrack + ' Rate'\r\n                            },\r\n                            chart: {\r\n                              type: 'spline'\r\n                            },\r\n                            xAxis: {\r\n                                type: 'datetime'\r\n                            },\r\n                            series: [{\r\n                                data: dataA,\r\n                                pointStart: Date.UTC(parseInt(senddate[0]), month, parseInt(senddate[2])),\r\n                                pointInterval: 10000 * 60,\r\n                                name:'version A'\r\n                            },\r\n                            {\r\n                                data: dataB,\r\n                                pointStart: Date.UTC(parseInt(senddate[0]), month, parseInt(senddate[2])),\r\n                                pointInterval: 10000 * 60,\r\n                                name:'version B'\r\n                            }]\r\n                          };\r\n                          console.log(JSON.stringify(this.chartOptions));\r\n                          this.loadChart = true;\r\n                      }\r\n                    }\r\n                  }\r\n                  console.log('2-'+JSON.stringify(this.chartOptions));\r\n                });\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n      this.newsLetterService.getabtestingResult(this.newsletterId).then(data => {\r\n        this.campaignOverView = '';\r\n        if(data['status'] == 'success'){\r\n          this.campaignOverView = data['newsletter'][0];\r\n          console.log(this.campaignOverView);\r\n        }\r\n        else{\r\n          this.campaignOverView = '';\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  selectData(value){\r\n    this.SelectedTab = value.nextId;\r\n    ////this.spinner.show();\r\n    if(value.nextId == 'Overview'){\r\n      this.abtestingStatisticsService.getReportById(this.newsletterId).then(data => {\r\n        if(data['status']){\r\n          //document.getElementById('messageTemplate').innerHTML = JSON.parse(data['reports'][0]['message']);\r\n          this.newsletterDetail = JSON.parse(data['reports'][0]['message']);\r\n          this.newsletterDate = data['reports'][0]['date'];\r\n          this.subject = data['reports'][0]['subject'];\r\n          this.list = data['reports'][0]['list'];\r\n          this.totalSent = data['reports'][0]['totalSent'];\r\n          this.notSent = data['reports'][0]['notSent'];\r\n          this.noOfUsers = data['reports'][0]['numberUsers'];\r\n          this.sent = data['reports'][0]['noOfUsers'] - data['reports'][0]['totalSent'];\r\n          this.totalSentPerc = ((data['reports'][0]['totalSent'] / data['reports'][0]['numberUsers']) * 100);//(((data['reports'][0]['totalSent'] - data['reports'][0]['notSent']) / data['reports'][0]['totalSent']) * 100);\r\n          this.notSentPerc = ((data['reports'][0]['notSent'] / data['reports'][0]['numberUsers']) * 100);//((data['reports'][0]['notSent'] / data['reports'][0]['totalSent']) * 100);\r\n          this.clickCount = data['reports'][0]['clickCount'];\r\n        }\r\n      },\r\n      error => {\r\n      });\r\n      this.abtestingStatisticsService.getclickCounts(this.newsletterId).then(data => {\r\n        if(data['status'] = 'success'){\r\n          this.links = data['reports'];\r\n          this.openCount = data['reports'][0]['openCount'];\r\n        }\r\n        else{\r\n          this.links = [];\r\n          this.openCount = [];\r\n        }\r\n      },\r\n      error => {\r\n      });\r\n      this.abtestingStatisticsService.getabtestingEmailDomain(this.newsletterId).then(data => {\r\n        if(data['status'] = 'success'){\r\n          this.domains = data['reports'];\r\n        }\r\n        else{\r\n          this.domains = [];\r\n        }\r\n      },\r\n      error => {\r\n      });\r\n      this.abtestingStatisticsService.getOpenSubscriberList(this.newsletterId).then(data => {\r\n        if(data['status'] = 'success'){\r\n          this.openSubscribers = data['reports'];\r\n        }\r\n      },\r\n      error => {\r\n      });\r\n\r\n      this.abtestingStatisticsService.getClickSubscriberList(this.newsletterId).then(data => {\r\n          if(data['status'] = 'success'){\r\n                this.clickSubscribers = data['reports'];\r\n            }\r\n      },\r\n      error => {\r\n      });\r\n\r\n      this.abtestingStatisticsService.getUnSubscriberList(this.newsletterId).then(data => {\r\n          if(data['status'] = 'success'){\r\n                this.campaignUnsubscribers = data['reports'];\r\n            }\r\n      },\r\n      error => {\r\n      });\r\n    }\r\n    else if(value.nextId == 'Link'){\r\n      this.abtestingStatisticsService.getReportById(this.newsletterId).then(data => {\r\n        if(data['status']){\r\n          //document.getElementById('messageTemplate').innerHTML = JSON.parse(data['reports'][0]['message']);\r\n          this.newsletterDetail = JSON.parse(data['reports'][0]['message']);\r\n          this.newsletterDate = data['reports'][0]['date'];\r\n          this.subject = data['reports'][0]['subject'];\r\n          this.list = data['reports'][0]['list'];\r\n          this.totalSent = data['reports'][0]['totalSent'];\r\n          this.notSent = data['reports'][0]['notSent'];\r\n          this.noOfUsers = data['reports'][0]['numberUsers'];\r\n          this.sent = data['reports'][0]['totalSent'] - data['reports'][0]['notSent'];\r\n          this.totalSentPerc = (((data['reports'][0]['totalSent'] - data['reports'][0]['notSent']) / data['reports'][0]['totalSent']) * 100);\r\n          this.notSentPerc = ((data['reports'][0]['notSent'] / data['reports'][0]['totalSent']) * 100);\r\n          this.clickCount = data['reports'][0]['clickCount'];\r\n          //console.log(data['reports']);\r\n        }\r\n      },\r\n      error => {\r\n      });\r\n      this.abtestingStatisticsService.getclickCounts(this.newsletterId).then(data => {\r\n          if(data['status'] = 'success'){\r\n              this.links = data['reports'];\r\n              this.openCount = data['reports'][0]['openCount'];\r\n          }\r\n          else{\r\n            this.links = [];\r\n            this.openCount = [];\r\n          }\r\n          //this.spinner.hide();\r\n      },\r\n      error => {\r\n      });\r\n    }\r\n    else if(value.nextId == 'Domain'){\r\n      this.abtestingStatisticsService.getReportById(this.newsletterId).then(data => {\r\n        if(data['status']){\r\n          //document.getElementById('messageTemplate').innerHTML = JSON.parse(data['reports'][0]['message']);\r\n          this.newsletterDetail = JSON.parse(data['reports'][0]['message']);\r\n          this.newsletterDate = data['reports'][0]['date'];\r\n          this.subject = data['reports'][0]['subject'];\r\n          this.list = data['reports'][0]['list'];\r\n          this.totalSent = data['reports'][0]['totalSent'];\r\n          this.notSent = data['reports'][0]['notSent'];\r\n          this.noOfUsers = data['reports'][0]['numberUsers'];\r\n          this.sent = data['reports'][0]['totalSent'] - data['reports'][0]['notSent'];\r\n          this.totalSentPerc = (((data['reports'][0]['totalSent'] - data['reports'][0]['notSent']) / data['reports'][0]['totalSent']) * 100);\r\n          this.notSentPerc = ((data['reports'][0]['notSent'] / data['reports'][0]['totalSent']) * 100);\r\n          this.clickCount = data['reports'][0]['clickCount'];\r\n          //console.log(data['reports']);\r\n        }\r\n      },\r\n      error => {\r\n      });\r\n      this.abtestingStatisticsService.getabtestingEmailDomain(this.newsletterId).then(data => {\r\n        if(data['status'] = 'success'){\r\n          this.domains = data['reports'];\r\n        }\r\n        else{\r\n          this.domains = [];\r\n        }\r\n        //this.spinner.hide();\r\n      },\r\n      error => {\r\n      });\r\n    }\r\n    else if(value.nextId == 'Activity'){\r\n      this.abtestingStatisticsService.getOpenSubscriberList(this.newsletterId).then(data => {\r\n          if(data['status'] = 'success'){\r\n            this.openSubscribers = data['reports'];\r\n          }\r\n          else{\r\n            this.openSubscribers = [];\r\n          }\r\n      },\r\n      error => {\r\n      });\r\n\r\n      this.abtestingStatisticsService.getClickSubscriberList(this.newsletterId).then(data => {\r\n          if(data['status'] = 'success'){\r\n            this.clickSubscribers = data['reports'];\r\n          }\r\n          else{\r\n            this.clickSubscribers = [];\r\n          }\r\n      },\r\n      error => {\r\n      });\r\n\r\n      this.abtestingStatisticsService.getUnSubscriberList(this.newsletterId).then(data => {\r\n          if(data['status'] = 'success'){\r\n            this.campaignUnsubscribers = data['reports'];\r\n          }\r\n          else{\r\n            this.campaignUnsubscribers = [];\r\n          }\r\n      },\r\n      error => {\r\n      });\r\n      this.clickCountTable=false;\r\n      this.unsubscriberTable=false;\r\n      this.openCountTable=true;\r\n    }\r\n  }\r\n\r\n  openSubscriberList () {\r\n    this.clickCountTable=false;\r\n    this.unsubscriberTable=false;\r\n    this.openCountTable=true;\r\n  }\r\n\r\n  clickSubscriberList () {\r\n    this.clickCountTable=true;\r\n    this.openCountTable=false;\r\n    this.unsubscriberTable=false;\r\n  }\r\n\r\n  unSubscriberList () {\r\n    this.unsubscriberTable=true;\r\n    this.clickCountTable=false;\r\n    this.openCountTable=false;\r\n  }\r\n\r\n  sendCampaign(){\r\n    this.newsLetterService.sendABTestingNewletterwinner(this.newsletterId, this.winnerRate).then(data => {\r\n      if(data['status']){\r\n        this.successSent = true;\r\n        this.showmanualSent = false;\r\n        this.subscription.unsubscribe();\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NewsletterComponent } from \"./newsletter/newsletter.component\";\r\nimport { ReportsComponent } from \"./reports/reports.component\";\r\nimport { EmailTemplateComponent } from \"../email-template/email-template.component\";\r\nimport { AbtestingStatsComponent } from \"./abtesting-stats/abtesting-stats.component\";\r\nimport { FailedCampaignComponent } from \"./failed-campaign/failed-campaign.component\";\r\nimport { EmailAutomationComponent } from './email-automation/email-automation.component';\r\nimport { KeysComponent } from './keys/keys.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'newsletter',\r\n        component: NewsletterComponent,\r\n        data: {\r\n          title: 'Newsletter Table'\r\n        }\r\n      },\r\n      {\r\n        path: 'reports',\r\n        component: ReportsComponent,\r\n        data: {\r\n          title: 'Reports Table'\r\n        }\r\n      },\r\n      {\r\n        path: 'emailtemplate',\r\n        component: EmailTemplateComponent,\r\n        data: {\r\n          title: 'Email Template'\r\n        }\r\n      },\r\n      {\r\n        path: 'abtestingStatics',\r\n        component: AbtestingStatsComponent,\r\n        data: {\r\n          title: 'AB Testing Statistics'\r\n        }\r\n      },\r\n      {\r\n        path: 'failedcampaign',\r\n        component: FailedCampaignComponent,\r\n        data: {\r\n          title: 'Campaigns Failed'\r\n        }\r\n      },\r\n      {\r\n       path: 'email-automation',\r\n       component: EmailAutomationComponent,\r\n       data: {\r\n         title: 'Email Automation'\r\n       }\r\n     },\r\n     {\r\n     path: 'keys',\r\n     component: KeysComponent,\r\n     data: {\r\n       title: 'Keys'\r\n     }\r\n   }\r\n\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CampaignRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { CampaignRoutingModule } from \"./campaign-routing.module\";\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\n\r\nimport { NewsletterComponent } from \"./newsletter/newsletter.component\";\r\nimport { ReportsComponent } from \"./reports/reports.component\";\r\nimport { EmailTemplateComponent } from \"../email-template/email-template.component\";\r\nimport { MultipleCampaignComponent } from \"./multiple-campaign/multiple-campaign.component\";\r\nimport { AbtestingStatsComponent } from \"./abtesting-stats/abtesting-stats.component\";\r\nimport { FailedCampaignComponent } from \"./failed-campaign/failed-campaign.component\";\r\nimport { MatchHeightModule } from \"../shared/directives/match-height.directive\";\r\n\r\nimport { ChartistModule } from 'ng-chartist';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\nimport { Ng4LoadingSpinnerModule } from 'ng4-loading-spinner';\r\n\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FroalaEditorModule, FroalaViewModule } from 'angular-froala-wysiwyg';\r\nimport { UiSwitchModule } from 'ngx-ui-switch';\r\nimport { ArchwizardModule } from 'angular-archwizard';\r\nimport { AngularHighchartsChartModule } from 'angular-highcharts-chart';\r\nimport { EmailAutomationComponent } from './email-automation/email-automation.component';\r\nimport { KeysComponent } from './keys/keys.component';\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        CampaignRoutingModule,\r\n        Ng2SmartTableModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        NgbModule,\r\n        NgxDatatableModule,\r\n        NgxPaginationModule,\r\n        FroalaEditorModule.forRoot(), FroalaViewModule.forRoot(),\r\n        UiSwitchModule,\r\n        ArchwizardModule,\r\n        AngularHighchartsChartModule,\r\n        ChartistModule,\r\n        NgxChartsModule,\r\n        MatchHeightModule,\r\n        Ng4LoadingSpinnerModule.forRoot()\r\n    ],\r\n    declarations: [\r\n        NewsletterComponent,\r\n        ReportsComponent,\r\n        EmailTemplateComponent,\r\n        MultipleCampaignComponent,\r\n        AbtestingStatsComponent,\r\n        FailedCampaignComponent,\r\n        EmailAutomationComponent,\r\n        KeysComponent\r\n    ]\r\n})\r\nexport class CampaignModule { }\r\n","module.exports = \"<section class=\\\"basic-elements\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n        <div class=\\\"content-header\\\">Email Automation</div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"showTable\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12\\\" style=\\\"text-align: right;\\\">\\r\\n              <p>\\r\\n                <a class=\\\"btn btn-social btn-round btn-min-width mr-2 mb-2 btn-outline-bitbucket right\\\" (click)=\\\"addemailAutomation()\\\"><span class=\\\"ft-plus\\\"></span>Create Email Automation</a>\\r\\n              </p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"card-block\\\">\\r\\n              <ngx-datatable class=\\\"material\\\" class=\\\"bootstrap\\\" [rows]=\\\"emailAutomationData\\\" [columns]=\\\"columns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\"  [limit]=\\\"10\\\" >\\r\\n                <ngx-datatable-column name=\\\"Event\\\" [width]=\\\"200\\\">\\r\\n                  <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                    {{row.event}}\\r\\n                  </ng-template>\\r\\n                </ngx-datatable-column>\\r\\n                <ngx-datatable-column name=\\\"Template\\\" [width]=\\\"300\\\">\\r\\n                  <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                   {{row.template}}\\r\\n                  </ng-template>\\r\\n                </ngx-datatable-column>\\r\\n                <ngx-datatable-column name=\\\"List\\\">\\r\\n                  <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                    {{row.list}}\\r\\n                  </ng-template>\\r\\n                </ngx-datatable-column>\\r\\n                <ngx-datatable-column name=\\\"Segment\\\">\\r\\n                  <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                    {{row.segment}}\\r\\n                  </ng-template>\\r\\n                </ngx-datatable-column>\\r\\n                <ngx-datatable-column name=\\\"Duration\\\">\\r\\n                  <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                    {{row.duration}}\\r\\n                  </ng-template>\\r\\n                </ngx-datatable-column>\\r\\n                <ngx-datatable-column name=\\\"Action\\\">\\r\\n                  <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\r\\n                    <a class=\\\"danger p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" *ngIf=\\\"row.status == 0\\\" (click)=\\\"deleteEmailAutomation(row.id)\\\">\\r\\n                    <i class=\\\"fas fa-trash font-medium-3 mr-2\\\"></i>\\r\\n                    </a>\\r\\n                    <a class=\\\"success p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" *ngIf=\\\"row.status == 1\\\" (click)=\\\"deleteEmailAutomation(row.id)\\\">\\r\\n                    <i class=\\\"fas fa-check font-medium-3 mr-2\\\"></i>\\r\\n                    </a>\\r\\n                  </ng-template>\\r\\n              </ngx-datatable-column>\\r\\n              </ngx-datatable>\\r\\n            </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"!showTable\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"card-block\\\">\\r\\n            <form [formGroup]=\\\"automationForm\\\" class=\\\"editForm\\\" novalidate>\\r\\n              <div class=\\\"col-lg-12\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <label>Send a notification</label>\\r\\n                  <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                    <input class=\\\"custom-control-input\\\" type=\\\"radio\\\" name=\\\"immediately\\\" formControlName=\\\"immediately\\\" id=\\\"immediately\\\" value=\\\"after\\\" [checked]=\\\"true\\\" style=\\\"margin-top: 6px;\\\">\\r\\n                    <label class=\\\"custom-control-label\\\" for=\\\"immediately\\\">After</label>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-lg-3 input-group\\\">\\r\\n                      <select class=\\\"form-control\\\" id=\\\"duration\\\" formControlName=\\\"duration\\\" [(ngModel)]=\\\"emailAutomation.duration\\\" placeholder=\\\"Duration\\\">\\r\\n                        <option value=\\\"1\\\">1</option>\\r\\n                        <option value=\\\"2\\\">2</option>\\r\\n                        <option value=\\\"3\\\">3</option>\\r\\n                        <option value=\\\"4\\\">4</option>\\r\\n                      </select>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-lg-3 input-group-append\\\">\\r\\n                    <select class=\\\"form-control\\\" id=\\\"span\\\" formControlName=\\\"span\\\" [(ngModel)]=\\\"emailAutomation.span\\\" placeholder=\\\"Span\\\">\\r\\n                      <option value=\\\"hours\\\">Hours</option>\\r\\n                      <option value=\\\"minutes\\\">Minutes</option>\\r\\n                      <option value=\\\"days\\\">Days</option>\\r\\n                    </select>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div><br />\\r\\n              <div class=\\\"col-lg-12\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-lg-6\\\">\\r\\n                    <label>Select an Event</label>\\r\\n                    <select class=\\\"form-control\\\" formControlName=\\\"event\\\" [(ngModel)]=\\\"emailAutomation.event\\\" id=\\\"event\\\" placeholder=\\\"Choose Event\\\" (change)=\\\"onChange($event.target.value)\\\">\\r\\n                      <option disabled=\\\"true\\\">Select Event</option>\\r\\n                      <option *ngFor=\\\"let item of events\\\" value=\\\"{{item.id}}\\\">{{item.title}}</option>\\r\\n                    </select>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-lg-6\\\">\\r\\n                    <label>Select an Template</label>\\r\\n                    <select class=\\\"form-control\\\" formControlName=\\\"template\\\" [(ngModel)]=\\\"emailAutomation.template\\\" id=\\\"template\\\" placeholder=\\\"Choose a Template\\\" [attr.disabled]=\\\"templateSelected ? '' : null\\\">\\r\\n                      <option disabled=\\\"true\\\">Select a template</option>\\r\\n                      <option *ngFor=\\\"let auto of emailTemplate\\\" value=\\\"{{auto.id}}\\\">{{auto.name}}</option>\\r\\n                    </select>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div><br />\\r\\n              <div class=\\\"col-lg-12\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <label>Choose</label>&nbsp;&nbsp;\\r\\n                  <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                    <input class=\\\"custom-control-input\\\" type=\\\"radio\\\" name=\\\"select\\\" [(ngModel)]=\\\"emailAutomation.select\\\" formControlName=\\\"select\\\" id=\\\"Segment\\\" value=\\\"segment\\\" style=\\\"margin-top: 6px;\\\">\\r\\n                    <label class=\\\"custom-control-label\\\" for=\\\"Segment\\\">Segment</label>\\r\\n                  </div>\\r\\n                  <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                    <input class=\\\"custom-control-input\\\" type=\\\"radio\\\" name=\\\"select\\\" [(ngModel)]=\\\"emailAutomation.select\\\" formControlName=\\\"select\\\" id=\\\"List\\\" value=\\\"list\\\" style=\\\"margin-top: 6px;\\\">\\r\\n                    <label class=\\\"custom-control-label\\\" for=\\\"List\\\">List</label>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-lg-12\\\">\\r\\n                    <div *ngIf=\\\"emailAutomation.select == 'list'\\\">\\r\\n                      <label>Select an List</label>\\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"list\\\" [(ngModel)]=\\\"emailAutomation.list\\\" id=\\\"list\\\" placeholder=\\\"Choose List\\\">\\r\\n                        <option disabled=\\\"true\\\">Select Lists</option>\\r\\n                        <option *ngFor=\\\"let item of lists\\\" value=\\\"{{item.id}}\\\">{{item.name}}</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-lg-12\\\">\\r\\n                    <div *ngIf=\\\"emailAutomation.select == 'segment'\\\">\\r\\n                      <label>Select an Segments</label>\\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"segment\\\" [(ngModel)]=\\\"emailAutomation.segment\\\" id=\\\"segment\\\" placeholder=\\\"Choose Segment\\\">\\r\\n                        <option disabled=\\\"true\\\">Select Segments</option>\\r\\n                        <option *ngFor=\\\"let item of segmentDetails\\\" value=\\\"{{item.id}}\\\">{{item.name}}</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div><br /><br/>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-danger btn-raised mr-1\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success btn-raised\\\" (click)=\\\"saveEmailAutomation()\\\" [disabled]=\\\"submitted\\\">Create Notification</button>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhbXBhaWduL2VtYWlsLWF1dG9tYXRpb24vZW1haWwtYXV0b21hdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl,FormGroup, FormArray, FormBuilder, Validators } from '@angular/forms';\r\nimport { EmailTemplateService } from '../../shared/data/email-template.service';\r\nimport { SnotifyService, SnotifyPosition, SnotifyToastConfig } from 'ng-snotify';\r\nimport { ListsService } from '../../shared/data/lists.service';\r\nimport { newsLetterService } from '../../shared/data/newsletter.service';\r\nimport { EventMappingService } from '../../shared/data/event-mapping.service';\r\n\r\n@Component({\r\n  selector: 'app-email-automation',\r\n  templateUrl: './email-automation.component.html',\r\n  styleUrls: ['./email-automation.component.scss']\r\n})\r\nexport class EmailAutomationComponent implements OnInit {\r\n\r\n automationForm:FormGroup;\r\n  emailTemplate;\r\n  emailTempData;\r\n  emailAutomationData;\r\n  columns = [\r\n    { name: 'Event' },\r\n    { name: 'Template' },\r\n    { name: 'List' },\r\n    { name: 'Segment' },\r\n    { name: 'Duration' },\r\n    { name: 'Action' }\r\n  ];\r\n   events ;\r\n   control;\r\n//  ContentEditable: boolean = false;\r\n    style = 'material';\r\n    title = 'Success';\r\n    body = 'Organization created successfully!';\r\n    timeout = 3000;\r\n    position: SnotifyPosition = SnotifyPosition.centerTop;\r\n    progressBar = true;\r\n    closeClick = true;\r\n    newTop = true;\r\n    backdrop = -1;\r\n    dockMax = 8;\r\n    blockMax = 6;\r\n    pauseHover = true;\r\n    titleMaxLength = 15;\r\n    bodyMaxLength = 80;\r\n    showTable = true;\r\n    submitted = false;\r\n    lists = [];\r\n    emailAutomation = {\r\n      'duration' : '',\r\n      'span' : '',\r\n      'event' : '',\r\n      'template' : '',\r\n      'list' : '',\r\n      'segment': '',\r\n      'id' : '',\r\n      'select': ''\r\n    };\r\n    segmentDetails = [];\r\n    eveMappings;\r\n    templateSelected = false;\r\n\r\n  constructor(private newsletterservice: newsLetterService, public eventmappingservice: EventMappingService, private listsservice: ListsService, private formBuilder: FormBuilder, public emailtemplateservice:EmailTemplateService, private snotifyService: SnotifyService) {\r\n      this.listsservice.getNewsletterList().then(data => {\r\n         if(data['status'] == 'success'){\r\n           this.lists = data['lists'];\r\n         }\r\n         else{\r\n           this.lists = []\r\n         }\r\n      });\r\n      this.emailtemplateservice.emailEvents().then(data => {\r\n         if(data['status'] == 'success'){\r\n           this.events = data['emailTemplate'];\r\n         }\r\n         else{\r\n           this.events = []\r\n         }\r\n      });\r\n      this.emailtemplateservice.getEmailTemp().then(data => {\r\n        if(data['status'] == 'success'){\r\n          this.emailTemplate = data['emailTemplate'];\r\n        }\r\n        else{\r\n          this.emailTemplate = []\r\n        }\r\n      });\r\n      this.emailtemplateservice.getEmailAutomation().then(data => {\r\n        if(data['status'] == 'success'){\r\n          this.emailAutomationData = data['automation'];\r\n        }\r\n        else{\r\n          this.emailAutomationData = []\r\n        }\r\n      });\r\n      this.newsletterservice.getMembersSegment().then(data => {\r\n        if(data['status'] == 'success'){\r\n          this.segmentDetails = data['newsletter'];\r\n        }\r\n        else{\r\n          this.segmentDetails = []\r\n        }\r\n      });\r\n      this.eventmappingservice.getEventMapping().then(data => {\r\n  \t\t\tif(data['status'] == 'success'){\r\n  \t\t\t\tthis.eveMappings = data['eventMapping'];\r\n  \t\t\t}\r\n  \t\t});\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.automationForm = new FormGroup({\r\n      'immediately': new FormControl(null, [Validators.required]),\r\n      'segment': new FormControl(null, [Validators.required]),\r\n      'list': new FormControl(null, [Validators.required]),\r\n      'duration': new FormControl(null, [Validators.required]),\r\n      'span': new FormControl(null, [Validators.required]),\r\n      'event': new FormControl(null, [Validators.required]),\r\n      'template': new FormControl(null, [Validators.required]),\r\n      'select': new FormControl(null, [Validators.required])\r\n    });\r\n   }\r\n\r\n  deleteEmailAutomation(id){\r\n     this.emailtemplateservice.deleteEmailAutomation(id).then(data => {\r\n       if(data['status'] == 'success'){\r\n         this.emailAutomationData = this.emailAutomationData.filter(h => h.id != id);\r\n         this.snotifyService.error('Automation Deleted Successfully', '', this.getConfig());\r\n       }\r\n     });\r\n   }\r\n\r\n  addemailAutomation(){\r\n    this.showTable = false;\r\n  }\r\n\r\n  cancel(){\r\n      this.automationForm.reset();\r\n      this.templateSelected = false;\r\n      this.emailAutomation.duration = '';\r\n      this.emailAutomation.span = '';\r\n      this.emailAutomation.event = '';\r\n      this.emailAutomation.template = '';\r\n      this.emailAutomation.list = '';\r\n      this.emailAutomation.segment = '';\r\n      this.emailAutomation.id = '';\r\n      this.emailAutomation.select = '';\r\n      this.showTable = true;\r\n  }\r\n\r\n  saveEmailAutomation(){\r\n  this.submitted = true;\r\n    if(this.emailAutomation.select == 'list'){\r\n      this.emailAutomation.segment = '';\r\n    }\r\n    else{\r\n      this.emailAutomation.list = '';\r\n    }\r\n    this.emailtemplateservice.addEmailAutomation(this.emailAutomation).then(data => {\r\n     this.submitted = true;\r\n      if(data['status'] == 'success'){\r\n        this.emailtemplateservice.getEmailAutomation().then(data => {\r\n          if(data['status'] == 'success'){\r\n            this.emailAutomationData = data['automation'];\r\n          }\r\n          else{\r\n            this.emailAutomationData = []\r\n          }\r\n          this.snotifyService.success('Automation Scheduled Successfully', '', this.getConfig());\r\n          this.submitted = false;\r\n          this.automationForm.reset();\r\n          this.emailAutomation.duration = '';\r\n          this.emailAutomation.span = '';\r\n          this.emailAutomation.event = '';\r\n          this.emailAutomation.template = '';\r\n          this.emailAutomation.list = '';\r\n          this.emailAutomation.segment = '';\r\n          this.emailAutomation.id = '';\r\n          this.emailAutomation.select = '';\r\n          this.showTable = true;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onChange(value){\r\n    for(let i=0; i<this.eveMappings.length; i++){\r\n      if(value == this.eveMappings[i]['event']){\r\n        this.snotifyService.success('Event Mapping is already done, if you need to change the template go to event mapping and edit the mapping in the table given.', '', this.getConfig());\r\n        this.emailAutomation.template = this.eveMappings[i]['template'];\r\n        this.templateSelected = true;\r\n        break;\r\n      }\r\n      else{\r\n        this.emailAutomation.template = '';\r\n        this.templateSelected = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  getConfig(): SnotifyToastConfig {\r\n    this.snotifyService.setDefaults({\r\n        global: {\r\n            newOnTop: this.newTop,\r\n            maxAtPosition: this.blockMax,\r\n            maxOnScreen: this.dockMax,\r\n        }\r\n    });\r\n    return {\r\n        bodyMaxLength: this.bodyMaxLength,\r\n        titleMaxLength: this.titleMaxLength,\r\n        backdrop: this.backdrop,\r\n        position: this.position,\r\n        timeout: this.timeout,\r\n        showProgressBar: this.progressBar,\r\n        closeOnClick: this.closeClick,\r\n        pauseOnHover: this.pauseHover\r\n    };\r\n  }\r\n}\r\n","module.exports = \"<section class=\\\"basic-elements\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n          <div class=\\\"content-header\\\">Failed Campaigns</div>\\r\\n      </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"card-block\\\">\\r\\n            <ngb-tabset (tabChange)=\\\"selectData($event)\\\">\\r\\n              <ngb-tab title=\\\"Normal Campaign\\\" id=\\\"normal\\\" active=\\\"SelectedTab == 'normal'\\\">\\r\\n                <ng-template ngbTabContent>\\r\\n                    <ngx-datatable class=\\\"material\\\" class=\\\"bootstrap\\\" [rows]=\\\"campaignDetails\\\" [columns]=\\\"columns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [sorts]=\\\"[{prop: ['name', 'subject', 'status', 'date'], dir: 'desc'}]\\\" [limit]=\\\"10\\\">\\r\\n                      <ngx-datatable-column name=\\\"Name\\\">\\r\\n                          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                              {{getName(row.name)}}\\r\\n                          </ng-template>\\r\\n                      </ngx-datatable-column>\\r\\n                      <ngx-datatable-column name=\\\"Subject\\\">\\r\\n                          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                              {{row.subject}}\\r\\n                          </ng-template>\\r\\n                      </ngx-datatable-column>\\r\\n                      <ngx-datatable-column name=\\\"Status\\\">\\r\\n                        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                            {{row.status}}\\r\\n                        </ng-template>\\r\\n                      </ngx-datatable-column>\\r\\n                      <ngx-datatable-column name=\\\"Date\\\">\\r\\n                          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                              {{row.date | date: 'MM/dd/yyyy'}}\\r\\n                          </ng-template>\\r\\n                      </ngx-datatable-column>\\r\\n                      <!-- <ngx-datatable-column name=\\\"Action\\\">\\r\\n                          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                              <a class=\\\"info p-0\\\" (click)=\\\"sendnewsletter(row.id);\\\" *ngIf=\\\"row.status == 'Pending'\\\"><i class=\\\"far fa-paper-plane font-medium-3 mr-2\\\"></i></a>\\r\\n                              <a class=\\\"warning p-0\\\" *ngIf=\\\"row.status == 'Scheduled'\\\"><i class=\\\"far fa-clock font-medium-3 mr-2\\\"></i></a>\\r\\n                              <a class=\\\"success p-0\\\" *ngIf=\\\"row.status == 'Sent'\\\"><i class=\\\"far fa-check-square font-medium-3 mr-2\\\"></i></a>\\r\\n                              <a class=\\\"danger p-0\\\" *ngIf=\\\"row.status == 'Pending'\\\" (click)=\\\"EditNewsletter(row.id);\\\"><i class=\\\"fas fa-pencil-alt font-medium-3 mr-2\\\"></i></a>\\r\\n                              <a class=\\\"Info p-0\\\" (click)=\\\"CopyNewsletter(row.id);\\\"><i class=\\\"fas fa-copy font-medium-3 mr-2\\\"></i></a>\\r\\n                          </ng-template>\\r\\n                      </ngx-datatable-column> -->\\r\\n                    </ngx-datatable>\\r\\n                </ng-template>\\r\\n              </ngb-tab>\\r\\n              <ngb-tab title=\\\"A/B Testing Campaign\\\" id=\\\"abtesting\\\" active=\\\"SelectedTab == 'abtesting'\\\">\\r\\n                <ng-template ngbTabContent>\\r\\n                  <ngx-datatable class=\\\"material bootstrap\\\" [rows]=\\\"abcampaignDetails\\\" [columns]=\\\"adtestingcolumns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [scrollbarH]=\\\"true\\\" [limit]=\\\"10\\\" [sorts]=\\\"[{prop: ['name', 'subject', 'status', 'date'], dir: 'desc'}]\\\" [limit]=\\\"10\\\">\\r\\n                    <ngx-datatable-column name=\\\"Name\\\" [width]=\\\"300\\\">\\r\\n                        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                            {{getName(row.name)}}\\r\\n                        </ng-template>\\r\\n                    </ngx-datatable-column>\\r\\n                    <ngx-datatable-column name=\\\"Subject\\\" [width]=\\\"300\\\">\\r\\n                        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                            <p *ngIf=\\\"row.subjecta != ''\\\">Subject A - {{row.subjecta}}</p><br/>\\r\\n                            <p *ngIf=\\\"row.subjectb != ''\\\">Subject B - {{row.subjectb}}</p>\\r\\n                        </ng-template>\\r\\n                    </ngx-datatable-column>\\r\\n                    <ngx-datatable-column name=\\\"From\\\" [width]=\\\"300\\\">\\r\\n                        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                            <p *ngIf=\\\"row.froma != ''\\\">From A - {{row.froma}}</p><br/>\\r\\n                            <p *ngIf=\\\"row.fromb != ''\\\">From B - {{row.fromb}}</p>\\r\\n                        </ng-template>\\r\\n                    </ngx-datatable-column>\\r\\n                    <ngx-datatable-column name=\\\"Campaign Winner Type\\\" [width]=\\\"300\\\">\\r\\n                        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                            {{row.rateTrack}}\\r\\n                        </ng-template>\\r\\n                    </ngx-datatable-column>\\r\\n                    <ngx-datatable-column name=\\\"Campaign A/B Testing On\\\" [width]=\\\"300\\\">\\r\\n                        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                            {{row.abtestingOn}}\\r\\n                        </ng-template>\\r\\n                    </ngx-datatable-column>\\r\\n                    <ngx-datatable-column name=\\\"Testing Time\\\" [width]=\\\"300\\\">\\r\\n                        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                            {{row.time}}\\r\\n                        </ng-template>\\r\\n                    </ngx-datatable-column>\\r\\n                    <ngx-datatable-column name=\\\"Status\\\" [width]=\\\"300\\\">\\r\\n                      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                          {{row.status}}\\r\\n                      </ng-template>\\r\\n                    </ngx-datatable-column>\\r\\n                    <!-- <ngx-datatable-column name=\\\"Date\\\" [width]=\\\"300\\\">\\r\\n                      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                          {{row.date | date: 'MM/dd/yyyy'}}\\r\\n                      </ng-template>\\r\\n                    </ngx-datatable-column> -->\\r\\n                  </ngx-datatable>\\r\\n                </ng-template>\\r\\n              </ngb-tab>\\r\\n            </ngb-tabset>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhbXBhaWduL2ZhaWxlZC1jYW1wYWlnbi9mYWlsZWQtY2FtcGFpZ24uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\n\r\n\r\nimport { newsLetterService } from '../../shared/data/newsletter.service';\r\n\r\n@Component({\r\n  selector: 'app-failed-campaign',\r\n  templateUrl: './failed-campaign.component.html',\r\n  styleUrls: ['./failed-campaign.component.scss']\r\n})\r\nexport class FailedCampaignComponent implements OnInit {\r\n\r\n  campaignDetails;\r\n  abcampaignDetails;\r\n\r\n  columns = [\r\n    { name: 'Name' },\r\n    { name: 'Subject' },\r\n    { name: 'Status' },\r\n    { name: 'Date' }\r\n  ];\r\n\r\n  adtestingcolumns = [\r\n    { name: 'Name' },\r\n    { name: 'Subject' },\r\n    { name: 'From' },\r\n    { name: 'Campaign Winner Type' },\r\n    { name: 'Campaign A/B Testing On' },\r\n    { name: 'Testing Time' },\r\n    { name: 'Status' }\r\n  ]\r\n\r\n  constructor(public newsletterservice: newsLetterService) { }\r\n\r\n  ngOnInit() {\r\n    this.newsletterservice.getFailedCampaigns().then(data => {\r\n      if(data['status']){\r\n        this.campaignDetails = data['newsletter']['normal'];\r\n        this.abcampaignDetails = data['newsletter']['abtesting'];\r\n      }\r\n    });\r\n  }\r\n  getName(name){\r\n    if (!name) return '';\r\n    if (name.length <= 20) {\r\n        return name;\r\n    }\r\n    return name.substr(0, 20) + '...';\r\n  }\r\n\r\n}\r\n","module.exports = \"<form [formGroup]=\\\"inputForm\\\">\\r\\n<div class=\\\"col-md-12\\\">\\r\\n<div class=\\\"form-group\\\">\\r\\n  <label for=\\\"basicInput\\\">API Key</label>\\r\\n  <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"api\\\">\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-md-12\\\">\\r\\n<div class=\\\"form-group\\\">\\r\\n<label for=\\\"basicInput\\\">Secret Key</label>\\r\\n<input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName=\\\"secret\\\" >\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div formArrayName=\\\"whitelist\\\">\\r\\n<div *ngFor=\\\"let tech of inputForm.controls.whitelist.controls; let i = index\\\"  [formGroupName]=\\\"i\\\" >\\r\\n  <div class = \\\"row\\\">\\r\\n<div class=\\\"col-md-10\\\">\\r\\n<label for=\\\"basicInput\\\"> Whitelist IPs</label>\\r\\n<input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName=\\\"whitelist\\\" >\\r\\n</div>\\r\\n<button class=\\\"btn btn-danger mr-1 btn-fab\\\" style=\\\"margin-bottom: 0.3rem; margin-top: 2rem; margin-right: 3rem;\\\"\\r\\n(click)=\\\"removeSetCondition(i)\\\"><i class=\\\"fa fa-times\\\"></i></button>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-block btn-raised\\\" (click)=\\\"addSetCondition()\\\">Add More</button>\\r\\n</div>\\r\\n<div style=\\\"text-align: right;\\\">\\r\\n<button type=\\\"submit\\\" class=\\\"btn btn-success btn-raised\\\" id=\\\"save_{{push}}\\\" (click)=\\\" save()\\\">Save Notification</button>\\r\\n</div>\\r\\n </form>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhbXBhaWduL2tleXMva2V5cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClientModule, HttpClient, HttpRequest, HttpResponse, HttpEventType } from '@angular/common/http';\r\nimport { FormControl,FormGroup, FormArray, FormBuilder, Validators } from '@angular/forms';\r\nimport { EmailTemplateService } from '../../shared/data/email-template.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-keys',\r\n  templateUrl: './keys.component.html',\r\n  styleUrls: ['./keys.component.scss']\r\n})\r\n\r\n\r\nexport class KeysComponent implements OnInit {\r\n\r\n inputForm:FormGroup;\r\n  water;\r\n  formData;\r\n  API='';\r\nSecret='';\r\n  constructor(private _FB: FormBuilder,public emailtemplateservice:EmailTemplateService, private http: HttpClient) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.inputForm = new FormGroup({\r\n          'api': new FormControl(null, [Validators.required]),\r\n          'secret': new FormControl(null, [Validators.required]),\r\n          //'whitelist': new FormControl(null, [Validators.required]),\r\n          'whitelist' : this._FB.array([\r\n            this.initMapFields()\r\n          ]),\r\n\r\n      });\r\n\r\n        this.emailtemplateservice.apiKeys().then(data =>{\r\n        if(data['status'] == 'success'){\r\n        this.inputForm.controls['secret'].setValue(data['data']);\r\n        }\r\n});\r\n}\r\n\r\n        initMapFields() : FormGroup{\r\n        return this._FB.group({\r\n        whitelist     : []\r\n        });\r\n        }\r\n\r\n\r\n        addSetCondition(){\r\n        const control = <FormArray>this.inputForm.controls.whitelist;\r\n        control.push(this.initMapFields());\r\n        }\r\n\r\n        removeSetCondition(i : number) : void{\r\n        const control = <FormArray>this.inputForm.controls.whitelist;\r\n        control.removeAt(i);\r\n\r\n        }\r\n\r\n        save () {\r\n\r\n        this.formData = {\r\n        API: this.inputForm.controls['api'].value,\r\n        Secret: this.inputForm.controls['secret'].value,\r\n        Whitelisted:this.inputForm.controls['whitelist'].value\r\n        }\r\n\r\n        this.emailtemplateservice.secretkey(this.formData).then(data => {\r\n        console.log('key - ' + JSON.stringify(data));\r\n        //if(data['status'] == 'success'){\r\n\r\n        });\r\n        }\r\n\r\n\r\n\r\n}\r\n","module.exports = \"<section class=\\\"basic-elements\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <aw-wizard #wizard navBarLayout=\\\"large-empty-symbols\\\">\\r\\n        <aw-wizard-step [stepTitle]=\\\"'Enter Details'\\\" [navigationSymbol]=\\\"{ symbol: '&#xf0c9;', fontFamily: 'FontAwesome' }\\\">\\r\\n          <form #mainForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\r\\n            <div class=\\\"form-body\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"name\\\">Name</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"abtest.name\\\" name=\\\"name\\\" [ngClass]=\\\"{ 'is-invalid': mainForm.submitted && name.invalid }\\\" required>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"name\\\">Select Test Type</label>\\r\\n                    <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                      <input type=\\\"radio\\\" id=\\\"customRadioInline1\\\" name=\\\"multipleData\\\" [(ngModel)]=\\\"abtest.multipleData\\\" value=\\\"subject\\\" class=\\\"custom-control-input\\\" [ngClass]=\\\"{ 'is-invalid': mainForm.submitted && multipleData.invalid }\\\" required>\\r\\n                      <label class=\\\"custom-control-label\\\" for=\\\"customRadioInline1\\\">Subject</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                      <input type=\\\"radio\\\" id=\\\"customRadioInline2\\\" name=\\\"multipleData\\\" [(ngModel)]=\\\"abtest.multipleData\\\" value=\\\"from\\\" class=\\\"custom-control-input\\\" [ngClass]=\\\"{ 'is-invalid': mainForm.submitted && multipleData.invalid }\\\" required>\\r\\n                      <label class=\\\"custom-control-label\\\" for=\\\"customRadioInline2\\\">From</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                      <input type=\\\"radio\\\" id=\\\"customRadioInline3\\\" name=\\\"multipleData\\\" [(ngModel)]=\\\"abtest.multipleData\\\" value=\\\"body\\\" class=\\\"custom-control-input\\\" [ngClass]=\\\"{ 'is-invalid': mainForm.submitted && multipleData.invalid }\\\" required>\\r\\n                      <label class=\\\"custom-control-label\\\" for=\\\"customRadioInline3\\\">Body</label>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                      <label>From</label>\\r\\n                      <div class=\\\"input-group\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                          <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\" *ngIf=\\\"abtest.multipleData == 'from'\\\">A</span>\\r\\n                        </div>\\r\\n                        <input class=\\\"form-control\\\" [(ngModel)]=\\\"abtest.froma\\\" name=\\\"froma\\\" #froma=\\\"ngModel\\\" type=\\\"email\\\" email ngModel required>\\r\\n                      </div>\\r\\n                      <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!froma.valid && (froma.dirty || froma.touched)\\\">Please enter a valid email!</small>\\r\\n                      <div  *ngIf=\\\"abtest.multipleData == 'from'\\\">\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                          <div class=\\\"input-group-prepend\\\">\\r\\n                            <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">B</span>\\r\\n                          </div>\\r\\n                          <input class=\\\"form-control\\\"  [(ngModel)]=\\\"abtest.fromb\\\" name=\\\"fromb\\\" #fromb=\\\"ngModel\\\" type=\\\"email\\\" email ngModel required>\\r\\n                        </div>\\r\\n                        <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!fromb.valid && (fromb.dirty || fromb.touched)\\\">Please enter a valid email!</small>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                      <label>Subject</label>\\r\\n                      <div class=\\\"input-group\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                          <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\" *ngIf=\\\"abtest.multipleData == 'subject'\\\">A</span>\\r\\n                        </div>\\r\\n                        <input class=\\\"form-control\\\"  [(ngModel)]=\\\"abtest.subjecta\\\" name=\\\"subjecta\\\" type=\\\"text\\\" [ngClass]=\\\"{ 'is-invalid': mainForm.submitted && subjecta.invalid }\\\" required>\\r\\n                      </div>\\r\\n                      <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"mainForm.submitted && subjecta.invalid\\\">This field is required!</small>\\r\\n                      <div class=\\\"input-group\\\" *ngIf=\\\"abtest.multipleData == 'subject'\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                          <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">B</span>\\r\\n                        </div>\\r\\n                        <input class=\\\"form-control\\\"  [(ngModel)]=\\\"abtest.subjectb\\\" name=\\\"subjectb\\\" type=\\\"text\\\" [ngClass]=\\\"{ 'is-invalid': mainForm.submitted && subjectb.invalid }\\\" required>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                      <label>Select value</label>\\r\\n                      <select class=\\\"form-control\\\" name=\\\"membersCol\\\" [(ngModel)]=\\\"abtest.membersCol\\\" [ngClass]=\\\"{ 'is-invalid': mainForm.submitted && membersCol.invalid }\\\" required>\\r\\n                        <option value=\\\"\\\">Select Column</option>\\r\\n                        <option *ngFor=\\\"let column of memberscols\\\" value=\\\"{{column.value}}\\\">{{column.text.split('_')[0] | titlecase}} {{column.text.split('_')[1] | titlecase}}</option>\\r\\n                      </select>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group text-center space-20\\\">\\r\\n                      <!-- <button type=\\\"submit\\\" class=\\\"btn btn-danger btn-raised mr-1\\\" (click)=\\\"cancel()\\\">Cancel</button> -->\\r\\n                      <button uiSref=\\\"result\\\" type=\\\"button\\\" class=\\\"btn btn-raised btn-success mr-1\\\" [disabled]=\\\"!mainForm.valid\\\" awNextStep>\\r\\n                          Next\\r\\n                          <span style=\\\"margin-left:10px;\\\">\\r\\n                              <i class=\\\"ft-chevron-right\\\"></i>\\r\\n                          </span>\\r\\n                      </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </aw-wizard-step>\\r\\n        <aw-wizard-step [stepTitle]=\\\"'Choose Template'\\\" [navigationSymbol]=\\\"{ symbol: '&#xf0c9;', fontFamily: 'FontAwesome' }\\\">\\r\\n            <form #TemplateForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate  *ngIf=\\\"abtest.multipleData == 'body'\\\">\\r\\n                <div class='row'>\\r\\n                  <div class=\\\"col-md-12\\\">\\r\\n                    <div class='row'>\\r\\n                      <div class='col-6'>\\r\\n                        <div class=\\\"row\\\">\\r\\n                          <div class=\\\"col-lg-12\\\">\\r\\n                            <fieldset class=\\\"form-group\\\">\\r\\n                              <label>Choose Template</label>\\r\\n                              <select class=\\\"form-control\\\" [(ngModel)]=\\\"abtest.templatea\\\"  name=\\\"templatea\\\" (change)=\\\"displayTemplate($event.target.value, 'a')\\\" [ngClass]=\\\"{ 'is-invalid': TemplateForm.submitted && templatea.invalid }\\\" required>\\r\\n                                <option value=\\\"\\\">Choose Template</option>\\r\\n                                <option *ngFor=\\\"let template of emailTemplates\\\" value=\\\"{{template.id}}\\\">{{template.name}}</option>\\r\\n                              </select>\\r\\n                            </fieldset>\\r\\n                          </div>\\r\\n                          <div class=\\\"col-lg-12\\\">\\r\\n                            <label>Email Content *</label>\\r\\n                            <fieldset class=\\\"form-group\\\">\\r\\n                              <div [froalaEditor]=\\\"optionsa\\\" #my_editora  name=\\\"bodya\\\" [(ngModel)]=\\\"abtest.bodya\\\" [ngClass]=\\\"{ 'is-invalid': TemplateForm.submitted && bodya.invalid }\\\" required></div>\\r\\n                            </fieldset>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-6\\\">\\r\\n                      <div class=\\\"row\\\" *ngIf=\\\"abtest.bodya != ''\\\">\\r\\n                        <div class=\\\"col-lg-12\\\">\\r\\n                          <fieldset class=\\\"form-group\\\">\\r\\n                            <label>Choose Template</label>\\r\\n                            <select class=\\\"form-control\\\" [(ngModel)]=\\\"abtest.templateb\\\"  name=\\\"templateb\\\" (change)=\\\"displayTemplate($event.target.value, 'b')\\\" [ngClass]=\\\"{ 'is-invalid': TemplateForm.submitted && templateb.invalid }\\\" required>\\r\\n                              <option value=\\\"\\\">Choose Template</option>\\r\\n                              <option *ngFor=\\\"let template of emailTemplates\\\" value=\\\"{{template.id}}\\\">{{template.name}}</option>\\r\\n                            </select>\\r\\n                          </fieldset>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-lg-12\\\">\\r\\n                          <label>Email Content *</label>\\r\\n                          <fieldset class=\\\"form-group\\\">\\r\\n                            <div [froalaEditor]=\\\"optionsb\\\" #my_editorb  name=\\\"bodyb\\\" [(ngModel)]=\\\"abtest.bodyb\\\" [ngClass]=\\\"{ 'is-invalid': TemplateForm.submitted && bodyb.invalid }\\\" required></div>\\r\\n                          </fieldset>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group text-center space-20\\\">\\r\\n                        <button uiSref=\\\"Main\\\" type=\\\"button\\\" class=\\\"btn btn-raised btn-secondary mr-1\\\" awPreviousStep>\\r\\n                            <span style=\\\"margin-right:10px;\\\">\\r\\n                                <i class=\\\"ft-chevron-left\\\"></i>\\r\\n                            </span> Previous</button>\\r\\n                        <button type=\\\"button\\\" uiSref=\\\"work\\\" class=\\\"btn btn-info btn-raised\\\" [disabled]=\\\"!TemplateForm.valid\\\" awNextStep>\\r\\n                            Next\\r\\n                            <span style=\\\"margin-left:10px;\\\">\\r\\n                                <i class=\\\"ft-chevron-right\\\"></i>\\r\\n                            </span>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n            </form>\\r\\n            <form #TemplateForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate  *ngIf=\\\"abtest.multipleData != 'body'\\\">\\r\\n                <div class='row'>\\r\\n                  <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"col-lg-12\\\">\\r\\n                      <fieldset class=\\\"form-group\\\">\\r\\n                        <label>Choose Template</label>\\r\\n                        <select class=\\\"form-control\\\" [(ngModel)]=\\\"abtest.templatea\\\"  name=\\\"templatea\\\" (change)=\\\"displayTemplate($event.target.value, 'a')\\\" [ngClass]=\\\"{ 'is-invalid': TemplateForm.submitted && templatea.invalid }\\\" required>\\r\\n                          <option value=\\\"\\\">Choose Template</option>\\r\\n                          <option *ngFor=\\\"let template of emailTemplates\\\" value=\\\"{{template.id}}\\\">{{template.name}}</option>\\r\\n                        </select>\\r\\n                      </fieldset>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-lg-12\\\">\\r\\n                      <label>Email Content *</label>\\r\\n                      <fieldset class=\\\"form-group\\\">\\r\\n                        <div [froalaEditor]=\\\"optionsa\\\" #my_editora  name=\\\"bodya\\\" [(ngModel)]=\\\"abtest.bodya\\\" [ngClass]=\\\"{ 'is-invalid': TemplateForm.submitted && bodya.invalid }\\\" required></div>\\r\\n                      </fieldset>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group text-center space-20\\\">\\r\\n                        <button uiSref=\\\"Main\\\" type=\\\"button\\\" class=\\\"btn btn-raised btn-secondary mr-1\\\" awPreviousStep>\\r\\n                            <span style=\\\"margin-right:10px;\\\">\\r\\n                                <i class=\\\"ft-chevron-left\\\"></i>\\r\\n                            </span> Previous</button>\\r\\n                        <button type=\\\"button\\\" uiSref=\\\"work\\\" class=\\\"btn btn-info btn-raised\\\" [disabled]=\\\"!TemplateForm.valid\\\" awNextStep>\\r\\n                            Next\\r\\n                            <span style=\\\"margin-left:10px;\\\">\\r\\n                                <i class=\\\"ft-chevron-right\\\"></i>\\r\\n                            </span>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </aw-wizard-step>\\r\\n        <aw-wizard-step  [stepTitle]=\\\"'Split List'\\\" [navigationSymbol]=\\\"{ symbol: '&#xf0c9;', fontFamily: 'FontAwesome' }\\\">\\r\\n            <form #listForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\r\\n                <div class='row justify-content-center'>\\r\\n                    <div class='col-12'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label>Select Parameter</label>\\r\\n                          <select class=\\\"form-control\\\" name=\\\"rateTrack\\\" [(ngModel)]=\\\"abtest.rateTrack\\\" [ngClass]=\\\"{ 'is-invalid': listForm.submitted && rateTrack.invalid }\\\" required>\\r\\n                              <option value=\\\"Select List\\\">Select Parameter</option>\\r\\n                              <option value=\\\"open\\\">Open Rates</option>\\r\\n                              <option value=\\\"click\\\">Click Rates</option>\\r\\n                              <option value=\\\"unsubscriber\\\">UnSubscribers</option>\\r\\n                          </select>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                            <input type=\\\"radio\\\" id=\\\"manual\\\" name=\\\"sendingCampaign\\\" [(ngModel)]=\\\"abtest.sendingCampaign\\\" value=\\\"manual\\\" class=\\\"custom-control-input\\\" [ngClass]=\\\"{ 'is-invalid': listForm.submitted && sendingCampaign.invalid }\\\" required>\\r\\n                            <label class=\\\"custom-control-label\\\" for=\\\"manual\\\">Manual</label>\\r\\n                          </div>\\r\\n                          <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                            <input type=\\\"radio\\\" id=\\\"automatic\\\" name=\\\"sendingCampaign\\\" [(ngModel)]=\\\"abtest.sendingCampaign\\\" value=\\\"automatic\\\" class=\\\"custom-control-input\\\" [ngClass]=\\\"{ 'is-invalid': listForm.submitted && sendingCampaign.invalid }\\\" required>\\r\\n                            <label class=\\\"custom-control-label\\\" for=\\\"automatic\\\">Automatic</label>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label>Select Test Hours</label>\\r\\n                          <select class=\\\"form-control\\\" name=\\\"testhrs\\\" [(ngModel)]=\\\"abtest.testhrs\\\" [ngClass]=\\\"{ 'is-invalid': listForm.submitted && testhrs.invalid }\\\" required>\\r\\n                              <option value=\\\"Select Hours\\\">Select Hours</option>\\r\\n                              <option *ngFor=\\\"let i of hours\\\" value=\\\"{{i}}\\\">{{i}}</option>\\r\\n                          </select>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label>Choose Segment</label>\\r\\n                          <ui-switch name=\\\"segment\\\" [(ngModel)]=\\\"abtest.segment\\\"></ui-switch>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\" *ngIf=\\\"!abtest.segment\\\">\\r\\n                          <label>Select List</label>\\r\\n                          <select class=\\\"form-control\\\" name=\\\"listid\\\" [(ngModel)]=\\\"abtest.listid\\\" (change)=\\\"displayMembers($event.target.value, $event)\\\" [ngClass]=\\\"{ 'is-invalid': listForm.submitted && listid.invalid }\\\" required>\\r\\n                              <option value=\\\"Select List\\\">Select List</option>\\r\\n                              <option *ngFor=\\\"let list of listDetails\\\" value=\\\"{{list.id}}\\\">{{list.name}}</option>\\r\\n                          </select>\\r\\n                          <label *ngIf=\\\"abtest.listid\\\">Total Users : {{ users }}</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\" *ngIf=\\\"abtest.segment\\\">\\r\\n                          <label>Select Segment</label>\\r\\n                          <select class=\\\"form-control\\\" name=\\\"segmentVal\\\" [(ngModel)]=\\\"abtest.segmentVal\\\" (change)=\\\"displaySegmentMembers($event.target.value, $event)\\\" [ngClass]=\\\"{ 'is-invalid': listForm.submitted && listid.invalid }\\\" required>\\r\\n                              <option value=\\\"Select List\\\">Select Segment</option>\\r\\n                              <option *ngFor=\\\"let segment of segmentDetails\\\" value=\\\"{{segment.id}}\\\">{{segment.name}}</option>\\r\\n                          </select>\\r\\n                          <label *ngIf=\\\"abtest.segmentVal\\\">Total Users : {{ users }}</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label for=\\\"selectedUserA\\\">Test Members Count</label>\\r\\n                          <input type=\\\"number\\\" min=\\\"1\\\" max=\\\"1000\\\" name=\\\"selectedUserA\\\" [(ngModel)]=\\\"abtest.selectedUserA\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': listForm.submitted && selectedUserA.invalid }\\\" required>\\r\\n                          <label *ngIf=\\\"abtest.selectedUserA\\\">Remaining Users : {{ users - (2 * abtest.selectedUserA)}}</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group text-center space-20\\\">\\r\\n                    <button uiSref=\\\"Template\\\" type=\\\"button\\\" class=\\\"btn btn-raised btn-secondary mr-1\\\" awPreviousStep>\\r\\n                        <span style=\\\"margin-right:10px;\\\">\\r\\n                            <i class=\\\"ft-chevron-left\\\"></i>\\r\\n                        </span> Previous</button>\\r\\n                    <button uiSref=\\\"result\\\" type=\\\"button\\\" class=\\\"btn btn-raised btn-success mr-1\\\" [disabled]=\\\"!listForm.valid\\\" awNextStep>\\r\\n                        Next\\r\\n                        <span style=\\\"margin-left:10px;\\\">\\r\\n                            <i class=\\\"ft-chevron-right\\\"></i>\\r\\n                        </span>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </aw-wizard-step>\\r\\n        <aw-wizard-step [stepTitle]=\\\"'Send Campaign'\\\" [navigationSymbol]=\\\"{ symbol: '&#xf1d8;', fontFamily: 'FontAwesome' }\\\">\\r\\n            <form #sendCampaign=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\r\\n              <h4 class=\\\"head text-center\\\">When Would You Like To Send This Campaign?</h4>\\r\\n              <div class=\\\"col-lg-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                  <div class=\\\"card-header\\\" style=\\\"padding: 0 1.5rem 0 !important;\\\">\\r\\n                    <fieldset class=\\\"form-group\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                          <input type=\\\"radio\\\" id=\\\"sendmail\\\" name=\\\"send\\\" [(ngModel)]=\\\"abtest.send\\\" value=\\\"send\\\" class=\\\"custom-control-input\\\"  [ngClass]=\\\"{ 'is-invalid': sendCampaign.submitted && send.invalid }\\\" required>\\r\\n                          <label class=\\\"custom-control-label\\\" for=\\\"sendmail\\\">Send Now</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                          <input type=\\\"radio\\\" id=\\\"schedulemail\\\" name=\\\"send\\\" [(ngModel)]=\\\"abtest.send\\\" value=\\\"schedule\\\" class=\\\"custom-control-input\\\"  [ngClass]=\\\"{ 'is-invalid': sendCampaign.submitted && send.invalid }\\\" required>\\r\\n                          <label class=\\\"custom-control-label\\\" for=\\\"schedulemail\\\">Schedule Date/Time</label>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </fieldset>\\r\\n                  </div>\\r\\n                  <h4 class=\\\"form-section\\\"></h4>\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"card-block\\\">\\r\\n                      <div class=\\\"col-lg-12\\\" *ngIf=\\\"abtest.send == 'schedule'\\\">\\r\\n                        <fieldset class=\\\"form-group\\\">\\r\\n                          <label>This Campaign will be sent at the Date and Time specified below :- </label>\\r\\n                          <div class=\\\"col-lg-3\\\">\\r\\n                            <label>Date</label>\\r\\n                          </div>\\r\\n                          <div class=\\\"col-lg-9\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                              <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" [(ngModel)]=\\\"abtest.scheduledate\\\" name=\\\"scheduledate\\\" ngbDatepicker [dayTemplate]=\\\"customDay\\\"\\r\\n                                [markDisabled]=\\\"isDisabled\\\" #d3=\\\"ngbDatepicker\\\" [minDate]=\\\"minDate\\\" (ngModelChange)=\\\"disableTimeByDate($event)\\\" [ngClass]=\\\"{ 'is-invalid': sendCampaign.submitted && scheduledate.invalid }\\\" required>\\r\\n                              <div class=\\\"input-group-append\\\">\\r\\n                                <div class=\\\"input-group-text\\\" (click)=\\\"d3.toggle()\\\">\\r\\n                                  <i class=\\\"fa fa-calendar\\\" style=\\\"cursor: pointer;\\\"></i>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"col-lg-3\\\">\\r\\n                            <label>Time</label>\\r\\n                          </div>\\r\\n                          <div class=\\\"col-lg-9\\\">\\r\\n                            <ngb-timepicker [(ngModel)]=\\\"abtest.time\\\" name=\\\"time\\\" (ngModelChange)=\\\"disabletime($event)\\\" [ngClass]=\\\"{ 'is-invalid': sendCampaign.submitted && time.invalid }\\\" required></ngb-timepicker>\\r\\n                          </div>\\r\\n                        </fieldset>\\r\\n                        <fieldset class=\\\"form-group\\\">\\r\\n                          <label>Confirmation email</label>\\r\\n                          <label>Send confirmation to the following email address when the campaign has been sent.</label>\\r\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" email name=\\\"confirm_email\\\" [(ngModel)]=\\\"abtest.confirm_email\\\"  [ngClass]=\\\"{ 'is-invalid': sendCampaign.submitted && confirm_email.invalid }\\\" required>\\r\\n                        </fieldset>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group text-center\\\">\\r\\n                          <button uiSref=\\\"work\\\" type=\\\"button\\\" class=\\\"btn btn-raised btn-secondary mr-1\\\" awPreviousStep>\\r\\n                              <span style=\\\"margin-right:10px;\\\">\\r\\n                                  <i class=\\\"ft-chevron-left\\\"></i>\\r\\n                              </span> Previous</button>\\r\\n                          <button uiSref=\\\"result\\\" type=\\\"button\\\" class=\\\"btn btn-raised btn-success\\\" (click)=\\\"submitCampaign('schedule')\\\" *ngIf=\\\"abtest.send == 'schedule'\\\" [disabled]=\\\"!sendCampaign.valid || submitted\\\">\\r\\n                            Schedule this Campaign   <i class=\\\"fas fa-spinner font-medium-4 fa fa-spin white align-middle\\\" *ngIf=\\\"submitted\\\"></i>\\r\\n                          </button>\\r\\n                          <button uiSref=\\\"result\\\" type=\\\"button\\\" class=\\\"btn btn-raised btn-success\\\" (click)=\\\"submitCampaign('send')\\\" *ngIf=\\\"abtest.send == 'send'\\\" [disabled]=\\\"!sendCampaign.valid || submitted\\\">\\r\\n                            Send Now   <i class=\\\"fas fa-spinner font-medium-4 fa fa-spin white align-middle\\\" *ngIf=\\\"submitted\\\"></i>\\r\\n                          </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n        </aw-wizard-step>\\r\\n      </aw-wizard>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\"","module.exports = \".justify-content-start {\\n  justify-content: center !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FtcGFpZ24vbXVsdGlwbGUtY2FtcGFpZ24vQzpcXFVzZXJzXFxNUlQyMFxcRGVza3RvcFxcVU1cXHVzZXJtYW5hZ2VtZW50L3NyY1xcYXBwXFxjYW1wYWlnblxcbXVsdGlwbGUtY2FtcGFpZ25cXG11bHRpcGxlLWNhbXBhaWduLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksbUNBQWtDLEVBQ3JDIiwiZmlsZSI6InNyYy9hcHAvY2FtcGFpZ24vbXVsdGlwbGUtY2FtcGFpZ24vbXVsdGlwbGUtY2FtcGFpZ24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuanVzdGlmeS1jb250ZW50LXN0YXJ0IHtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7XHJcbn1cclxuIl19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators, AbstractControl, NgForm } from '@angular/forms';\r\nimport { SnotifyService, SnotifyPosition, SnotifyToastConfig } from 'ng-snotify';\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbTimeStruct, NgbDateStruct, NgbDatepickerI18n, NgbCalendar} from '@ng-bootstrap/ng-bootstrap';\r\nimport swal from 'sweetalert2';\r\nimport * as jsPDF from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\n\r\nimport { newsLetterService } from '../../shared/data/newsletter.service';\r\nimport { ListsService } from '../../shared/data/lists.service';\r\nimport { EmailTemplateService } from '../../shared/data/email-template.service';\r\nimport { UserService } from '../../shared/data/user.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-multiple-campaign',\r\n  templateUrl: './multiple-campaign.component.html',\r\n  styleUrls: ['./multiple-campaign.component.scss']\r\n})\r\nexport class MultipleCampaignComponent implements OnInit {\r\n  abTestForm: FormGroup;\r\n  abtest = {\r\n    'name': '',\r\n    'multipleData': '',\r\n    'froma': '',\r\n    'fromb': '',\r\n    'subjecta': '',\r\n    'subjectb': '',\r\n    'membersCol': '',\r\n    'bodya': '',\r\n    'bodyb': '',\r\n    'templatea': '',\r\n    'templateb': '',\r\n    'listid': '',\r\n    'selectedUserA': '',\r\n    //'selectedUserB': '',\r\n    'campaign_type': 'abtesting',\r\n    'rateTrack': '',\r\n    'sendingCampaign': '',\r\n    'testhrs': '',\r\n    'send': 'send',\r\n    'scheduledate': '',\r\n    'time': '',\r\n    'confirm_email': '',\r\n    'segment': '',\r\n    'segmentVal': ''\r\n  };\r\n  showWizard = false;\r\n  public optionsa: Object = {\r\n      charCounterCount: true,\r\n      // Set the image upload parameter.\r\n      imageUploadParam: 'image_param',\r\n\r\n      // Set the image upload URL.\r\n      imageUploadURL: 'https://cockburncrc.com.au/members/usermanagement/images',\r\n\r\n      // Additional upload params.\r\n      imageUploadParams: {id: 'my_editora'},\r\n\r\n      // Set request type.\r\n      imageUploadMethod: 'POST',\r\n\r\n      // Set max image size to 5MB.\r\n      imageMaxSize: 5 * 1024 * 1024,\r\n\r\n      // Allow to upload PNG and JPG.\r\n      imageAllowedTypes: ['jpeg', 'jpg', 'png'],\r\n      events:  {\r\n      'froalaEditor.initialized':  function () {\r\n        console.log('initialized');\r\n      },\r\n        'froalaEditor.image.beforeUpload':  function  (e,  editor,  images) {\r\n          //Your code\r\n          if  (images.length) {\r\n          // Create a File Reader.\r\n          const  reader  =  new  FileReader();\r\n          // Set the reader to insert images when they are loaded.\r\n          reader.onload  =  (ev)  =>  {\r\n          const  result  =  ev.target['result'];\r\n          editor.image.insert(result,  null,  null,  editor.image.get());\r\n          console.log(ev,  editor.image,  ev.target['result'])\r\n          };\r\n          // Read image as base64.\r\n          reader.readAsDataURL(images[0]);\r\n          }\r\n          // Stop default upload chain.\r\n          return  false;\r\n        }\r\n    }\r\n  };\r\n  public optionsb: Object = {\r\n      charCounterCount: true,\r\n      // Set the image upload parameter.\r\n      imageUploadParam: 'image_param',\r\n\r\n      // Set the image upload URL.\r\n      imageUploadURL: 'https://cockburncrc.com.au/members/usermanagement/images',\r\n\r\n      // Additional upload params.\r\n      imageUploadParams: {id: 'my_editorb'},\r\n\r\n      // Set request type.\r\n      imageUploadMethod: 'POST',\r\n\r\n      // Set max image size to 5MB.\r\n      imageMaxSize: 5 * 1024 * 1024,\r\n\r\n      // Allow to upload PNG and JPG.\r\n      imageAllowedTypes: ['jpeg', 'jpg', 'png'],\r\n      events:  {\r\n      'froalaEditor.initialized':  function () {\r\n        console.log('initialized');\r\n      },\r\n        'froalaEditor.image.beforeUpload':  function  (e,  editor,  images) {\r\n          //Your code\r\n          if  (images.length) {\r\n          // Create a File Reader.\r\n          const  reader  =  new  FileReader();\r\n          // Set the reader to insert images when they are loaded.\r\n          reader.onload  =  (ev)  =>  {\r\n          const  result  =  ev.target['result'];\r\n          editor.image.insert(result,  null,  null,  editor.image.get());\r\n          console.log(ev,  editor.image,  ev.target['result'])\r\n          };\r\n          // Read image as base64.\r\n          reader.readAsDataURL(images[0]);\r\n          }\r\n          // Stop default upload chain.\r\n          return  false;\r\n        }\r\n    }\r\n  };\r\n  emailTemplates;\r\n  defaultTemplate;\r\n  newsletterId;\r\n  listDetails;\r\n  users;\r\n  memberscols;\r\n  selectedUserA = [];\r\n  selectedUserB = [];\r\n  sendEmail = false;\r\n\r\n  timeout = 3000;\r\n  position: SnotifyPosition = SnotifyPosition.centerTop;\r\n  progressBar = true;\r\n  closeClick = true;\r\n  newTop = true;\r\n  backdrop = -1;\r\n  dockMax = 8;\r\n  blockMax = 6;\r\n  pauseHover = true;\r\n  titleMaxLength = 15;\r\n  bodyMaxLength = 80;\r\n\r\n  hours = ['30min',1,2,3,4,5,6,7,8,9,10,11,12];\r\n  Sendcampaign = false;\r\n\r\n  showTable = false;\r\n  newsletterDetails;\r\n  collectionSize;\r\n  newsLetter = {\r\n    'body':''\r\n  };\r\n  segmentDetails = [];\r\n  segmentUserCount = 0;\r\n  minDate;\r\n  submitted = false;\r\n\r\n  constructor(private snotifyService: SnotifyService, private router: Router, public newsletterservice: newsLetterService, public userservice: UserService, public listsservice: ListsService, public emailtemplateservice: EmailTemplateService) {\r\n    const current = new Date();\r\n    console.log(current);\r\n    this.minDate = {\r\n      year: current.getFullYear(),\r\n      month: current.getMonth() + 1,\r\n      day: current.getDate()\r\n    };\r\n    this.defaultTemplate = this.emailtemplateservice.getDefaultTemplate();\r\n    this.emailtemplateservice.getNewsTemp(new Date().getTime()).then(data => {\r\n        if(data['status'] == 'success'){\r\n          this.emailTemplates = data['emailTemplate'];\r\n        }\r\n    },\r\n    error => {\r\n    });\r\n    this.listsservice.getNewsletterList().then(data => {\r\n        if(data['status'] == 'success'){\r\n          this.listDetails = data['lists'];\r\n        }\r\n        else{\r\n          this.listDetails = '';\r\n        }\r\n    },\r\n    error => {\r\n    });\r\n    this.userservice.getUserrColumns(new Date().getTime()).then(data => {\r\n        if(data['status'] == 'success'){\r\n          console.log(data['userColumn']);\r\n          this.memberscols = data['userColumn'];\r\n        }\r\n        else{\r\n          this.memberscols = '';\r\n        }\r\n    },\r\n    error => {\r\n    });\r\n    this.newsletterservice.getMembersSegment().then(data => {\r\n      if(data['status'] == 'success'){\r\n        this.segmentDetails = data['newsletter'];\r\n      }\r\n      else{\r\n        this.segmentDetails = []\r\n      }\r\n    });\r\n  }\r\n  \r\n  disabletime(control){\r\n    console.log(control);\r\n    const current = new Date();\r\n    if(this.abtest.scheduledate != ''){\r\n      let dates = this.abtest.scheduledate['day']+'/'+this.abtest.scheduledate['month']+'/'+this.abtest.scheduledate['year'];\r\n      let currentdateformat = current.getDate()+'/'+(current.getMonth() + 1)+'/'+current.getFullYear();\r\n      if(currentdateformat == dates){\r\n        if (control.hour < current.getHours()) {\r\n          this.abtest.time = '';\r\n          if (control.minute <= current.getMinutes()) {\r\n            this.abtest.time = '';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  disableTimeByDate(control,type){\r\n    const current = new Date();\r\n    let dates = control.day+'/'+control.month+'/'+control.year;\r\n    let currentdateformat = current.getDate()+'/'+(current.getMonth() + 1)+'/'+current.getFullYear();\r\n    if(this.abtest.time != ''){\r\n      if(currentdateformat == dates){\r\n        if (this.abtest.time['hour'] < current.getHours()) {\r\n          this.abtest.time = '';\r\n          if (this.abtest.time['minute'] <= current.getMinutes()) {\r\n            this.abtest.time = '';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n      this.abTestForm = new FormGroup({\r\n        'multipleData': new FormControl(null, null),\r\n        'froma': new FormControl(null, [Validators.email]),\r\n        'fromb': new FormControl(null, [Validators.email]),\r\n        'subjecta': new FormControl(null, null),\r\n        'subjectb': new FormControl(null, null),\r\n      });\r\n  }\r\n\r\n  displayTemplate(value, type){\r\n    for(let i = 0; i < this.emailTemplates.length; i++){\r\n      if(this.emailTemplates[i]['id'] == value){\r\n        this.emailtemplateservice.getEmailTempById(value).then(data => {\r\n          console.log(data['emailTemplate']);\r\n          if(data['status'] == 'success'){\r\n            if(type == 'a'){\r\n              this.abtest.bodya = data['emailTemplate'][0]['body'];\r\n            }\r\n            else{\r\n              this.abtest.bodyb = data['emailTemplate'][0]['body'];\r\n            }\r\n          }\r\n        },\r\n        error => {\r\n        });\r\n      }\r\n      else{\r\n        if(type == 'a'){\r\n          this.abtest.bodya = this.defaultTemplate;\r\n        }\r\n        else{\r\n          this.abtest.bodyb = this.defaultTemplate;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  displayMembers(value, event){\r\n    if(value != ''){\r\n      this.userservice.getUsersSubscriptionList(value, new Date().getTime()).then(data => {\r\n          console.log(data['users']);\r\n          this.users = data['users'].length;\r\n      });\r\n    }\r\n    else{\r\n      this.users = [];\r\n    }\r\n  }\r\n\r\n  displaySegmentMembers(value, event){\r\n    if(value != \"Select Segment\"){\r\n      let condition = this.segmentDetails.filter(h => h.id == value);\r\n      this.newsletterservice.getUserMembersSegment(condition).then(data => {\r\n        if(data['status'] == 'success'){\r\n          if(data['newsletter'][0] == 0){\r\n            this.snotifyService.error('No Users in selected Segment to send Newsletter', '', this.getConfig());\r\n            this.abtest.segmentVal = '';\r\n            this.users = [];\r\n          }\r\n          else{\r\n            this.users = data['newsletter'][0];\r\n          }\r\n        }\r\n        else{\r\n          this.snotifyService.error('No Users in selected Segment to send Newsletter', '', this.getConfig());\r\n          this.abtest.segmentVal = '';\r\n          this.users = [];\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  submitCampaign(type){\r\n  this.submitted = true;\r\n    this.newsletterservice.saveabtestingNewletter(this.abtest, new Date().getTime()).then(data => {\r\n      if(data['status']){\r\n          this.newsletterId = data['id'];\r\n          if(type == 'schedule'){\r\n            this.ScheduleNewsletter();\r\n          }\r\n          else{\r\n            this.sendCampaign();\r\n          }\r\n      }\r\n    });\r\n  }\r\n\r\n  ScheduleNewsletter(){\r\n  this.submitted = true;\r\n    let sendCampaign = {\r\n        'id': this.newsletterId,\r\n        'send': this.abtest.send,\r\n        'scheduledate': this.abtest.scheduledate,\r\n        'time': this.abtest.time,\r\n        'confirm_email': this.abtest.confirm_email\r\n    };\r\n    this.newsletterservice.ScheduleNewsletter(sendCampaign).then(data => {\r\n      if(data['status']){\r\n        this.snotifyService.success('Campaign Scheduled Successfully', '', this.getConfig());\r\n        this.submitted = false;\r\n        this.router.navigate(['/campaign/reports']);\r\n      }\r\n    });\r\n  }\r\n\r\n  sendCampaign(){\r\n  this.submitted = true;\r\n    this.newsletterservice.sendABTestingNewletter(this.newsletterId).then(data => {\r\n        if(data['status']){\r\n          console.log(data['status']);\r\n          let val = ((this.newsletterId * 1080) / 8000);\r\n          let self1 = this;\r\n          let newId = window.btoa(val.toString())\r\n          this.snotifyService.success('Campaign Sent Successfully', '', this.getConfig());\r\n          swal({\r\n                title: '<i class=\"fab fa-telegram\"></i> Queue For immediate delivery',\r\n                html:\r\n                ''+\r\n                '<ul class=\"list-group\">'+\r\n                  '<li class=\"list-group-item\">Campaign Name: '+self1.abtest.name+'</li>'+\r\n                  '<li class=\"list-group-item\">Recepients: '+data['totalsent']+'</li>'+\r\n                  '<li class=\"list-group-item\">Not Received: '+data['notsent']+'</li>'+\r\n                  '<li class=\"list-group-item\">To Be Delivered: Immediately</li>'+\r\n                '</ul>',\r\n                showCloseButton: false,\r\n                confirmButtonText: '<a href=\"#/campaign/abtestingStatics?id='+newId+'\">See Campaign Report</a>',\r\n                allowOutsideClick: true,\r\n                allowEscapeKey: true\r\n            }).then(function (dismiss) {\r\n                // dismiss can be 'overlay', 'cancel', 'close', 'esc', 'timer'\r\n                if (dismiss.dismiss.toString() == 'overlay' || dismiss.dismiss.toString() == 'esc' || dismiss.dismiss.toString() == 'cancel' || dismiss.dismiss.toString() == 'close' || dismiss.dismiss.toString() == 'timer') {\r\n                  self1.router.navigate(['/campaign/reports']);\r\n                  self1.submitted = false;\r\n                }\r\n                // if (dismiss.dismiss.toString() == 'overlay' || dismiss.dismiss.toString() == 'esc' || dismiss.dismiss.toString() == 'cancel' || dismiss.dismiss.toString() == 'close' || dismiss.dismiss.toString() == 'timer') {\r\n                //   self1.router.navigate(['/campaign/reports']);\r\n                // }\r\n            });\r\n        }\r\n    });\r\n  }\r\n\r\n  getConfig(): SnotifyToastConfig {\r\n    this.snotifyService.setDefaults({\r\n        global: {\r\n            newOnTop: this.newTop,\r\n            maxAtPosition: this.blockMax,\r\n            maxOnScreen: this.dockMax,\r\n        }\r\n    });\r\n    return {\r\n        bodyMaxLength: this.bodyMaxLength,\r\n        titleMaxLength: this.titleMaxLength,\r\n        backdrop: this.backdrop,\r\n        position: this.position,\r\n        timeout: this.timeout,\r\n        showProgressBar: this.progressBar,\r\n        closeOnClick: this.closeClick,\r\n        pauseOnHover: this.pauseHover\r\n    };\r\n  }\r\n\r\n  cancel(){\r\n    //alert('cancel');\r\n  }\r\n\r\n}\r\n","module.exports = \"<section class=\\\"basic-elements\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n          <div class=\\\"content-header\\\">Newsletter</div>\\r\\n      </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"showTable\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n              <div class=\\\"card-block\\\">\\r\\n                <ngb-tabset (tabChange)=\\\"selectData($event)\\\">\\r\\n                  <ngb-tab title=\\\"Normal Campaign\\\" id=\\\"normal\\\" active=\\\"SelectedTab == 'normal'\\\">\\r\\n                    <ng-template ngbTabContent>\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-9 text-right\\\">\\r\\n                          <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"\\r\\n                                  [attr.aria-expanded]=\\\"!isCollapsed\\\" aria-controls=\\\"collapseExample\\\">\\r\\n                            Select Columns\\r\\n                          </button>\\r\\n                          <div id=\\\"collapseExample\\\" class=\\\"selected-column\\\" [ngbCollapse]=\\\"!isCollapsed\\\">\\r\\n                            <ul>\\r\\n                                <li *ngFor='let col of allColumns'>\\r\\n                                  <input\\r\\n                                    type='checkbox'\\r\\n                                    [id]=\\\"col.name\\\"\\r\\n                                    (click)='toggle(col)'\\r\\n                                    [checked]='isChecked(col)'\\r\\n                                  />\\r\\n                                  <label [attr.for]=\\\"col.name\\\">{{col.name}}</label>\\r\\n                                </li>\\r\\n                            </ul>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3\\\">\\r\\n                          <a class=\\\"btn btn-social btn-round btn-min-width mr-2 mb-2 btn-outline-bitbucket \\\" (click)=\\\"addnews()\\\"><span class=\\\"ft-plus\\\"></span>Create Newsletter</a>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <ngx-datatable\\r\\n                        class ='material'\\r\\n                        class='bootstrap'\\r\\n                        [rows]='newsletterDetails'\\r\\n                        [columnMode]=\\\"'force'\\\"\\r\\n                        [headerHeight]=\\\"50\\\"\\r\\n                        [footerHeight]=\\\"50\\\"\\r\\n                        [rowHeight]=\\\"'auto'\\\"\\r\\n                        [limit]=\\\"10\\\">\\r\\n                        <ngx-datatable-column\\r\\n                          *ngFor=\\\"let col of columns\\\"\\r\\n                          [name]=\\\"col.name\\\">\\r\\n                        </ngx-datatable-column>\\r\\n                        <ngx-datatable-column name=\\\"Action\\\">\\r\\n                        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                          <a class=\\\"info p-0\\\" (click)=\\\"sendnewsletter(row.id);\\\" *ngIf=\\\"row.status == 'Pending' && row.send != 'schedule'\\\"><i class=\\\"far fa-paper-plane font-medium-3 mr-2\\\"></i></a>\\r\\n                          <a class=\\\"warning p-0\\\" *ngIf=\\\"row.status == 'Scheduled' || row.send == 'schedule'\\\"><i class=\\\"far fa-clock font-medium-3 mr-2\\\"></i></a>\\r\\n                          <a class=\\\"success p-0\\\" *ngIf=\\\"row.status == 'Sent'\\\"><i class=\\\"far fa-check-square font-medium-3 mr-2\\\"></i></a>\\r\\n                          <a class=\\\"danger p-0\\\" *ngIf=\\\"(row.status == 'Pending' || row.status == 'Scheduled')\\\" (click)=\\\"EditNewsletter(row.id);\\\"><i class=\\\"fas fa-pencil-alt font-medium-3 mr-2\\\"></i></a>\\r\\n                          <a class=\\\"Info p-0\\\" (click)=\\\"CopyNewsletter(row.id);\\\"><i class=\\\"fas fa-copy font-medium-3 mr-2\\\"></i></a>\\r\\n                        </ng-template>\\r\\n                        </ngx-datatable-column>\\r\\n                        </ngx-datatable>\\r\\n                        <!-- <ngx-datatable class=\\\"material\\\" class=\\\"bootstrap\\\" [rows]=\\\"newsletterDetails\\\" [columns]=\\\"columns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [sorts]=\\\"[{prop: ['name', 'subject', 'status', 'date'], dir: 'desc'}]\\\" [limit]=\\\"10\\\">\\r\\n                          <ngx-datatable-column name=\\\"Name\\\">\\r\\n                              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                  {{getName(row.name)}}\\r\\n                              </ng-template>\\r\\n                          </ngx-datatable-column>\\r\\n                          <ngx-datatable-column name=\\\"Subject\\\">\\r\\n                              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                  {{row.subject}}\\r\\n                              </ng-template>\\r\\n                          </ngx-datatable-column>\\r\\n                          <ngx-datatable-column name=\\\"Status\\\">\\r\\n                            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                {{row.status}}\\r\\n                            </ng-template>\\r\\n                          </ngx-datatable-column>\\r\\n                          <ngx-datatable-column name=\\\"Date\\\">\\r\\n                              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                  {{row.date | date: 'MM/dd/yyyy'}}\\r\\n                              </ng-template>\\r\\n                          </ngx-datatable-column>\\r\\n                          <ngx-datatable-column name=\\\"Action\\\">\\r\\n                              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                  <a class=\\\"info p-0\\\" (click)=\\\"sendnewsletter(row.id);\\\" *ngIf=\\\"row.status == 'Pending' && row.send != 'schedule'\\\"><i class=\\\"far fa-paper-plane font-medium-3 mr-2\\\"></i></a>\\r\\n                                  <a class=\\\"warning p-0\\\" *ngIf=\\\"row.status == 'Scheduled' || row.send == 'schedule'\\\"><i class=\\\"far fa-clock font-medium-3 mr-2\\\"></i></a>\\r\\n                                  <a class=\\\"success p-0\\\" *ngIf=\\\"row.status == 'Sent'\\\"><i class=\\\"far fa-check-square font-medium-3 mr-2\\\"></i></a>\\r\\n                                  <a class=\\\"danger p-0\\\" *ngIf=\\\"(row.status == 'Pending' || row.status == 'Scheduled')\\\" (click)=\\\"EditNewsletter(row.id);\\\"><i class=\\\"fas fa-pencil-alt font-medium-3 mr-2\\\"></i></a>\\r\\n                                  <a class=\\\"Info p-0\\\" (click)=\\\"CopyNewsletter(row.id);\\\"><i class=\\\"fas fa-copy font-medium-3 mr-2\\\"></i></a>\\r\\n                              </ng-template>\\r\\n                          </ngx-datatable-column>\\r\\n                        </ngx-datatable> -->\\r\\n                    </ng-template>\\r\\n                  </ngb-tab>\\r\\n                  <!-- <ngb-tab title=\\\"A/B Testing Campaign\\\" id=\\\"abtesting\\\" active=\\\"SelectedTab == 'abtesting'\\\">\\r\\n                    <ng-template ngbTabContent>\\r\\n                        <div class=\\\"row\\\">\\r\\n                          <div class=\\\"col-md-9 text-right\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"\\r\\n                                    [attr.aria-expanded]=\\\"!isCollapsed\\\" aria-controls=\\\"collapseExample\\\">\\r\\n                              Select Columns\\r\\n                            </button>\\r\\n                            <div id=\\\"collapseExample\\\" class=\\\"selected-column\\\" [ngbCollapse]=\\\"!isCollapsed\\\">\\r\\n                              <ul>\\r\\n                                  <li *ngFor='let col of adtestingallcolumns'>\\r\\n                                    <input\\r\\n                                      type='checkbox'\\r\\n                                      [id]=\\\"col.name\\\"\\r\\n                                      (click)='toggleabtesting(col)'\\r\\n                                      [checked]='isCheckedabtesting(col)'\\r\\n                                    />\\r\\n                                    <label [attr.for]=\\\"col.name\\\">{{col.name}}</label>\\r\\n                                  </li>\\r\\n                              </ul>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"col-md-3\\\">\\r\\n                            <a class=\\\"btn btn-social btn-round btn-min-width mr-2 mb-2 btn-outline-bitbucket \\\" (click)=\\\"addnews()\\\"><span class=\\\"ft-plus\\\"></span>Create Newsletter</a>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <ngx-datatable\\r\\n                          class ='material'\\r\\n                          class='bootstrap'\\r\\n                          [rows]='newsletterDetails'\\r\\n                          [columnMode]=\\\"'force'\\\"\\r\\n                          [headerHeight]=\\\"50\\\"\\r\\n                          [footerHeight]=\\\"50\\\"\\r\\n                          [rowHeight]=\\\"'auto'\\\"\\r\\n                          [limit]=\\\"10\\\">\\r\\n                          <ngx-datatable-column\\r\\n                            *ngFor=\\\"let col of adtestingcolumns\\\"\\r\\n                            [name]=\\\"col.name\\\">\\r\\n                          </ngx-datatable-column>\\r\\n                        </ngx-datatable>\\r\\n                      <!-- <ngx-datatable class=\\\"material bootstrap\\\" [rows]=\\\"newsletterDetails\\\" [columns]=\\\"adtestingcolumns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [scrollbarH]=\\\"true\\\" [limit]=\\\"10\\\" [sorts]=\\\"[{prop: ['name', 'subject', 'status', 'date'], dir: 'desc'}]\\\" [limit]=\\\"10\\\">\\r\\n                        <ngx-datatable-column name=\\\"Name\\\" [width]=\\\"300\\\">\\r\\n                            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                {{getName(row.name)}}\\r\\n                            </ng-template>\\r\\n                        </ngx-datatable-column>\\r\\n                        <ngx-datatable-column name=\\\"Subject\\\" [width]=\\\"300\\\">\\r\\n                            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                <p *ngIf=\\\"row.subjecta != ''\\\">Subject A - {{row.subjecta}}</p><br/>\\r\\n                                <p *ngIf=\\\"row.subjectb != ''\\\">Subject B - {{row.subjectb}}</p>\\r\\n                            </ng-template>\\r\\n                        </ngx-datatable-column>\\r\\n                        <ngx-datatable-column name=\\\"From\\\" [width]=\\\"300\\\">\\r\\n                            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                <p *ngIf=\\\"row.froma != ''\\\">From A - {{row.froma}}</p><br/>\\r\\n                                <p *ngIf=\\\"row.fromb != ''\\\">From B - {{row.fromb}}</p>\\r\\n                            </ng-template>\\r\\n                        </ngx-datatable-column>\\r\\n                        <ngx-datatable-column name=\\\"Campaign Winner Type\\\" [width]=\\\"300\\\">\\r\\n                            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                {{row.rateTrack}}\\r\\n                            </ng-template>\\r\\n                        </ngx-datatable-column>\\r\\n                        <ngx-datatable-column name=\\\"Campaign A/B Testing On\\\" [width]=\\\"300\\\">\\r\\n                            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                {{row.abtestingOn}}\\r\\n                            </ng-template>\\r\\n                        </ngx-datatable-column>\\r\\n                        <ngx-datatable-column name=\\\"Testing Time\\\" [width]=\\\"300\\\">\\r\\n                            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                                {{row.time}}\\r\\n                            </ng-template>\\r\\n                        </ngx-datatable-column>\\r\\n                        <ngx-datatable-column name=\\\"Status\\\" [width]=\\\"300\\\">\\r\\n                          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                              {{row.status}}\\r\\n                          </ng-template>\\r\\n                        </ngx-datatable-column>\\r\\n                      </ngx-datatable> ->\\r\\n                    </ng-template>\\r\\n                  </ngb-tab> -->\\r\\n                </ngb-tabset>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"!showTable\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"card-block\\\">\\r\\n              <ngb-tabset>\\r\\n                <ngb-tab title=\\\"Campaign\\\">\\r\\n                  <ng-template ngbTabContent>\\r\\n                    <aw-wizard #wizard navBarLayout=\\\"large-empty-symbols\\\">\\r\\n                        <aw-wizard-step [stepTitle]=\\\"'Details'\\\" [navigationSymbol]=\\\"{ symbol: '&#xf0c9;', fontFamily: 'FontAwesome' }\\\">\\r\\n                            <!-- <form #newsletterForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\r\\n                              <br/>\\r\\n                              <div class=\\\"row\\\">\\r\\n                                  <div class=\\\"col-lg-6\\\">\\r\\n                                      <fieldset class=\\\"form-group\\\">\\r\\n                                          <label>Name Of Newsletter</label>\\r\\n                                          <input class=\\\"form-control\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"newsLetter.name\\\" placeholder=\\\"Enter Newsletter Name\\\" type=\\\"text\\\" [ngClass]=\\\"{ 'is-invalid': newsletterForm.submitted && name.invalid }\\\" required>\\r\\n                                          <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"newsletterForm.submitted && name.invalid\\\">This field is required!</small>\\r\\n                                      </fieldset>\\r\\n                                  </div>\\r\\n\\r\\n                                  <div class=\\\"col-lg-6\\\">\\r\\n                                      <fieldset class=\\\"form-group\\\">\\r\\n                                          <label>Subject</label>\\r\\n                                          <input class=\\\"form-control\\\" name=\\\"subject\\\" #subject=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': newsletterForm.submitted && subject.invalid }\\\" [(ngModel)]=\\\"newsLetter.subject\\\" placeholder=\\\"Enter Subject\\\" type=\\\"text\\\" required>\\r\\n                                          <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"newsletterForm.submitted && subject.invalid\\\">This field is required!</small>\\r\\n                                      </fieldset>\\r\\n                                  </div>\\r\\n\\r\\n                                  <div class=\\\"col-lg-6\\\">\\r\\n                                      <fieldset class=\\\"form-group\\\">\\r\\n                                          <label>Select List</label>\\r\\n                                          <select class=\\\"form-control\\\" name=\\\"listid\\\" #listid=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': newsletterForm.submitted && listid.invalid }\\\" [(ngModel)]=\\\"newsLetter.listid\\\" (change)=\\\"checkvalue($event.target.value)\\\" [value]=\\\"selectList\\\">\\r\\n                                              <option value=\\\"Select List\\\">Select List</option>\\r\\n                                              <option *ngFor=\\\"let list of listDetails\\\" value=\\\"{{list.id}}\\\">{{list.name}}</option>\\r\\n                                          </select>\\r\\n                                      </fieldset>\\r\\n                                  </div>\\r\\n\\r\\n                                  <div class=\\\"col-lg-6\\\">\\r\\n                                      <fieldset class=\\\"form-group\\\">\\r\\n                                          <label>To</label>\\r\\n                                          <input class=\\\"form-control\\\" name=\\\"to\\\" #to=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': newsletterForm.submitted && to.invalid }\\\" [(ngModel)]=\\\"newsLetter.to\\\" placeholder=\\\"Enter Recipent Email(comma separated for multiple receivers)\\\" (blur)=\\\"validateEmail($event.target.value, 'to')\\\" type=\\\"text\\\" [attr.disabled]=\\\"condition ? '' : null\\\" [required]=\\\"condition\\\">\\r\\n                                          <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!condition && (to.invalid && newsletterForm.submitted)\\\">This field is required!</small>\\r\\n                                          <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"notValidTo\\\">Enter Valid Email/Emails!</small>\\r\\n                                      </fieldset>\\r\\n                                  </div>\\r\\n\\r\\n                                  <div class=\\\"col-lg-6\\\">\\r\\n                                      <fieldset class=\\\"form-group\\\">\\r\\n                                          <label>Cc</label>\\r\\n                                          <input class=\\\"form-control\\\" name=\\\"cc\\\" #cc=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': newsletterForm.submitted && cc.invalid }\\\" [(ngModel)]=\\\"newsLetter.cc\\\" placeholder=\\\"Enter Cc Email(comma separated for multiple receivers)\\\"  (blur)=\\\"validateEmail($event.target.value, 'cc')\\\" type=\\\"text\\\">\\r\\n                                          <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"notValidcc\\\">Enter Valid Email/Emails!</small>\\r\\n                                      </fieldset>\\r\\n                                  </div>\\r\\n\\r\\n                                  <div class=\\\"col-lg-6\\\">\\r\\n                                      <fieldset class=\\\"form-group\\\">\\r\\n                                          <label>Bcc</label>\\r\\n                                          <input class=\\\"form-control\\\" name=\\\"bcc\\\" #bcc=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': newsletterForm.submitted && bcc.invalid }\\\" [(ngModel)]=\\\"newsLetter.bcc\\\" placeholder=\\\"Enter Bcc Email(comma separated for multiple receivers)\\\"  (blur)=\\\"validateEmail($event.target.value, 'bcc')\\\" type=\\\"text\\\">\\r\\n                                          <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"notValidbcc\\\">Enter Valid Email/Emails!</small>\\r\\n                                      </fieldset>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-lg-12\\\">\\r\\n                                    <fieldset class=\\\"form-group\\\">\\r\\n                                        <label>Choose Template</label>\\r\\n                                        <select class=\\\"form-control\\\" [(ngModel)]=\\\"newsLetter.template\\\" name=\\\"template\\\" #template=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': newsletterForm.submitted && template.invalid }\\\" (change)=\\\"displayTemplate($event.target.value)\\\">\\r\\n                                          <option value=\\\"\\\">Choose Template</option>\\r\\n                                          <option *ngFor=\\\"let template of emailTemplates\\\" value=\\\"{{template.id}}\\\">{{template.name}}</option>\\r\\n                                        </select>\\r\\n                                    </fieldset>\\r\\n                                </div>\\r\\n                                  <div class=\\\"col-lg-12\\\">\\r\\n                                      <label>Email Content *</label>\\r\\n                                      <fieldset class=\\\"form-group\\\">\\r\\n                                        <div [froalaEditor]=\\\"options\\\" #my_editor name=\\\"body\\\" #body=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': newsletterForm.submitted && body.invalid }\\\" [(ngModel)]=\\\"newsLetter.body\\\"></div>\\r\\n                                      </fieldset>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"form-group text-center\\\">\\r\\n                                {{!newsletterForm.valid}} , {{(notValidTo || notValidBcc || notValidCc)}}\\r\\n                                  <button type=\\\"submit\\\" class=\\\"btn btn-danger btn-raised mr-1\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n                                   <button type=\\\"button\\\" uiSref=\\\"preview\\\" class=\\\"btn btn-info btn-raised\\\" [disabled]=\\\"!newsletterForm.valid\\\" awNextStep (click)=\\\"responsive('desktop');\\\">\\r\\n                                      Next\\r\\n                                      <span style=\\\"margin-left:10px;\\\">\\r\\n                                          <i class=\\\"ft-chevron-right\\\"></i>\\r\\n                                      </span>\\r\\n                                  </button>\\r\\n                              </div>\\r\\n                            </form> -->\\r\\n                            <form [formGroup]=\\\"newsletterForm\\\" class=\\\"editForm\\\" novalidate>\\r\\n                              <br/>\\r\\n                              <div class=\\\"row\\\">\\r\\n                                  <div class=\\\"col-lg-6\\\">\\r\\n                                      <fieldset class=\\\"form-group\\\">\\r\\n                                          <label>Name Of Newsletter</label>\\r\\n                                          <input class=\\\"form-control\\\" formControlName=\\\"name\\\" [(ngModel)]=\\\"newsLetter.name\\\" placeholder=\\\"Enter Newsletter Name\\\" type=\\\"text\\\"  required>\\r\\n                                          <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!newsletterForm.get('name').valid && (newsletterForm.get('name').dirty || newsletterForm.get('name').touched)\\\">This field is required!</small>\\r\\n                                      </fieldset>\\r\\n                                  </div>\\r\\n\\r\\n                                  <div class=\\\"col-lg-6\\\">\\r\\n                                      <fieldset class=\\\"form-group\\\">\\r\\n                                          <label>Subject</label>\\r\\n                                          <input class=\\\"form-control\\\" formControlName=\\\"subject\\\"  [(ngModel)]=\\\"newsLetter.subject\\\" placeholder=\\\"Enter Subject\\\" type=\\\"text\\\" required>\\r\\n                                          <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!newsletterForm.get('subject').valid && (newsletterForm.get('subject').dirty || newsletterForm.get('subject').touched)\\\">This field is required!</small>\\r\\n                                      </fieldset>\\r\\n                                  </div>\\r\\n\\r\\n                                  <div class=\\\"col-lg-12\\\">\\r\\n                                      <fieldset class=\\\"form-group\\\">\\r\\n                                          <label>Choose Segment</label>\\r\\n                                          <ui-switch formControlName=\\\"segment\\\" [(ngModel)]=\\\"newsLetter.segment\\\"></ui-switch>\\r\\n                                      </fieldset>\\r\\n                                  </div>\\r\\n\\r\\n                                  <div class=\\\"col-lg-6\\\">\\r\\n                                      <fieldset class=\\\"form-group\\\" *ngIf=\\\"!newsLetter.segment\\\">\\r\\n                                          <label>Select List</label>\\r\\n                                          <select class=\\\"form-control\\\" formControlName=\\\"listid\\\" [(ngModel)]=\\\"newsLetter.listid\\\" (change)=\\\"checkvalue($event.target.value)\\\" [value]=\\\"selectList\\\">\\r\\n                                              <option value=\\\"Select List\\\">Select List</option>\\r\\n                                              <option *ngFor=\\\"let list of listDetails\\\" value=\\\"{{list.id}}\\\">{{list.name}}</option>\\r\\n                                          </select>\\r\\n                                      </fieldset>\\r\\n                                      <fieldset class=\\\"form-group\\\" *ngIf=\\\"newsLetter.segment\\\">\\r\\n                                          <label>Select Segment</label>\\r\\n                                          <select class=\\\"form-control\\\" formControlName=\\\"segmentVal\\\" [(ngModel)]=\\\"newsLetter.segmentVal\\\" (change)=\\\"checkMemberExsits($event.target.value)\\\">\\r\\n                                              <option value=\\\"Select Segment\\\">Select Segment</option>\\r\\n                                              <option *ngFor=\\\"let segment of segmentDetails\\\" value=\\\"{{segment.id}}\\\">{{segment.name}}</option>\\r\\n                                          </select>\\r\\n                                      </fieldset>\\r\\n                                  </div>\\r\\n\\r\\n                                  <div class=\\\"col-lg-6\\\">\\r\\n                                      <fieldset class=\\\"form-group\\\" *ngIf=\\\"!newsLetter.segment\\\">\\r\\n                                          <label>To</label>\\r\\n                                          <input class=\\\"form-control\\\" formControlName=\\\"to\\\"  [(ngModel)]=\\\"newsLetter.to\\\" placeholder=\\\"Enter Recipent Email(comma separated for multiple receivers, without space)\\\" type=\\\"text\\\" [attr.disabled]=\\\"condition ? '' : null\\\" [required]=\\\"condition ? false : true\\\">\\r\\n                                          <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!condition && (!newsletterForm.get('to').valid && (newsletterForm.get('to').dirty || newsletterForm.get('to').touched))\\\">Enter Valid Email</small>\\r\\n                                      </fieldset>\\r\\n                                  </div>\\r\\n\\r\\n                                  <div class=\\\"col-lg-6\\\">\\r\\n                                      <fieldset class=\\\"form-group\\\">\\r\\n                                          <label>Cc</label>\\r\\n                                          <input class=\\\"form-control\\\" formControlName=\\\"cc\\\"  [(ngModel)]=\\\"newsLetter.cc\\\" placeholder=\\\"Enter Cc Email(comma separated for multiple receivers, without space)\\\"  type=\\\"text\\\">\\r\\n                                          <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"(!newsletterForm.get('cc').valid && (newsletterForm.get('cc').dirty || newsletterForm.get('cc').touched))\\\">Enter Valid Email</small>\\r\\n                                      </fieldset>\\r\\n                                  </div>\\r\\n\\r\\n                                  <div class=\\\"col-lg-6\\\">\\r\\n                                      <fieldset class=\\\"form-group\\\">\\r\\n                                          <label>Bcc</label>\\r\\n                                          <input class=\\\"form-control\\\" formControlName=\\\"bcc\\\"  [(ngModel)]=\\\"newsLetter.bcc\\\" placeholder=\\\"Enter Bcc Email(comma separated for multiple receivers, without space)\\\"  type=\\\"text\\\">\\r\\n                                          <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"(!newsletterForm.get('bcc').valid && (newsletterForm.get('bcc').dirty || newsletterForm.get('bcc').touched))\\\">Enter Valid Email</small>\\r\\n                                      </fieldset>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-lg-12\\\">\\r\\n                                    <fieldset class=\\\"form-group\\\">\\r\\n                                        <label>Choose Template</label>\\r\\n                                        <select class=\\\"form-control\\\" [(ngModel)]=\\\"newsLetter.template\\\" formControlName=\\\"template\\\"  (change)=\\\"displayTemplate($event.target.value)\\\">\\r\\n                                          <option value=\\\"\\\">Choose Template</option>\\r\\n                                          <option *ngFor=\\\"let template of emailTemplates\\\" value=\\\"{{template.id}}\\\">{{template.name}}</option>\\r\\n                                        </select>\\r\\n                                    </fieldset>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-lg-12\\\">\\r\\n                                    <label>Email Content *</label>\\r\\n                                    <fieldset class=\\\"form-group\\\">\\r\\n                                      <div [froalaEditor]=\\\"options\\\" #my_editor formControlName=\\\"body\\\"  [(ngModel)]=\\\"newsLetter.body\\\"></div>\\r\\n                                    </fieldset>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"form-group text-center\\\">\\r\\n                                  <button type=\\\"submit\\\" class=\\\"btn btn-danger btn-raised mr-1\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n                                   <button type=\\\"button\\\" uiSref=\\\"newsletter1\\\" class=\\\"btn btn-info btn-raised\\\" [disabled]=\\\"!newsletterForm.valid\\\" awNextStep (click)=\\\"responsive('desktop');\\\">\\r\\n                                      Next\\r\\n                                      <span style=\\\"margin-left:10px;\\\">\\r\\n                                          <i class=\\\"ft-chevron-right\\\"></i>\\r\\n                                      </span>\\r\\n                                  </button>\\r\\n                              </div>\\r\\n                            </form>\\r\\n                        </aw-wizard-step>\\r\\n                        <!--<aw-wizard-step  [stepTitle]=\\\"'Preview Campaign'\\\" [navigationSymbol]=\\\"{ symbol: '&#xf06e;', fontFamily: 'FontAwesome' }\\\">\\r\\n                            <form #previewForm=\\\"ngForm\\\" class=\\\"editForm\\\">\\r\\n                              <br/>\\r\\n                              <div class=\\\"row align-self-center\\\">\\r\\n                                  <div class=\\\"col-4 align-self-center\\\">\\r\\n                                    <i class=\\\"fas fa-desktop font-large-2 align-self-center\\\" (click)=\\\"responsive('desktop');\\\"></i>\\r\\n                                  </div>\\r\\n                                  <div class=\\\"col-4 align-self-center\\\">\\r\\n                                    <i class=\\\"fas fa-tablet-alt font-large-2 align-self-center\\\" (click)=\\\"responsive('tablet');\\\"></i>\\r\\n                                  </div>\\r\\n                                  <div class=\\\"col-4 align-self-center\\\">\\r\\n                                    <i class=\\\"fas fa-mobile-alt font-large-2 align-self-center\\\" (click)=\\\"responsive('mobile');\\\"></i>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"row\\\">\\r\\n                                <div id=\\\"templateResponsive\\\">\\r\\n\\r\\n                                </div>\\r\\n                              </div>\\r\\n                              <br/>\\r\\n                              <div class=\\\"form-group text-center space-20\\\">\\r\\n                                  <button type=\\\"submit\\\" class=\\\"btn btn-danger btn-raised mr-1\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n                                  <button uiSref=\\\"newsletter\\\" type=\\\"button\\\" class=\\\"btn btn-raised btn-secondary mr-1\\\" awPreviousStep>\\r\\n                                      <span style=\\\"margin-right:10px;\\\">\\r\\n                                          <i class=\\\"ft-chevron-left\\\"></i>\\r\\n                                      </span> Previous</button>\\r\\n                                  <button uiSref=\\\"newsletter1\\\" type=\\\"button\\\" class=\\\"btn btn-raised btn-info\\\" awNextStep>\\r\\n                                      Next\\r\\n                                      <span style=\\\"margin-left:10px;\\\">\\r\\n                                          <i class=\\\"ft-chevron-right\\\"></i>\\r\\n                                      </span>\\r\\n                                  </button>\\r\\n                              </div>\\r\\n                            </form>\\r\\n                        </aw-wizard-step>-->\\r\\n                        <aw-wizard-step [stepTitle]=\\\"'Schedule / Send Campaign'\\\" [navigationSymbol]=\\\"{ symbol: '&#xf1d8;', fontFamily: 'FontAwesome' }\\\">\\r\\n                            <form #newsletterForm1=\\\"ngForm\\\" class=\\\"editForm\\\">\\r\\n                              <br/>\\r\\n                              <div class=\\\"col-lg-12\\\">\\r\\n                                <div class=\\\"card\\\">\\r\\n                                  <div class=\\\"card-header\\\" style=\\\"padding: 0 1.5rem 0 !important;\\\">\\r\\n                                    <fieldset class=\\\"form-group\\\">\\r\\n                                      <label>When Would You Like To Send This Campaign?</label>\\r\\n                                      <div class=\\\"form-group\\\">\\r\\n                                        <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                                          <input type=\\\"radio\\\" id=\\\"customRadioInline1\\\" name=\\\"send\\\" #send [(ngModel)]=\\\"sendCampaign.send\\\" value=\\\"send\\\" class=\\\"custom-control-input\\\" checked>\\r\\n                                          <label class=\\\"custom-control-label\\\" for=\\\"customRadioInline1\\\">Send Now</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                                          <input type=\\\"radio\\\" id=\\\"customRadioInline2\\\" name=\\\"send\\\" #send [(ngModel)]=\\\"sendCampaign.send\\\" value=\\\"schedule\\\" class=\\\"custom-control-input\\\">\\r\\n                                          <label class=\\\"custom-control-label\\\" for=\\\"customRadioInline2\\\">Schedule Date/Time</label>\\r\\n                                        </div>\\r\\n                                      </div>\\r\\n                                    </fieldset>\\r\\n                                  </div>\\r\\n                                  <div class=\\\"card-body\\\" style=\\\"border-radius: 25px !important;background-color: #e9ecef !important;\\\">\\r\\n                                    <div class=\\\"card-block\\\">\\r\\n                                      <div class=\\\"col-lg-12\\\" *ngIf=\\\"sendCampaign.send == 'schedule'\\\">\\r\\n                                        <fieldset class=\\\"form-group\\\">\\r\\n                                          <label>This Campaign will be sent at the Date and Time specified below :- </label>\\r\\n                                          <div class=\\\"col-lg-3\\\">\\r\\n                                            <label>Date</label>\\r\\n                                          </div>\\r\\n                                          <div class=\\\"col-lg-9\\\">\\r\\n                                            <div class=\\\"input-group\\\">\\r\\n                                              <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" [(ngModel)]=\\\"sendCampaign.scheduledate\\\" name=\\\"scheduledate\\\" #scheduledate=\\\"ngModel\\\" ngbDatepicker [dayTemplate]=\\\"customDay\\\"\\r\\n                                                [markDisabled]=\\\"isDisabled\\\" #d3=\\\"ngbDatepicker\\\" [minDate]=\\\"minDate\\\" required (ngModelChange)=\\\"disableTimeByDate($event)\\\">\\r\\n                                              <div class=\\\"input-group-append\\\">\\r\\n                                                <div class=\\\"input-group-text\\\" (click)=\\\"d3.toggle()\\\">\\r\\n                                                  <i class=\\\"fa fa-calendar\\\" style=\\\"cursor: pointer;\\\"></i>\\r\\n                                                </div>\\r\\n                                              </div>\\r\\n                                            </div>\\r\\n                                          </div>\\r\\n                                          <div class=\\\"col-lg-3\\\">\\r\\n                                            <label>Time</label>\\r\\n                                          </div>\\r\\n                                          <div class=\\\"col-lg-9\\\">\\r\\n                                            <ngb-timepicker [(ngModel)]=\\\"sendCampaign.time\\\" required (ngModelChange)=\\\"disabletime($event)\\\" name=\\\"time\\\" #time=\\\"ngModel\\\"></ngb-timepicker>\\r\\n                                          </div>\\r\\n                                        </fieldset>\\r\\n                                        <fieldset class=\\\"form-group\\\">\\r\\n                                          <label>Confirmation email</label>\\r\\n                                          <label>Send confirmation to the following email address when the campaign has been sent.</label>\\r\\n                                          <input type=\\\"text\\\" class=\\\"form-control\\\" email required name=\\\"confirm_email\\\" #confirm_email=\\\"ngModel\\\" [(ngModel)]=\\\"sendCampaign.confirm_email\\\">\\r\\n                                        </fieldset>\\r\\n                                      </div>\\r\\n                                      <div class=\\\"form-group text-center\\\">\\r\\n                                          <button type=\\\"submit\\\" class=\\\"btn btn-danger btn-raised mr-1\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n                                          <button uiSref=\\\"work\\\" type=\\\"button\\\" class=\\\"btn btn-raised btn-secondary mr-1\\\" awPreviousStep>\\r\\n                                              <span style=\\\"margin-right:10px;\\\">\\r\\n                                                  <i class=\\\"ft-chevron-left\\\"></i>\\r\\n                                              </span> Previous</button>\\r\\n                                          <button uiSref=\\\"result\\\" type=\\\"submit\\\" class=\\\"btn btn-success btn-raised\\\" (click)=\\\"saveNewsletter('schedule')\\\" *ngIf=\\\"!edit && sendCampaign.send == 'schedule'\\\" [disabled]=\\\"!newsletterForm1.valid || submitted\\\">\\r\\n                                              Schedule this Campaign <i class=\\\"fas fa-spinner font-medium-4 fa fa-spin white align-middle\\\" *ngIf=\\\"submitted\\\"></i></button>\\r\\n                                          <button uiSref=\\\"result\\\" type=\\\"submit\\\" class=\\\"btn btn-success btn-raised\\\" (click)=\\\"saveNewsletter('send')\\\" *ngIf=\\\"!edit && sendCampaign.send == 'send'\\\" [disabled]=\\\"sendCampaign.send != 'send' || submitted\\\">\\r\\n                                              Send Now <i class=\\\"fas fa-spinner font-medium-4 fa fa-spin white align-middle\\\" *ngIf=\\\"submitted\\\"></i></button>\\r\\n                                          <button uiSref=\\\"result\\\" type=\\\"submit\\\" class=\\\"btn btn-success btn-raised\\\" (click)=\\\"updateNewsletter('schedule')\\\" *ngIf=\\\"edit && sendCampaign.send == 'schedule'\\\" [disabled]=\\\"!newsletterForm1.valid || submitted\\\">\\r\\n                                              Update Newsletter <i class=\\\"fas fa-spinner font-medium-4 fa fa-spin white align-middle\\\" *ngIf=\\\"submitted\\\"></i></button>\\r\\n                                          <button uiSref=\\\"result\\\" type=\\\"submit\\\" class=\\\"btn btn-success btn-raised\\\" (click)=\\\"updateNewsletter('send')\\\" *ngIf=\\\"edit && sendCampaign.send == 'send'\\\" [disabled]=\\\"sendCampaign.send != 'send' || submitted\\\">\\r\\n                                              Update Newsletter <i class=\\\"fas fa-spinner font-medium-4 fa fa-spin white align-middle\\\" *ngIf=\\\"submitted\\\"></i></button>\\r\\n                                      </div>\\r\\n                                    </div>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </form>\\r\\n                        </aw-wizard-step>\\r\\n                    </aw-wizard>\\r\\n                  </ng-template>\\r\\n                </ngb-tab>\\r\\n                <!-- <ngb-tab title=\\\"A/B Test\\\">\\r\\n                  <ng-template ngbTabContent>\\r\\n                    <div class=\\\"col-md-12\\\">\\r\\n                      <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-header\\\">\\r\\n                          <div class=\\\"card-body\\\">\\r\\n                            <div class=\\\"card-block\\\">\\r\\n                              <app-multiple-campaign></app-multiple-campaign>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n                </ngb-tab> -->\\r\\n              </ngb-tabset>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\"","module.exports = \".selected-column {\\n  width: 38%;\\n  margin-right: 20px;\\n  float: right;\\n  text-align: left;\\n  background: #FFF;\\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.12), 0 1px 2px 0 rgba(0, 0, 0, 0.24); }\\n\\nli {\\n  list-style: none; }\\n\\nul.tablealgn {\\n  float: right;\\n  text-align: -webkit-auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FtcGFpZ24vbmV3c2xldHRlci9DOlxcVXNlcnNcXE1SVDIwXFxEZXNrdG9wXFxVTVxcdXNlcm1hbmFnZW1lbnQvc3JjXFxhcHBcXGNhbXBhaWduXFxuZXdzbGV0dGVyXFxuZXdzbGV0dGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0EsV0FBVTtFQUNWLG1CQUFrQjtFQUNsQixhQUFZO0VBQ1osaUJBQWdCO0VBQ2hCLGlCQUFnQjtFQUNoQiw2RUFBNEUsRUFDM0U7O0FBQ0Q7RUFDQSxpQkFBZ0IsRUFDZjs7QUFDRDtFQUNBLGFBQVk7RUFDWix5QkFBd0IsRUFDdkIiLCJmaWxlIjoic3JjL2FwcC9jYW1wYWlnbi9uZXdzbGV0dGVyL25ld3NsZXR0ZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2VsZWN0ZWQtY29sdW1ue1xyXG53aWR0aDogMzglO1xyXG5tYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbmZsb2F0OiByaWdodDtcclxudGV4dC1hbGlnbjogbGVmdDtcclxuYmFja2dyb3VuZDogI0ZGRjtcclxuYm94LXNoYWRvdzogMCAxcHggM3B4IDAgcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxcHggMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjI0KTtcclxufVxyXG5saXtcclxubGlzdC1zdHlsZTogbm9uZTtcclxufVxyXG51bC50YWJsZWFsZ24ge1xyXG5mbG9hdDogcmlnaHQ7XHJcbnRleHQtYWxpZ246IC13ZWJraXQtYXV0bztcclxufVxyXG4iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators, AbstractControl, NgForm } from '@angular/forms';\r\nimport { newsLetterService } from '../../shared/data/newsletter.service';\r\nimport { ListsService } from '../../shared/data/lists.service';\r\nimport { EmailTemplateService } from '../../shared/data/email-template.service';\r\nimport { SnotifyService, SnotifyPosition, SnotifyToastConfig } from 'ng-snotify';\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbTimeStruct, NgbDateStruct, NgbDatepickerI18n, NgbCalendar} from '@ng-bootstrap/ng-bootstrap';\r\nimport swal from 'sweetalert2';\r\n\r\n\r\n@Component({\r\n  selector: 'app-newsletter',\r\n  templateUrl: './newsletter.component.html',\r\n  styleUrls: ['./newsletter.component.scss']\r\n})\r\nexport class NewsletterComponent implements OnInit {\r\n\r\n  preview = false;\r\n  width;\r\n\r\n  @ViewChild('newsletterForm1') scheduleForm: NgForm;\r\n\r\n  columns = [\r\n    { name: 'Name' },\r\n    { name: 'Subject' },\r\n    { name: 'Status' },\r\n    { name: 'Date' }\r\n  ];\r\n\r\n allColumns = [\r\n   { name: 'Name' },\r\n   { name: 'Subject' },\r\n   { name: 'Status' },\r\n   { name: 'Date' }\r\n ];\r\n\r\n newDisplay = [];\r\n\r\n  adtestingcolumns = [\r\n    { name: 'Name' },\r\n    { name: 'Subject A'},\r\n    { name: 'Subject B' },\r\n    { name: 'From A' },\r\n    { name: 'From B' },\r\n    { name: 'Campaign Winner Type' },\r\n    { name: 'Campaign A/B Testing On' },\r\n    { name: 'Testing Time' },\r\n    { name: 'Status' }\r\n  ];\r\n\r\n  adtestingallcolumns = [\r\n    { name: 'Name' },\r\n    { name: 'Subject A'},\r\n    { name: 'Subject B' },\r\n    { name: 'From A' },\r\n    { name: 'From B' },\r\n    { name: 'Campaign Winner Type' },\r\n    { name: 'Campaign A/B Testing On' },\r\n    { name: 'Testing Time' },\r\n    { name: 'Status' }\r\n  ];\r\n\r\n  newsletterForm: FormGroup;\r\n  // newsletter1Form: FormGroup;\r\n  newsletterDetails = [];\r\n  condition = true;\r\n  showTable = true;\r\n  newsLetter= {\r\n    'name': '',\r\n    'subject': '',\r\n    'listid':'Select List',\r\n    'to': '',\r\n    'cc': '',\r\n    'bcc': '',\r\n    'body': '',\r\n    'template': '',\r\n    'id': '',\r\n    'body1': '',\r\n    'segment': false,\r\n    'segmentVal': ''\r\n  };\r\n  sendCampaign = {\r\n    'id': 0,\r\n    'scheduledate': '',\r\n    'send': 'send',\r\n    'time': '',\r\n    'confirm_email': ''\r\n  }\r\n  collectionSize: number;\r\n  p: number = 1;\r\n  pageSize: number = 5;\r\n\r\n  public options: Object = {\r\n      charCounterCount: true,\r\n      // Set the image upload parameter.\r\n      imageUploadParam: 'image_param',\r\n\r\n      // Set the image upload URL.\r\n      imageUploadURL: 'https://cockburncrc.com.au/members/usermanagement/images',\r\n\r\n      // Additional upload params.\r\n      imageUploadParams: {id: 'my_editor'},\r\n\r\n      // Set request type.\r\n      imageUploadMethod: 'POST',\r\n\r\n      // Set max image size to 5MB.\r\n      imageMaxSize: 5 * 1024 * 1024,\r\n\r\n      // Allow to upload PNG and JPG.\r\n      imageAllowedTypes: ['jpeg', 'jpg', 'png'],\r\n      events:  {\r\n      'froalaEditor.initialized':  function () {\r\n        console.log('initialized');\r\n      },\r\n        'froalaEditor.image.beforeUpload':  function  (e,  editor,  images) {\r\n          //Your code\r\n          if  (images.length) {\r\n          // Create a File Reader.\r\n          const  reader  =  new  FileReader();\r\n          // Set the reader to insert images when they are loaded.\r\n          reader.onload  =  (ev)  =>  {\r\n          const  result  =  ev.target['result'];\r\n          editor.image.insert(result,  null,  null,  editor.image.get());\r\n          console.log(ev,  editor.image,  ev.target['result'])\r\n          };\r\n          // Read image as base64.\r\n          reader.readAsDataURL(images[0]);\r\n          }\r\n          // Stop default upload chain.\r\n          return  false;\r\n        }\r\n    }\r\n  };\r\n  public listDetails: any;\r\n  defaultTemplate;\r\n  emailTemplates;\r\n\r\n  timeout = 3000;\r\n  position: SnotifyPosition = SnotifyPosition.centerCenter;\r\n  progressBar = true;\r\n  closeClick = true;\r\n  newTop = true;\r\n  backdrop = -1;\r\n  dockMax = 8;\r\n  blockMax = 6;\r\n  pauseHover = true;\r\n  titleMaxLength = 15;\r\n  bodyMaxLength = 80;\r\n\r\n  selectList = '';\r\n  edit = false;\r\n  newsLetterId = 0;\r\n  SelectedTab = '';\r\n  Sendcampaign = false;\r\n  savedNewsletterId = 0;\r\n  segmentDetails = [];\r\n\r\n  isCollapsed = false;\r\n  submitted = false;\r\n  copySubimitted = false;\r\n  minDate;\r\n\r\n\r\n    constructor(private modalService: NgbModal, private snotifyService: SnotifyService, public newsletterservice: newsLetterService, public listsservice: ListsService, public emailtemplateservice: EmailTemplateService) {\r\n      const current = new Date();\r\n      console.log(current);\r\n      this.minDate = {\r\n        year: current.getFullYear(),\r\n        month: current.getMonth() + 1,\r\n        day: current.getDate()\r\n      };\r\n      this.newsLetter.body = this.emailtemplateservice.getDefaultTemplate();\r\n      this.defaultTemplate = this.emailtemplateservice.getDefaultTemplate();\r\n      this.SelectedTab = 'normal';\r\n      this.newsletterservice.getNewletter().then(data => {\r\n        if(data['status']){\r\n          console.log(data['newsletter']);\r\n          this.newsletterDetails = data['newsletter'];\r\n          this.collectionSize = data['newsletter'].length;\r\n        }\r\n      });\r\n      this.listsservice.getNewsletterList().then(data => {\r\n          if(data['status'] == 'success'){\r\n            this.listDetails = data['lists'];\r\n            this.selectList = data['lists'][0]['id'];\r\n            this.newsLetter.listid = data['lists'][0]['id'];\r\n            if(this.newsLetter.listid == 'Select List'){\r\n              this.condition = false;\r\n            }\r\n            else{\r\n              this.condition = true;\r\n            }\r\n          }\r\n          else{\r\n            this.condition = false;\r\n            this.newsLetter.listid = 'Select List'\r\n          }\r\n      },\r\n      error => {\r\n      });\r\n      this.newsletterservice.getMembersSegment().then(data => {\r\n        if(data['status'] == 'success'){\r\n          this.segmentDetails = data['newsletter'];\r\n        }\r\n        else{\r\n          this.segmentDetails = []\r\n        }\r\n      });\r\n      this.emailtemplateservice.getNewsTemp(new Date().getTime()).then(data => {\r\n          if(data['status'] == 'success'){\r\n            this.emailTemplates = data['emailTemplate'];\r\n            //console.log(this.emailTemplates);\r\n          }\r\n      },\r\n      error => {\r\n      });\r\n    }\r\n\r\n    disabletime(control){\r\n      console.log(control);\r\n      const current = new Date();\r\n        if(this.sendCampaign.scheduledate != ''){\r\n          let dates = this.sendCampaign.scheduledate['day']+'/'+this.sendCampaign.scheduledate['month']+'/'+this.sendCampaign.scheduledate['year'];\r\n          let currentdateformat = current.getDate()+'/'+(current.getMonth() + 1)+'/'+current.getFullYear();\r\n          if(currentdateformat == dates){\r\n            console.log(currentdateformat);\r\n            if (control.hour < current.getHours()) {\r\n              this.sendCampaign.time = '';\r\n              if (control.minute <= current.getMinutes()) {\r\n                this.sendCampaign.time = '';\r\n              }\r\n            }\r\n          }\r\n        }\r\n    }\r\n    disableTimeByDate(control){\r\n      const current = new Date();\r\n      let dates = control.day+'/'+control.month+'/'+control.year;\r\n      let currentdateformat = current.getDate()+'/'+(current.getMonth() + 1)+'/'+current.getFullYear();\r\n        if(this.sendCampaign.time != ''){\r\n          if(currentdateformat == dates){\r\n            if (this.sendCampaign.time['hour'] < current.getHours()) {\r\n              this.sendCampaign.time = '';\r\n              if (this.sendCampaign.time['minute'] <= current.getMinutes()) {\r\n                this.sendCampaign.time = '';\r\n              }\r\n            }\r\n          }\r\n        }\r\n    }\r\n\r\n    toggle(col) {\r\n      const isChecked = this.isChecked(col);\r\n      if(isChecked) {\r\n        this.columns = this.columns.filter(c => {\r\n          return c.name !== col.name;\r\n        });\r\n      } else {\r\n        const newColumns = [...this.columns, col];\r\n        this.columns = [];\r\n        this.allColumns.forEach((f) => {\r\n          newColumns.forEach((s) => {\r\n            if ( s.name === f.name){\r\n              this.columns.push(f);\r\n            }\r\n          });\r\n       });\r\n      }\r\n    }\r\n\r\n    isChecked(col) {\r\n      return this.columns.find(c => {\r\n        return c.name === col.name;\r\n      });\r\n    }\r\n\r\n    toggleabtesting(col) {\r\n      const isCheckedabtesting = this.isCheckedabtesting(col);\r\n      if(isCheckedabtesting) {\r\n        this.adtestingcolumns = this.adtestingcolumns.filter(c => {\r\n          return c.name !== col.name;\r\n        });\r\n      } else {\r\n        const newColumns = [...this.adtestingcolumns, col];\r\n        this.adtestingcolumns = [];\r\n        this.adtestingallcolumns.forEach((f) => {\r\n          newColumns.forEach((s) => {\r\n            if ( s.name === f.name){\r\n              this.adtestingcolumns.push(f);\r\n            }\r\n          });\r\n       });\r\n      }\r\n    }\r\n\r\n    isCheckedabtesting(col) {\r\n      return this.adtestingcolumns.find(c => {\r\n        return c.name === col.name;\r\n      });\r\n    }\r\n\r\n    getName(name){\r\n      if (!name) return '';\r\n     if (name.length <= 20) {\r\n          return name;\r\n      }\r\n      return name.substr(0, 20) + '...';\r\n    }\r\n\r\n    ngOnInit() {\r\n      this.newsletterForm = new FormGroup({\r\n        'name' : new FormControl(null, [Validators.required]),\r\n        'subject' : new FormControl(null, [Validators.required]),\r\n        'listid' : new FormControl(null, null),\r\n        'to' : new FormControl(null, [this.commaSepEmail]),\r\n        'cc' : new FormControl(null, [this.commaSepEmail]),\r\n        'bcc' : new FormControl(null, [this.commaSepEmail]),\r\n        'template' : new FormControl(null, null),\r\n        'body' : new FormControl(null, null),\r\n        'segment' : new FormControl(null, null),\r\n        'segmentVal' : new FormControl(null, null)\r\n      });\r\n    }\r\n\r\n    commaSepEmail = (control: AbstractControl): { [key: string]: any } | null => {\r\n      if(control.value != '' && control.value != null){\r\n        const emails = control.value.split(',');\r\n        const forbidden = emails.some(email => Validators.email(new FormControl(email)));\r\n        console.log(forbidden);\r\n        return forbidden ? { 'to': { value: control.value } } : null;\r\n      }\r\n    };\r\n\r\n    saveNewsletter(type){\r\n      this.submitted = true;\r\n      this.savedNewsletterId = 0;\r\n      this.newsletterservice.saveNewletter(this.newsLetter).then(data => {\r\n        if(data['status']){\r\n          this.savedNewsletterId = data['id'];\r\n          if(type == 'schedule'){\r\n            this.ScheduleNewsletter();\r\n          }\r\n          else{\r\n            this.sendnewsletter(this.savedNewsletterId);\r\n          }\r\n          }\r\n      });\r\n    }\r\n\r\n    ScheduleNewsletter(){\r\n      if(this.savedNewsletterId > 0){\r\n        this.sendCampaign.id = this.savedNewsletterId;\r\n      }\r\n      else{\r\n        this.sendCampaign.id = this.newsLetterId;\r\n      }\r\n      this.newsletterservice.ScheduleNewsletter(this.sendCampaign).then(data => {\r\n        if(data['status']){\r\n          this.newsLetter.name = '';\r\n          this.newsLetter.subject = '';\r\n          this.newsLetter.listid = '';\r\n          this.newsLetter.to = '';\r\n          this.newsLetter.cc = '';\r\n          this.newsLetter.bcc = '';\r\n          this.newsLetter.template = '';\r\n          this.newsLetter.segment = false;\r\n          this.newsLetter.segmentVal = '';\r\n          this.newsLetter.body = this.defaultTemplate;\r\n          this.scheduleForm.reset();\r\n          this.savedNewsletterId = 0;\r\n          if(!this.edit){\r\n            this.snotifyService.success('Campaign Saved & Scheduled Successfully', '', this.getConfig());\r\n          }\r\n          else{\r\n            this.snotifyService.success('Campaign Updated & Scheduled Successfully', '', this.getConfig());\r\n          }\r\n          this.newsletterservice.getNewletterTimeLine(new Date().getTime()).then(data => {\r\n            if(data['status']){\r\n              this.newsletterDetails = data['newsletter'];\r\n              this.collectionSize = data['newsletter'].length;\r\n              this.newsLetter.body = this.defaultTemplate;\r\n              this.showTable = true;\r\n              this.submitted = false;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    sendnewsletter(id){\r\n      this.newsletterservice.sendNewletter(id).then(data => {\r\n        if(data['status']){\r\n          this.savedNewsletterId = 0;\r\n          if(!this.edit){\r\n            this.snotifyService.success('Campaign Saved & Sent Successfully', '', this.getConfig());\r\n          }\r\n          else{\r\n            this.snotifyService.success('Campaign Updated & Sent Successfully', '', this.getConfig());\r\n          }\r\n          let self = this;\r\n          let newid = window.btoa(id+\"$reportEdit\");\r\n          swal({\r\n                title: '<i class=\"fab fa-telegram\"></i> Queue For immediate delivery',\r\n                html:\r\n                ''+\r\n                '<ul class=\"list-group\">'+\r\n                  '<li class=\"list-group-item\">Campaign Name: '+this.newsLetter.name+'</li>'+\r\n                  '<li class=\"list-group-item\">Recepients: '+data['totalsent']+'</li>'+\r\n                  '<li class=\"list-group-item\">Not Received: '+data['notsent']+'</li>'+\r\n                  '<li class=\"list-group-item\">To Be Delivered: Immediately</li>'+\r\n                '</ul>',\r\n                showCloseButton: false,\r\n                confirmButtonText: '<a href=\"#/statistics?id='+newid+'\">See Campaign Report</a>',\r\n                allowOutsideClick: true,\r\n                allowEscapeKey: true\r\n            }).then(function (dismiss) {\r\n                // dismiss can be 'overlay', 'cancel', 'close', 'esc', 'timer'\r\n                if (dismiss.dismiss.toString() == 'overlay' || dismiss.dismiss.toString() == 'esc' || dismiss.dismiss.toString() == 'cancel' || dismiss.dismiss.toString() == 'close' || dismiss.dismiss.toString() == 'timer') {\r\n                  self.newsletterservice.getNewletterTimeLine(new Date().getTime()).then(data => {\r\n                    if(data['status']){\r\n                      self.newsLetter.name = '';\r\n                      self.newsLetter.subject = '';\r\n                      self.newsLetter.listid = '';\r\n                      self.newsLetter.to = '';\r\n                      self.newsLetter.cc = '';\r\n                      self.newsLetter.bcc = '';\r\n                      self.newsLetter.template = '';\r\n                      self.newsLetter.body = self.defaultTemplate;\r\n                      self.newsLetter.segment = false;\r\n                      self.newsLetter.segmentVal = '';\r\n                      self.showTable = true;\r\n                      self.newsletterDetails = data['newsletter'];\r\n                      self.collectionSize = data['newsletter'].length;\r\n                      self.newsLetter.body = self.defaultTemplate;\r\n                      self.submitted = false;\r\n                    }\r\n                  });\r\n                }\r\n            });\r\n        }\r\n      });\r\n    }\r\n\r\n    checkvalue(val){\r\n      if(val != \"Select List\"){\r\n        this.newsLetter.to = '';\r\n        this.condition = true;\r\n      }\r\n      else{\r\n        this.condition = false;\r\n      }\r\n    }\r\n\r\n    checkMemberExsits(val){\r\n      if(val != \"Select Segment\"){\r\n        // this.selectList = 'Select List';\r\n        this.newsLetter.to = '';\r\n        this.condition = false;\r\n        let condition = this.segmentDetails.filter(h => h.id == val);\r\n        this.newsletterservice.getUserMembersSegment(condition).then(data => {\r\n          if(data['status'] == 'success'){\r\n            if(data['newsletter'] == 0){\r\n              this.snotifyService.error('No Users in selected Segment to send Newsletter', '', this.getConfig());\r\n              this.newsLetter.segmentVal = '';\r\n            }\r\n          }\r\n          else{\r\n            this.snotifyService.error('No Users in selected Segment to send Newsletter', '', this.getConfig());\r\n            this.newsLetter.segmentVal = '';\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    addnews(){\r\n      this.showTable = false;\r\n    }\r\n\r\n    sendtestmail(){\r\n      this.newsletterservice.sendTestEmail(this.newsLetter).then(data => {\r\n        if(data['status']){\r\n            this.snotifyService.success('Test Email Sent Successfully', '', this.getConfig());\r\n        }\r\n      });\r\n    }\r\n\r\n    cancel(){\r\n      this.showTable = true;\r\n      this.edit = false;\r\n      this.newsLetter.name = '';\r\n      this.newsLetter.subject = '';\r\n      this.newsLetter.to = '';\r\n      this.newsLetter.cc = '';\r\n      this.newsLetter.bcc = '';\r\n      this.newsLetter.template = '';\r\n      this.newsLetter.body = this.defaultTemplate;\r\n      this.sendCampaign.scheduledate = '';\r\n      this.sendCampaign.send = '';\r\n      this.sendCampaign.time = '';\r\n      this.sendCampaign.confirm_email = '';\r\n      this.savedNewsletterId = 0;\r\n      this.newsLetter.segment = false;\r\n      this.newsLetter.segmentVal = '';\r\n      this.newsletterservice.getNewletterTimeLine(new Date().getTime()).then(data => {\r\n        if(data['status']){\r\n          this.newsletterDetails = data['newsletter'];\r\n          this.collectionSize = data['newsletter'].length;\r\n          this.newsLetter.body = this.defaultTemplate;\r\n        }\r\n      });\r\n    }\r\n\r\n    displayTemplate(value){\r\n      for(let i = 0; i < this.emailTemplates.length; i++){\r\n        if(this.emailTemplates[i]['id'] == value){\r\n          this.emailtemplateservice.getEmailTempById(value).then(data => {\r\n              //console.log(data['emailTemplate']);\r\n              if(data['status'] == 'success'){\r\n                this.newsLetter.body = data['emailTemplate'][0]['body'];\r\n                //console.log(this.emailTemplates);\r\n              }\r\n          },\r\n          error => {\r\n          });\r\n        }\r\n        else{\r\n          this.newsLetter.body =  this.defaultTemplate;\r\n        }\r\n      }\r\n    }\r\n\r\n    EditNewsletter(id){\r\n      let newsletterEditDetails = this.newsletterDetails.filter(h => h.id == id);\r\n      this.newsLetter.name = newsletterEditDetails[0]['name'];\r\n      this.newsLetter.subject = newsletterEditDetails[0]['subject'];\r\n      this.newsLetter.listid = newsletterEditDetails[0]['listid'];\r\n      this.newsLetter.segment = newsletterEditDetails[0]['segment'];\r\n      if(newsletterEditDetails[0]['segment']){\r\n        this.newsLetter.segmentVal = newsletterEditDetails[0]['listid'];\r\n      }\r\n      else{\r\n        if(newsletterEditDetails[0]['listid'] == \"0\"){\r\n          this.selectList = 'Select List';\r\n          this.condition = false;\r\n        }\r\n        else{\r\n          this.condition = true;\r\n          this.selectList = newsletterEditDetails[0]['listid'];\r\n        }\r\n      }\r\n      this.newsLetter.to = newsletterEditDetails[0]['to'];\r\n      this.newsLetter.cc = newsletterEditDetails[0]['cc'];\r\n      this.newsLetter.bcc = newsletterEditDetails[0]['bcc'];\r\n      if(newsletterEditDetails[0]['template'] == \"0\"){\r\n        this.newsLetter.template  = 'Choose Template';\r\n      }\r\n      else{\r\n        this.newsLetter.template  = newsletterEditDetails[0]['template'];\r\n      }\r\n      this.sendCampaign.scheduledate = newsletterEditDetails[0]['scheduledate'];\r\n      this.sendCampaign.send = newsletterEditDetails[0]['send'];\r\n      this.sendCampaign.time = newsletterEditDetails[0]['scheduletime'];\r\n      this.sendCampaign.confirm_email = newsletterEditDetails[0]['confirm_email'];\r\n\r\n      //this.newsLetter.template = newsletterEditDetails[0]['template'];\r\n      this.newsLetter.body = newsletterEditDetails[0]['message'];\r\n      this.newsLetterId = id;\r\n      this.showTable = false;\r\n      this.edit = true;\r\n      this.savedNewsletterId = 0;\r\n    }\r\n\r\n    updateNewsletter(type){\r\n      this.submitted = true;\r\n      let updateNewsLetter = {\r\n        'name': this.newsLetter.name,\r\n        'subject': this.newsLetter.subject,\r\n        'listid':this.newsLetter.listid,\r\n        'to': this.newsLetter.to,\r\n        'cc': this.newsLetter.cc,\r\n        'bcc': this.newsLetter.bcc,\r\n        'body': this.newsLetter.body,\r\n        'template': this.newsLetter.template,\r\n        'id': this.newsLetterId,\r\n        'send': this.sendCampaign.send,\r\n        'scheduledate': this.sendCampaign.scheduledate,\r\n        'scheduletime': this.sendCampaign.time,\r\n        'confirm_email': this.sendCampaign.confirm_email\r\n      };\r\n      this.newsletterservice.editNewsletter(updateNewsLetter).then(data => {\r\n        if(data['status']){\r\n          if(type == 'schedule'){\r\n            this.ScheduleNewsletter();\r\n          }\r\n          else{\r\n            this.sendnewsletter(this.newsLetterId);\r\n          }\r\n          // this.newsletterservice.getNewletterTimeLine(new Date().getTime()).then(data => {\r\n          //   if(data['status']){\r\n          //     this.showTable = true;\r\n          //     this.newsletterDetails = data['newsletter'];\r\n          //     this.collectionSize = data['newsletter'].length;\r\n          //     this.newsLetter.body = this.defaultTemplate;\r\n          //   }\r\n          // });\r\n        }\r\n      });\r\n    }\r\n\r\n    CopyNewsletter(id){\r\n      this.newsletterservice.copyNewsletter(id).then(data => {\r\n        if(data['status']){\r\n          this.snotifyService.success('Newsletter Copied Successfully', '', this.getConfig());\r\n          this.newsletterservice.getNewletterTimeLine(new Date().getTime()).then(data => {\r\n            if(data['status']){\r\n              this.showTable = true;\r\n              this.newsletterDetails = data['newsletter'];\r\n              this.collectionSize = data['newsletter'].length;\r\n              this.newsLetter.body = this.defaultTemplate;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    selectData(value){\r\n      this.SelectedTab = value.nextId;\r\n      if(value.nextId == 'normal'){\r\n        this.newsletterservice.getNewletter().then(data => {\r\n          if(data['status']){\r\n            this.newsletterDetails = [];\r\n            this.newsletterDetails = data['newsletter'];\r\n          }\r\n        });\r\n      }\r\n      else{\r\n        this.newsletterservice.getABTestingNewletter(new Date().getTime()).then(data => {\r\n          if(data['status']){\r\n            this.newsletterDetails = [];\r\n            console.log(data['newsletter']);\r\n            this.newsletterDetails = data['newsletter'];\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    responsive(classname){\r\n      // this.width = w;\r\n      document.getElementById('templateResponsive').innerHTML = this.newsLetter.body;\r\n      if(document.getElementById('templateResponsive').firstElementChild){\r\n        let elem = document.getElementById(\"templateResponsive\").firstElementChild;\r\n        elem.className = classname;\r\n      }\r\n    }\r\n\r\n    getConfig(): SnotifyToastConfig {\r\n      this.snotifyService.setDefaults({\r\n          global: {\r\n              newOnTop: this.newTop,\r\n              maxAtPosition: this.blockMax,\r\n              maxOnScreen: this.dockMax,\r\n          }\r\n      });\r\n      return {\r\n          bodyMaxLength: this.bodyMaxLength,\r\n          titleMaxLength: this.titleMaxLength,\r\n          backdrop: this.backdrop,\r\n          position: this.position,\r\n          timeout: this.timeout,\r\n          showProgressBar: this.progressBar,\r\n          closeOnClick: this.closeClick,\r\n          pauseOnHover: this.pauseHover\r\n      };\r\n    }\r\n}\r\n","module.exports = \"<section class=\\\"basic-elements\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t    <div class=\\\"col-md-6\\\">\\r\\n\\t        <div class=\\\"content-header\\\">Reports</div>\\r\\n\\t    </div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"card-header\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"card-title-wrap bar-success\\\">\\r\\n\\t\\t\\t\\t\\t\\t<p>{{reportCount}} Reports</p>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\r\\n\\t          <div class=\\\"card-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<ngb-tabset (tabChange)=\\\"selectData($event)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<ngb-tab title=\\\"Normal Campaign Reports\\\" id=\\\"normal\\\" active=\\\"SelectedTab == 'normal'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-template ngbTabContent>\\r\\n\\t\\t\\t\\t          \\t<ngx-datatable class=\\\"material\\\" class=\\\"bootstrap\\\" [rows]=\\\"reportDetails\\\" [columns]=\\\"columns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"50\\\" [sorts]=\\\"[{prop: 'date', dir: 'desc'}]\\\" [limit]=\\\"10\\\">\\r\\n\\t\\t\\t\\t              <ngx-datatable-column name=\\\"Status\\\">\\r\\n\\t\\t\\t\\t                  <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t\\t                      {{row.status}}\\r\\n\\t\\t\\t\\t                  </ng-template>\\r\\n\\t\\t\\t\\t              </ngx-datatable-column>\\r\\n\\t\\t\\t\\t              <ngx-datatable-column name=\\\"Newsletter Name\\\">\\r\\n\\t\\t\\t\\t                  <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t\\t                      {{getName(row.name)}}\\r\\n\\t\\t\\t\\t                  </ng-template>\\r\\n\\t\\t\\t\\t              </ngx-datatable-column>\\r\\n\\t\\t\\t\\t              <ngx-datatable-column name=\\\"Newsletter Sent\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{row.sent}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t                </ngx-datatable-column>\\r\\n\\t\\t\\t                <ngx-datatable-column name=\\\"Open Rate\\\">\\r\\n\\t\\t\\t                    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t                        {{row.openRate}}\\r\\n\\t\\t\\t                    </ng-template>\\r\\n\\t\\t\\t                </ngx-datatable-column>\\r\\n\\t\\t\\t                <ngx-datatable-column name=\\\"Bounce Rate\\\">\\r\\n\\t\\t\\t                    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t                        {{row.bounceRate}}\\r\\n\\t\\t\\t                    </ng-template>\\r\\n\\t\\t\\t                </ngx-datatable-column>\\r\\n\\t\\t\\t                <ngx-datatable-column name=\\\"Click Through rate\\\">\\r\\n\\t\\t\\t                    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t                        {{row.linkRate}}\\r\\n\\t\\t\\t                    </ng-template>\\r\\n\\t\\t\\t                </ngx-datatable-column>\\r\\n\\t\\t\\t                <ngx-datatable-column name=\\\"Last Sent\\\">\\r\\n\\t\\t\\t                    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t                        {{row.date | date: 'yyyy/MM/dd'}}\\r\\n\\t\\t\\t                    </ng-template>\\r\\n\\t\\t\\t                </ngx-datatable-column>\\r\\n\\t\\t\\t                <ngx-datatable-column name=\\\"Statistics\\\">\\r\\n\\t\\t\\t                    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t                        <a class=\\\"success p-0\\\" (click)=\\\"redirect(row.id);\\\"><i class=\\\"icon-bar-chart\\\"></i></a>\\r\\n\\t\\t\\t                    </ng-template>\\r\\n\\t\\t\\t                </ngx-datatable-column>\\r\\n\\t\\t\\t            \\t</ngx-datatable>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</ngb-tab>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- <ngb-tab title=\\\"A/B Testing Campaign Reports\\\" id=\\\"abtesting\\\" active=\\\"SelectedTab == 'abtesting'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-template ngbTabContent>\\r\\n\\t\\t\\t\\t          \\t<ngx-datatable class=\\\"material\\\" class=\\\"bootstrap\\\" [rows]=\\\"reportDetails\\\" [columns]=\\\"abtestingcolumns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"50\\\" [sorts]=\\\"[{prop: 'date', dir: 'desc'}]\\\" [limit]=\\\"10\\\">\\r\\n\\t\\t\\t\\t              <ngx-datatable-column name=\\\"Newsletter Name\\\">\\r\\n\\t\\t\\t\\t                  <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t\\t                      {{getName(row.name)}}\\r\\n\\t\\t\\t\\t                  </ng-template>\\r\\n\\t\\t\\t\\t              </ngx-datatable-column>\\r\\n\\t\\t\\t                <ngx-datatable-column name=\\\"A/B Testing On\\\">\\r\\n\\t\\t\\t                    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t                        {{row.abtestingOn}}\\r\\n\\t\\t\\t                    </ng-template>\\r\\n\\t\\t\\t                </ngx-datatable-column>\\r\\n\\t\\t\\t                <ngx-datatable-column name=\\\"Type A Rate\\\">\\r\\n\\t\\t\\t                    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template >\\r\\n\\t\\t\\t                        <p *ngIf=\\\"row.rateTrack == 'open'\\\">{{row.openARate}}</p>\\r\\n\\t\\t\\t                        <p *ngIf=\\\"row.rateTrack == 'click'\\\">{{row.clickARate}}</p>\\r\\n\\t\\t\\t                        <p *ngIf=\\\"row.rateTrack == 'unsubscriber'\\\">{{row.unsubscribeCountA}}</p>\\r\\n\\t\\t\\t                    </ng-template>\\r\\n\\t\\t\\t                </ngx-datatable-column>\\r\\n\\t\\t\\t                <ngx-datatable-column name=\\\"Type B Rate\\\">\\r\\n\\t\\t\\t                    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t                        <p *ngIf=\\\"row.rateTrack == 'open'\\\">{{row.openBRate}}</p>\\r\\n\\t\\t\\t                        <p *ngIf=\\\"row.rateTrack == 'click'\\\">{{row.clickBRate}}</p>\\r\\n\\t\\t\\t                        <p *ngIf=\\\"row.rateTrack == 'unsubscriber'\\\">{{row.unsubscribeCountB}}</p>\\r\\n\\t\\t\\t                    </ng-template>\\r\\n\\t\\t\\t                </ngx-datatable-column>\\r\\n\\t\\t\\t                <ngx-datatable-column name=\\\"Total Sent\\\">\\r\\n\\t\\t\\t                    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"row.status == 'pending'\\\">{{row.usera + row.userb}}</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"row.status == 'Sent'\\\">{{row.totalSent}}</p>\\r\\n\\t\\t\\t                    </ng-template>\\r\\n\\t\\t\\t                </ngx-datatable-column>\\r\\n\\t\\t\\t                <ngx-datatable-column name=\\\"Test Time\\\">\\r\\n\\t\\t\\t                    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"row.time == 30\\\">{{row.time}} min</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"row.time != 30\\\">{{row.time}} Hrs</p>\\r\\n\\t\\t\\t                    </ng-template>\\r\\n\\t\\t\\t                </ngx-datatable-column>\\r\\n\\t\\t\\t                <ngx-datatable-column name=\\\"Statistics\\\">\\r\\n\\t\\t\\t                    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\t\\t\\t                        <a class=\\\"success p-0\\\" (click)=\\\"abtestingStats(row.id);\\\"><i class=\\\"icon-bar-chart\\\"></i></a>\\r\\n\\t\\t\\t                    </ng-template>\\r\\n\\t\\t\\t                </ngx-datatable-column>\\r\\n\\t\\t\\t            \\t</ngx-datatable>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</ngb-tab> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t</ngb-tabset>\\r\\n\\t                    \\t<!-- <ngx-datatable #table class='bootstrap' [rows]=\\\"rows\\\" [columns]=\\\"columns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\"\\r\\n                            [rowHeight]=\\\"'auto'\\\" [limit]=\\\"10\\\"></ngx-datatable> -->\\r\\n\\t                        <!-- <table class=\\\"table table-responsive-sm\\\">\\r\\n\\t                            <thead>\\r\\n\\t                                <tr>\\r\\n\\t                                    <th>Status</th>\\r\\n\\t                                    <th>Newsletter Name</th>\\r\\n\\t                                    <th>Newsletter Sent</th>\\r\\n\\t                                    <th>Open Rate</th>\\r\\n\\t                                    <th>Bounce Rate</th>\\r\\n\\t                                    <th>Click Through rate</th>\\r\\n\\t                                    <th>Last Sent</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th></th>\\r\\n\\t                                </tr>\\r\\n\\t                            </thead>\\r\\n\\t                            <tbody>\\r\\n\\t                                <tr *ngFor=\\\"let reportData of reportData\\\">\\r\\n\\t                                    <td>{{reportData.status}}</td>\\r\\n\\t                                    <td>{{reportData.name}}</td>\\r\\n\\t                                    <td>{{reportData.sent}}</td>\\r\\n                        \\t\\t\\t\\t<td>{{reportData.openRate}}</td>\\r\\n\\t                                    <td>{{reportData.bounceRate}}</td>\\r\\n\\t                                    <td>{{reportData.linkRate}}</td>\\r\\n\\t                                    <td>{{reportData.date}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><a class=\\\"success p-0\\\" (click)=\\\"redirect(reportData.id);\\\"><i class=\\\"icon-bar-chart\\\"></i></a></td>\\r\\n\\t                                </tr>\\r\\n\\t                            </tbody>\\r\\n\\t                        </table> -->\\r\\n              </div>\\r\\n        \\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</section>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhbXBhaWduL3JlcG9ydHMvcmVwb3J0cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { StatisticsService } from '../../shared/data/statistics.service';\r\nimport { DatatableComponent } from \"@swimlane/ngx-datatable/release\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-reports',\r\n  templateUrl: './reports.component.html',\r\n  styleUrls: ['./reports.component.scss']\r\n})\r\nexport class ReportsComponent implements OnInit {\r\n\tpublic reportCount = 0;\r\n\treportDetails = [];\r\n\tcolumns = [\r\n      { name: 'Status' },\r\n      { name: 'Newsletter Name' },\r\n      { name: 'Newsletter Sent' },\r\n      { name: 'Open Rate' },\r\n      { name: 'Bounce Rate' },\r\n      { name: 'Click Through Rate' },\r\n      { name: 'Last Sent' },\r\n  ];\r\n  abtestingcolumns = [\r\n    { name: 'Name' },\r\n    { name: 'A/B Testing On' },\r\n    { name: 'Type A Open' },\r\n    { name: 'Type B Open' },\r\n    { name: 'Total Sent' },\r\n    { name: 'Test Time' }\r\n  ]\r\n\r\n  @ViewChild(DatatableComponent) table: DatatableComponent;\r\n  SelectedTab = '';\r\n\r\n  constructor(public statisticsservice: StatisticsService, private router: Router, private route: ActivatedRoute) {\r\n      this.SelectedTab = 'normal';\r\n    }\r\n\r\n  \tngOnInit() {\r\n  \t\tthis.statisticsservice.getreports().then(data => {\r\n\t        console.log(data['reports']);\r\n\t        if(data['status'] == 'success'){\r\n\t\t        this.reportCount = data['reports'].length;\r\n\t\t        /*for (let i = 0; i < data['reports'].length; i++) {\r\n\t\t        \tlet array = {\r\n\t\t        \t\tStatus : data['reports'][i]['status'],\r\n\t\t\t\t\t\tNewsletterName : data['reports'][i]['name'],\r\n\t\t\t\t\t\tNewsletterSent : data['reports'][i]['sent'],\r\n\t\t\t\t\t\tOpenRate : data['reports'][i]['openRate'],\r\n\t\t\t\t\t\tBounceRate : data['reports'][i]['bounceRate'],\r\n\t\t\t\t\t\tClickThroughrate : data['reports'][i]['linkRate'],\r\n\t\t\t\t\t\tLastSent : data['reports'][i]['date']\r\n\t\t        \t}\r\n\t\t        \tthis.reportDetails.push(array);\r\n\t\t        \t//this.reportDetails = data['reports'];\r\n\t\t        }*/\r\n\t\t\t\tthis.reportDetails = data['reports'];\r\n\t\t        //this.rows = this.reportDetails;\r\n\t\t    }\r\n\t    },\r\n\t    error => {\r\n\t    });\r\n  }\r\n\r\n  getName(name){\r\n    if (!name) return '';\r\n   if (name.length <= 20) {\r\n        return name;\r\n    }\r\n\r\n    return name.substr(0, 20) + '...';\r\n  }\r\n\r\n  redirect(id){\r\n\t  this.router.navigate(['/statistics'],{queryParams:{id:window.btoa(id+\"$reportEdit\")}});\r\n  }\r\n\r\n  abtestingStats(id){\r\n    let val = ((id * 1080) / 8000);\r\n\t  this.router.navigate(['/campaign/abtestingStatics'],{queryParams:{id:window.btoa(val.toString())}});\r\n  }\r\n\r\n  selectData(value){\r\n    this.SelectedTab = value.nextId;\r\n    if(value.nextId == 'normal'){\r\n      this.statisticsservice.getreports().then(data => {\r\n          console.log(data['reports']);\r\n          if(data['status'] == 'success'){\r\n            this.reportCount = data['reports'].length;\r\n            this.reportDetails = data['reports'];\r\n          }\r\n      },\r\n      error => {\r\n      });\r\n    }\r\n    else{\r\n      this.statisticsservice.getabtestingReports(new Date().getTime()).then(data => {\r\n          console.log(data['reports']);\r\n          if(data['status'] == 'success'){\r\n            this.reportCount = data['reports'].length;\r\n            this.reportDetails = data['reports'];\r\n          }\r\n      },\r\n      error => {\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}