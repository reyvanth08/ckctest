{"version":3,"sources":["webpack:///./src/app/shared/directives/match-height.directive.ts","webpack:///./src/app/subscription/subscription-routing.module.ts","webpack:///./src/app/subscription/subscription.component.html","webpack:///./src/app/subscription/subscription.component.scss","webpack:///./src/app/subscription/subscription.component.ts","webpack:///./src/app/subscription/subscription.module.ts"],"names":[],"mappings":"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","file":"subscription-subscription-module.js","sourcesContent":["import {\r\n    Directive, ElementRef, AfterViewInit,\r\n    Input, HostListener, NgModule\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[matchHeight]'\r\n})\r\nexport class MatchHeightDirective implements AfterViewInit {\r\n    // class name to match height\r\n    @Input()\r\n    matchHeight : string;\r\n\r\n    constructor(private el: ElementRef) {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // call our matchHeight function here\r\n        setTimeout(() => { this.matchHeights(this.el.nativeElement, this.matchHeight )}, 300);\r\n    }\r\n\r\n    matchHeights(parent: HTMLElement, className: string) {\r\n        // match height logic here\r\n\r\n        if (!parent) return;\r\n\r\n        // step 1: find all the child elements with the selected class name\r\n        const children = parent.getElementsByClassName(className);\r\n\r\n        if (!children) return;\r\n\r\n        //PIXINVENT - Match hight - fix --- comment below code\r\n        Array.from(children).forEach((x: HTMLElement) => {\r\n            x.style.height = 'initial';\r\n        });\r\n\r\n        // step 2a: get all the child elements heights\r\n        const itemHeights = Array.from(children)\r\n            .map(x => x.getBoundingClientRect().height);\r\n\r\n        // step 2b: find out the tallest\r\n        const maxHeight = itemHeights.reduce((prev, curr) => {\r\n            return curr > prev ? curr : prev;\r\n        }, 0);\r\n\r\n        // step 3: update all the child elements to the tallest height\r\n        Array.from(children)\r\n            .forEach((x: HTMLElement) => x.style.height = `${maxHeight}px`);\r\n    }\r\n\r\n    @HostListener('window:resize')\r\n    onResize() {\r\n        // call our matchHeight function here\r\n        this.matchHeights(this.el.nativeElement, this.matchHeight );\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    declarations: [MatchHeightDirective],\r\n    exports: [MatchHeightDirective]\r\n})\r\n\r\nexport class MatchHeightModule { }","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SubscriptionComponent } from \"./subscription.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        // path: '',\r\n        // children: [{\r\n        //     path: 'cards',\r\n        //     component: CardsComponent\r\n        // }\r\n        // ]\r\n        path: '',\r\n        component: SubscriptionComponent,\r\n       data: {\r\n         title: 'Subscription'\r\n       },\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class SubscriptionRoutingModule { }","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <div class=\\\"content-header\\\">Subscription</div>\\r\\n    </div>\\r\\n</div>\\r\\n<section id=\\\"ngx\\\">\\r\\n    <div class=\\\"card\\\" *ngIf=\\\"!viewForm\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <p>List of Subscriptions</p>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\" style=\\\"text-align: right;\\\">\\r\\n                    <p>\\r\\n                        <a class=\\\"btn btn-social btn-round btn-min-width mr-2 mb-2 btn-outline-bitbucket right\\\" (click)=\\\"addSubscription()\\\"><span class=\\\"ft-plus\\\"></span>Add Subscription</a>\\r\\n                    </p>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"card-block\\\">\\r\\n                    <ngx-datatable #table class='bootstrap' [rows]=\\\"rows\\\" [columns]=\\\"columns\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [limit]=\\\"10\\\"></ngx-datatable>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card\\\" *ngIf=\\\"viewForm\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"card-block\\\">\\r\\n                <form  [formGroup]=\\\"personalForm\\\" class=\\\"editForm\\\" novalidate>\\r\\n                            <!-- <h4 class=\\\"head text-center\\\">Select the type of Subscription</h4>\\r\\n                            <br/> -->\\r\\n                            <div class='row'>\\r\\n                                <div class='col-12'>\\r\\n                                \\t<div class=\\\"form-group\\\">\\r\\n                                        <label class=\\\"form-control-label\\\" for=\\\"type\\\">Subscription Type</label>\\r\\n                                        <input class=\\\"form-control input-md\\\" required formControlName=\\\"type\\\" type=\\\"text\\\">\\r\\n                                        <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!personalForm.get('type').valid && (personalForm.get('type').dirty || personalForm.get('type').touched)\\\">This field is required!</small>\\r\\n                                    </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n                                        <label class=\\\"form-control-label\\\" for=\\\"campaign\\\">Maximum Campaign</label>\\r\\n                                        <input class=\\\"form-control input-md\\\" required formControlName=\\\"campaign\\\" type=\\\"number\\\">\\r\\n                                        <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!personalForm.get('campaign').valid && (personalForm.get('campaign').dirty || personalForm.get('campaign').touched)\\\">This field is required!</small>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label class=\\\"form-control-label\\\" for=\\\"members\\\">Maximum Members</label>\\r\\n                                        <input class=\\\"form-control input-md\\\" required formControlName=\\\"members\\\" type=\\\"number\\\">\\r\\n                                        <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!personalForm.get('members').valid && (personalForm.get('members').dirty || personalForm.get('members').touched)\\\">This field is required!</small>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"form-group text-center\\\">\\r\\n                                    \\t<button type=\\\"submit\\\" class=\\\"btn btn-danger btn-raised mr-1\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-success btn-raised\\\" (click)=\\\"saveSubscription()\\\" [disabled]=\\\"!personalForm.valid\\\">Save <i *ngIf=\\\"submitted\\\" class=\\\"fas fa-spinner fa fa-spin\\\"></i></button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1YnNjcmlwdGlvbi9zdWJzY3JpcHRpb24uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators, NgForm } from '@angular/forms';\r\nimport { DatatableComponent } from \"@swimlane/ngx-datatable/release\";\r\n\r\nimport { SubscriptionService } from '../shared/data/subscription.service';\r\n\r\n@Component({\r\n  selector: 'app-subscription',\r\n  templateUrl: './subscription.component.html',\r\n  styleUrls: ['./subscription.component.scss']\r\n})\r\nexport class SubscriptionComponent implements OnInit {\r\n\tpersonalForm: FormGroup;\r\n\tpublic subscriptionList;\r\n\tpublic subscribers = [];\r\n\tpublic submitted: boolean = false;\r\n\trows;\r\n\tpublic viewForm: boolean = false;\r\n\tcolumns = [\r\n        { prop: 'type' },\r\n        { prop: 'noOfCampaign' },\r\n        { prop: 'noOfMembers' }\r\n    ];\r\n\r\n    @ViewChild(DatatableComponent) table: DatatableComponent;\r\n\t\r\n\tconstructor(public subscriptionService: SubscriptionService) {\r\n\t\tthis.subscriptionService.getSubscription(new Date().getTime()).then(data => {\r\n\t\t\tthis.subscriptionList = data['subscription'];\r\n\t\t\tif(data['subscription']){\r\n\t\t\t\tfor (let i = 0; i < data['subscription'].length; i++) {\r\n\t\t\t\t\tlet array = {\r\n\t\t\t\t\t\ttype: data['subscription'][i]['type'],\r\n\t\t\t\t\t\tnoOfCampaign: data['subscription'][i]['campaign'],\r\n\t\t\t\t\t\tnoOfMembers: data['subscription'][i]['members']\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.subscribers.push(array);\r\n\t\t\t\t}\r\n\t\t\t\tthis.rows = this.subscribers;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.personalForm = new FormGroup({\r\n\t\t\t'type': new FormControl(null, [Validators.required]),\r\n\t\t\t'campaign': new FormControl(null, [Validators.required]),\r\n\t\t\t'members': new FormControl(null, [Validators.required])\r\n\t    }, {updateOn: 'blur'});\r\n\t}\r\n\t\r\n\taddSubscription(){\r\n\t\tthis.viewForm = true;\r\n\t\tthis.personalForm.reset();\r\n\t}\r\n\r\n\tcancel(){\r\n\t\tthis.viewForm = false;\r\n\t\tthis.personalForm.reset();\r\n\t}\r\n\r\n\tsaveSubscription(){\r\n\t\tthis.submitted = true;\r\n\t\tlet subscriptionDetail = {\r\n\t\t\t'type': this.personalForm.controls['type'].value,\r\n\t\t\t'campaign': this.personalForm.controls['campaign'].value,\r\n\t\t\t'members': this.personalForm.controls['members'].value\r\n\t\t}\r\n\t\tthis.subscriptionService.saveSubscription(subscriptionDetail).then(data => {\r\n\t\t\tif(data['status']){\r\n\t\t\t\tconsole.log('Came here!');\r\n\t\t\t\tthis.submitted = false;\r\n\t\t\t\tthis.viewForm = false;\r\n\t\t\t\tthis.subscribers = [];\r\n\t\t\t\tthis.rows = [];\r\n\t\t\t\tthis.subscriptionService.getSubscription(new Date().getTime()).then(data => {\r\n\t\t\t\t\tthis.subscriptionList = data['subscription'];\r\n\t\t\t\t\tif(data['subscription']){\r\n\t\t\t\t\t\tfor (let i = 0; i < data['subscription'].length; i++) {\r\n\t\t\t\t\t\t\tlet array = {\r\n\t\t\t\t\t\t\t\ttype: data['subscription'][i]['type'],\r\n\t\t\t\t\t\t\t\tnoOfCampaign: data['subscription'][i]['campaign'],\r\n\t\t\t\t\t\t\t\tnoOfMembers: data['subscription'][i]['members']\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.subscribers.push(array);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.rows = this.subscribers;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { GooglePlaceModule } from \"ngx-google-places-autocomplete\";\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { SubscriptionRoutingModule } from \"./subscription-routing.module\";\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatchHeightModule } from \"../shared/directives/match-height.directive\";\r\nimport { SubscriptionComponent } from \"./subscription.component\";\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { UiSwitchModule } from 'ngx-ui-switch';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        SubscriptionRoutingModule,\r\n        NgxChartsModule,\r\n        NgbModule,\r\n        MatchHeightModule,\r\n        FormsModule,\r\n        UiSwitchModule,\r\n        GooglePlaceModule,\r\n        ReactiveFormsModule,\r\n        NgxDatatableModule\r\n    ],\r\n    declarations: [\r\n        SubscriptionComponent,\r\n   ]\r\n})\r\nexport class SubscriptionModule { }\r\n"],"sourceRoot":""}